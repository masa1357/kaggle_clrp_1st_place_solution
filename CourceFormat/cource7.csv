userid,1,2,3,4,5,6,7,8,target
B-2020_U10,,,,,,"""There are various dangers (spoofing, fraud, criminal use, etc.) hidden in the Internet that are unimaginable in the real world, and careless remarks and transmissions can lead to unintended consequences. I realized that I have to be careful with my behavior.""","""I didn't really understand the difficult topics such as the origin of each law and the mechanism of RSA encryption and Elmagal encryption.""",,0
B-2020_U13,"""Attacks that do not use ICT, anonymity of various SNSs, and hijacking of ICT environments""",,,,,,,,1
B-2020_U14,"""Various threats related to ICT and their countermeasures""","""I learned that complete anonymity on the Internet is not guaranteed, and malicious attacks can be identified.""",,,,,"""I didn't know what the minimum level of knowledge about encryption technology for protecting information was for ordinary people to use the Internet safely.""",,1
B-2020_U15,"""Information such as passwords can be exposed by eavesdropping or targeting weaknesses in human relationships. It is easy to identify individuals from SNS information. Once information is posted on the Internet, it is widely circulated. It can never be erased.Chain mail is sent from acquaintances, so it is easy to trust it, but it is important not to believe it right away.There are services that can be used anonymously on the Internet, but you can identify them from your IP address. It is possible to do so.It is important not to behave as you please just because you are anonymous, but it is important to behave in the same way in reality and on the Internet.Protect your password because if your account is hijacked, your acquaintances will be harmed. It is important to take measures such as","""I realized that I must be aware of ICT threats not only in countermeasures against threats inside the terminal, but also in real life. I learned that it is easy to identify individuals from SNS information. Egosearch I found it to be effective in finding out how far my information is circulating, and I found that if a Bitcoin exchange outside the P2P network was attacked, I could lose my Bitcoin. I realized that it would be difficult to completely erase the information on the device.I learned that each device has an IP address, which is something like an address.""","""No.""",,,,,"""I was able to take the course without any problems in terms of audio and access to moodle. Moodle has a lot of functions, and the teacher understands what I didn't understand in the preparation and explains it in class, so it was efficient. I feel that I was able to advance my learning. Thank you for the seven classes.""",1
B-2020_U16,,"""・ How IP addresses work ・ Even if it's an analogue method, it's easy to steal personal confidential information (social engineering)""","""Distinction between threats that use/do not use ICT""",,,,,"""As technology develops, I think it will be an issue in the future that there will always be cases of exploiting and exploiting even the slightest vulnerabilities. That is why, in order to face these issues appropriately, I will acquire a variety of knowledge in this lecture."" It was a good opportunity for me to acquire it.Even considering the actual experience and the current situation, I feel that there are still some weak points in security etc. I want to change the proper way to handle .""",0
B-2020_U17,,,,,,"""In order to protect your information terminal, it is necessary to properly manage both software and hardware to prevent malware intrusion. It is safe to keep the OS and applications up to date. In order to protect your account on the service, it is better to take measures such as setting a password that only you understand or an answer that is unrelated to the question, and avoid using untrusted communication lines. Encryption technology is also evolving to protect the above information.However, individual awareness of information, such as information ethics, research ethics, and awareness of copyright protection, is equally important.In using ICT, , We should be careful not to send information carelessly through SNS or email.""",,,0
B-2020_U18,,,,,,"""Considering which is more risky, the browser's password saving function or the reuse of the same password, the former is clearly more secure against statements that can be attacked from the outside.""",,,1
B-2020_U19,"""This time was a review of what I had learned so far. Security problems caused by human carelessness, problems related to passwords and personal information, social trust, familiar Internet threats, etc. Important things are real even on the Internet. I learned that protecting morals in society is important when transmitting information.""","""After all, I was able to think that it is a problem that threats targeting human carelessness and openings will not decrease.""","""Is My Number a system that chose convenience and not privacy? I didn't quite understand it.""",,"""I'm glad I made it to the end. It's frustrating that I made a lot of mistakes in the quiz, but I'm happy that I learned a lot of useful knowledge for my future studies.""","""I've come to think that social engineering is the number one threat. Security and threats are in a cat-and-mouse game, and I don't think the sentiment will change that much. It's because I learned about threats and understood personal countermeasures.""","""I wasn't sure if I would lose my backups. After the lecture, I don't feel like I don't know.""",,0
B-2020_U20,"""Threats that don't use ICT include ""It's me"" scams and chain mails. The importance of anonymity and the fact that you can still be exposed to threats. Be careful as the ICT environment can be hijacked.""",,,,,,,,0
B-2020_U21,,,"""As much as the content was familiar and easy to understand, there was a lot of information and I had prejudices from the beginning, so there were some parts that I could not fully understand during the preparation and class time.""",,,,,,-1
B-2020_U22,,"""I was able to understand the technology for security and its advantages and disadvantages.""",,,"""In this class, I was able to confirm and organize the knowledge I learned in the previous lectures, so I would like to continue researching social security on my own.""","""The first step to improve the quality of security is to make safe settings by yourself. It is also important to understand information security mechanisms such as cryptography and the Cyber ​​Security Basic Act, as well as information ethics. may be updated on a daily basis, so it is necessary to check without fail.""",,"""At first, I was worried, but the explanations were very thorough, and the related materials were also posted, so it was easy to learn.""",1
B-2020_U23,,"""Every device that connects to the internet must have an IP address.""","""Nothing in particular""","""Nothing in particular.""",,,"""Nothing in particular.
""","""There were no inconveniences at all.""",0
B-2020_U24,,,,,,,,"""I was grateful for the online classes because I had more time for myself, but I felt that I didn't have enough time to talk with my classmates about the content of the classes, so face-to-face classes would be preferable if possible. I think the quality of the online classes was good. """,0
B-2020_U25,"""The content of this time was a summary of the content so far.""",,,,,,,"""I think the use of the OK/Don't know button was good because it saved a lot of lecture time. I think it would be interesting for students to be able to see other people's OK/Don't know situations.""",0
B-2020_U26,"""To survive in the ICT society""",,,,,,,,0
B-2020_U27,,,,,,"""The existence of malicious sites called malware - The fact that anti-virus software only reacts to existing malware - The fact that there is something called a password hash that prevents passwords from being stored on the server as is - Who provided it? It is better not to use wireless LAN if you don't know whether it is safe or not. ・In peer review of research, there is a system that allows fair evaluation of single-blind and double-blind. ・Personal information is not consistent with privacy. , that it accompanies thought""",,,-1
B-2020_U29,"""Social science
Threats that do not use ICT can cause damage to yourself, your relatives, and the ICT environment.""","""There are attacks that do not use ICT, such as memorizing other people's passwords, etc., and there is a possibility that fraud damage, hijacking, unauthorized access, etc.
Individuals may be identified by combining information from multiple accounts.
Anonymous doesn't mean you can't be identified
If you ask your provider for the history of the IP address of the server, you will find out whose terminal it is (however, it takes time and effort)
Kyushu University is itself a provider, so if a student causes a problem with a Kyushu University-related ID, Kyushu University can investigate.
If your ID and password are leaked, your ICT may be hijacked.""",,,,,,,1
B-2020_U31,"""Today, I learned about the social sciences in a sort of general summary. I learned that there are many dangers in dealing with information and networks, and how to deal with them.""","""When dealing with information, it is important to properly judge whether or not the information is highly secure. Also, when I am the sender, I always keep in mind that I am posting information in an open space, and I Avoid exposing information about people who are important to you.""",,,,,,"""It was great to be able to prepare for the lesson and easily tell the teacher what I didn't understand. Also, I was told that it would be sent anonymously, so I was able to attend without any hesitation. Although it was remote, the speed of the lesson was good. It was just right.""",1
B-2020_U32,"""With regard to threats that do not use ICT, there are those in which personal information is stolen through social engineering such as deceiving people, taking advantage of opportunities, and peeping. Countermeasures against various social attacks include telephone So, there are things like asking back properly (it's me fraud), identity verification, passwords that are difficult to understand, be careful not to be seen by someone when you enter them, use biometric authentication, etc. In information services, you hide your real name. It is unreliable because it is in a state where it is in a state where it is unreliable.In addition, there may be situations where you do not know who you really are, or who I am writing this.However, this anonymity does not allow you to use your time and authority. It is not protected by default and can be identified in most cases.If your username and password are stolen, your account will be hijacked.Therefore, protect your username and password appropriately, use antivirus, and use a computer or smartphone. In addition, in order not to be deceived when someone you know is hijacked, do not panic even if you are told it is urgent, contact the other party by other means, or check with a mutual acquaintance. It's important not to immediately respond to the other person's request, such as looking at it.""",,,,"""I heard that some people like to identify other people, but I really hope they have other hobbies that are more harmless and fun.""","""When using the Internet, it is necessary to protect yourself on your own, do not approach suspicious sites, do not download or install carelessly, be careful with e-mail attachments and links, do not provide personal information carelessly. , If you think something is suspicious, consult with a friend or teacher who knows about your password, prevent password leaks, and (beware of social engineering, make it complicated), especially in your daily life. I learned a lot of other things this time, but apart from the lecture content, there are some things that require more in-depth study, such as law and cryptography, so I have to understand everything before using the Internet. I don't think it's possible, so when I feel suspicious or I don't understand something, I don't act hastily, but I want to keep talking to people.""",,"""I think the style of changing the amount of explanation by using buttons that I understand and don't understand is very rational and good.""",0
B-2020_U34,"""Threats that do not use ICT include social engineering and fraud.
Also, there are loopholes in biometric authentication, and there is a danger that individuals can be identified from various information on SNS. Other threats include bitcoin theft, information spread, chain mail, and personal identification from My Number.
Anonymity on the Internet is not necessarily protected, and it is also possible to identify a person. From the IP address and photo, you can see who has done a nuisance or illegal act.
Nuisance behavior includes spoofing and hijacking, and it is important to determine whether it is genuine. Also, linking with Twitter, FB, etc. is an effective means of increasing security. """,,,,,"""Since we, who use the Internet as a matter of course, are involved in cyber security crimes, we must never think that it is someone else's problem, and must be conscious of not being involved in such crimes or committing them on a daily basis.""",,,1
B-2020_U36,"""Notes on coexisting with the Internet""",,,,"""I just wanted to keep in mind that only I can protect my information.""","""Now that we have to live with the Internet, I see the need to have a clear understanding of what is right and what is wrong.""",,,1
B-2020_U38,"""Attacks targeting people without using ICT, 'anonymity' in various information services, 'spoofing' and 'hijacking', and specific past examples of these. """,,,,,,"""There are still some areas where the distinction between symmetric-key cryptography and public-key cryptography has not yet been established. The field of cryptography was difficult.""",,0
B-2020_U39,,,,,"""I also use SNS frequently, so I thought I should be careful about hijacking, impersonation, and identification. Also, there are often false rumors that are just like that, so I don't know the sender. I will always keep that in mind and be careful not to blindly believe any information.""","""To protect personal information and accounts, passwords should not be short or easy to guess, and should be long with as many characters as possible. Communication is protected by various technologies and laws. However, there are people who take advantage of such things to send viruses using fake URLs or fake emails, or use analog methods to make attacks that are difficult to countermeasures. It is important to take measures with",,,1
B-2020_U4,"""There are many ICT attacks that do not use ICT around us.
Attacks that target people include peeping, fraud, and personal identification based on information on SNS and personality tests. Countermeasures include setting strong passwords, using biometric authentication, and media literacy.
It is necessary to protect not only the security of the main unit, such as the security of the bitcoin exchange system and the security of outsourcing contractors.
Information entered on the Internet cannot be erased, so it is necessary to be careful about handling privacy and personal identification.
Many people should be aware of the existence of chain mails and targeted e-mails that use the information diffusion power of the Internet.
The anonymity of information services seems to be guaranteed by the ability to hide real names, but individuals can be identified from IP addresses and writing histories. Don't get carried away. On the other hand, some people use this factor to try to impersonate or take over, so the security of personal network environment is important. """,,,"""If you follow SNS, you will find friends of friends, but is it possible to connect with a complete stranger through that? The only difference is whether you follow or not. Are they connected?
Isn't it impossible to use social media safely? ""","""Tattoos look painful, so I don't want to get them digitally.
Compared to the first time, my knowledge of information deepened, so I was able to pay more attention to security. ""","""It is important that passwords are long, hard to guess, and not reused. Passwords are essential to protect information on the server, and a system called password hashing is used to prevent password leaks. Security creation side must constantly respond to new modus operandi, such as security by design.
Cyberattackers try to steal passwords and personal information using phishing, supply chains, malware, dictionary attacks, and more.
Cryptographic techniques for safely transmitting information have been studied for many years. The basic principle is that the rules for encryption and decryption are determined, and only those who know the rules can access the information. A one-way function is applied.
Cybersecurity is guaranteed by law. With the advent of IT, the scope of the law continues to expand, including prohibition of unauthorized access, regulation of specific e-mails, prevention of unfair competition, and protection of personal information. Regulations for telecommunications and radio waves are also stipulated by law.
Research ethics, information ethics, and copyright are also important in university research and work. Moral rights and copyright guarantee the rights of the person who created the work for a certain period of protection. Therefore, correct scientific verification is essential in research so as not to be suspected of plagiarism. To avoid suspicion of forgery or falsification, do not forget to check through peer reviews, etc. Evaluators must always be mindful not to lose objectivity, such as conflicts of interest. """,,,1
B-2020_U40,,"""It's dangerous if personal information is casually omitted or if information is sent out without thinking.""","""I understand that personal information can be exposed from photos, but how much information can be extracted from various information?It is also possible to collect information by making full use of Yahoo Chiebukuro, so it is very important. Can you get different kinds of information from the details?""",,,,"""When it comes to security, self-defense is extremely important, but I don't think it's good if you become overly sensitive. As long as you don't have a clear guideline, you don't know your limits.""","""On the other hand, online lectures can be taken at home at will, but on the other hand, there are both good and bad aspects, such as a tendency to lose concentration in class.",1
B-2020_U41,"""No matter how advanced the technology for protecting cyber security is, the final bastion is protected by the behavior of the people who handle it. Human behavior is a major barrier and weakness in living in a digital society. can also be",,,,,"""It is necessary to set individual passwords for your computer, smartphone, and the applications in it, and it is desirable to have a backup. Also, prepare for what to do in case you lose your device. It is also necessary to keep in mind that actions that violate information ethics will be punished by law.When writing papers in the future, I will have to be careful about copyrights and the like, and I will have to be careful about handling references and related research.""","""A specific example of copyright law.
How modern complex cryptosystems work. """,,-1
B-2020_U43,"""Danger exists whether ICT is used or not""",,,,,,"""Sometimes the quiz context was difficult.""",,1
B-2020_U44,,,,,,"""In the early classes, for example, if there is an update for your smartphone, you will be more susceptible to viruses if you don't update it, and don't reuse passwords. I'm glad that I was able to experience unexpected dangers. I will use what I learned this time to avoid being victimized as much as possible in the future.""","""Knowing the law and copyright were not very familiar to my daily life, so my overall understanding was shallow.""",,-1
B-2020_U45,,,,,,"""I was able to know that there are two types of secure password settings and Wi-Fi.
I also learned the word conflict of interest in a research ethics class. """,,,0
B-2020_U47,,,,,,"""Nowadays, the Internet has become very convenient, but there are various dangers associated with it, so I learned that there are various measures to prevent them.""",,,0
B-2020_U5,,"""Being in an ICT environment is quite familiar these days, but I learned that it is important to know about various threats so that I can stay safe even when I am no longer in that environment. Biometric authentication is easier than I thought. We know there is a threat.""","""I found it scary because there are threats lurking everywhere, and sometimes I get emails that I'm not sure are really coming from the right place, so I wanted to be able to identify those threats.""",,,,,"""I thought it was difficult to stay focused because I was taking online classes at home.However, in this lecture, which has a button-pressing system, it seems that you can participate by pressing a button at the preparation stage. It was good to be able to clarify what I wanted to hear during the lecture by bookmarking what I didn't understand.It would be even better if you could see it just by accessing the page without opening the memo. I thought.""",0
B-2020_U50,"""Internet crimes are carried out using various methods. Not only protecting the ICT environment, but also the real environment should be concerned about information leaks. It is necessary to use the Internet keeping in mind that there is a possibility that","""Your IP address is sent to a server when you connect to the net.""",,,"""I'm glad I learned how to apply what I've learned in class to society.""","""In the Internet world, encryption and signature technologies are used to block malicious programs and sites in order to protect security. However, instead of completely trusting the system, pay attention to password management other than ICT. should pay.""","""I wanted to know what the security situation was like overseas.""",,0
B-2020_U52,"""Understand threats that do not use ICT, and understand the anonymity and danger of hijacking in the ICT environment.""","""I learned what to be careful about against threats that do not use ICT, and what to be careful about and what not to do to protect your information in an ICT environment.""",,,,,,"""It was very helpful to have slides on how to check security on iPhone and Mac and how to set it up when taking security measures.""",0
B-2020_U53,"""Cheating without using ICT, problems on SNS""",,,,,,,"""Some subjects ended without me knowing the teacher's face, so I feel a bit lonely. It's hard to keep my concentration. I sometimes ended up taking classes while doing other things. Missing classes because I forgot to update my moodle."" There were several times, and I was in trouble.""",1
B-2020_U54,,"""It was easy to understand because there were many similarities with the contents so far. I was able to reaffirm the importance of handling personal information.""","""I didn't understand bitcoin very well.""",,,,,"""Compared to other classes, I think it was a more efficient class thanks to the functions of the buttons that I understood.",0
B-2020_U55,,,,,,,"""I had a vague understanding of encryption technology related to hash functions, but I didn't really understand what was going on.""",,0
B-2020_U56,,,"""Something I understand.""",,"""Thank you for what you have done.""","""How to use ICT safely""",,"""We were very grateful for your consideration of our learning.""",-2
B-2020_U58,,,"""None.""",,,,,,0
B-2020_U59,"""Cyber-attacks have threats such as attacks that target people, anonymity, spoofing, and hijacking. If you are not careful, your information may be stolen in unexpected ways. It is important to leave the company calmly by taking confirmation.""","""I found out that information can be extracted even in the case of 〇〇 diagnosis. I found out that it is unexpectedly easy to identify an individual.""",,,,,"""There are many laws related to cybersecurity, and it was difficult to know what role each law should play.""","""I'm glad you answered my question. I think your last question was probably about trying to use someone else's photo for a work that was only done during class time.
The class was also easy to understand. I feel a little sad when it ends. thank you very much. """,1
B-2020_U6,"""Various dangers when using ICT.""","""We found that individuals can be identified from diagnostic sites, and chain mails may be sent through acquaintances.""",,,"""The Internet and SNS are very basic, but there is a high risk of being misused, so I wanted to be careful when using them. Also, as technology progresses, I think new measures will be necessary. , I want to make sure I know the latest information.""","""As the Internet society progresses, various measures are being taken to protect important information such as personal information, but the methods of abuse are also progressing.""",,,1
B-2020_U60,,,,,"""For those of us who use SNS a lot, attacks such as spoofing and understanding of anonymity are very familiar issues, so it was very helpful.""",,,,0
B-2020_U62,,,"""Nothing in particular""","""Nothing in particular""",,"""In order to protect your information, it is important to think and act on your own, such as using biometric authentication and complex passwords, and updating frequently.""",,,0
B-2020_U63,"""Specific Examples of Cyber ​​Crime""",,,,"""My quiz score wasn't very good.""","""Until now, I've been using IDs and passwords for various SNS accounts, but I realized that it was a dangerous favor, so I want to quit now.""",,"""Thank you very much for creating the slides and for the Teams lectures over the course of the 7 classes. It was very easy to understand each time.""",-2
B-2020_U64,,,,,,"""Now I know what the law on personal information is""","""I didn't really understand the distinction between the three elements that make up information security.""","""I want face-to-face classes to start soon.""",-1
B-2020_U65,"""On the Internet, due to social attacks, etc., accounts and emails such as SNS are hijacked, passwords are stolen, personal information is stolen, and people become victims of chain emails. In addition, misinformation can be spread through techniques such as impersonation.""",,,,,,"""When using the Internet, there are various laws that must be observed, such as the Basic Act on Cyber ​​Security and the Act on Prohibition of Unauthorized Computer Access, and I still do not have a deep understanding of those laws.""","""It was online, but it was easy to understand with a polite explanation.""",0
B-2020_U66,"""Understanding non-ICT threats, understanding hijacking and authenticity of anonymity""","""Anonymity should not be over-trusted. If a password consists of 10 digits and alphanumeric characters, it will take 67 years to analyze it.""",,,,"""I remember the Dos attack the most. I always see the reason why Moodle stops working at 13:00 and right before the assignment deadline is because Kyushu University students are doing a Dos attack.""",,"""Personally, rather than studying physics, I feel that cyber security is more useful and important in life in the Internet society, so I enjoyed taking the quiz. There were times when I didn't understand the finer differences, so I thought I had to understand it properly and be careful.""",-1
B-2020_U68,,,,,"""I will continue to pay attention to how I use SNS.""","""I learned about safe settings for cyber security, ciphertext technology, research and information ethics in handling information, copyrights and related laws, and this threat that does not use ICT.""","""There were some details I didn't understand, such as the detailed explanation of encryption technology, but I understood the basics.""",,1
B-2020_U69,"""It is important to manage your SNS and terminals without letting your guard down just because you have a password.""",,,"""Nothing special""","""Even in an emergency, I felt the importance of carefully selecting and incorporating the emails and information I receive.""",,,,0
B-2020_U70,,"""I was able to understand the threats on SNS.""",,,"""I was able to reconfirm the dangers of SNS, which has become indispensable in our lives. I think it's up to you how you use it, so I want to use it responsibly.""","""It was great to learn things I didn't know before about how to create secure passwords and encryption techniques.""",,,0
B-2020_U71,,,,,,,,"""Thank you for all the 7 lessons. I was able to learn about the threats of the Internet, which are very familiar to us, and how to use them properly. Thank you very much.""",-1
B-2020_U72,,"""It is almost impossible to be completely anonymous""",,,,,,,-1
B-2020_U73,"""Introduction of the existence of threats that do not use ICT, talk about the anonymity of the Internet and identification of individuals, hijacking by cooperative services, etc.""",,,,,"""I was able to learn what kinds of defense methods (settings, encryption, laws, rights, etc.) exist for cyber security.""","""Types of copyright, judgments in cases of exceptions, laws, etc. are a little complicated, and I'm worried if I understand them.""","""The flow of preparation → commentary → review was very good, and I felt that the online class was the most effective for learning. Thank you very much.""",0
B-2020_U74,,,,"""Nothing in particular.""",,,,,-1
B-2020_U75,,,"""I didn't get a perfect score on the quiz""",,,,"""I didn't understand this class the most""","""There were times when I was confused because I was not used to using a computer. There were times when I forgot to do Simpla Z. Thank you for the spring semester.""",0
B-2020_U78,"""Threats to ICT exist even in areas where ICT is not used in society, so it is necessary to be careful. Depending on the information posted on the Internet and how services are used, personal information can be identified or hijacked. There is a risk.""","""I was able to learn about the threat of personal information identification hidden around us.""",,,"""I wasn't able to prepare enough.""","""Research ethics that must be observed in conducting research, methods to prevent fraud, the distinction between personal information and privacy, copyrights, moral rights of authors, adjacent copyrights, performer's rights, etc. content and scope of application, etc.""","""Regarding public key cryptography, I didn't really understand how it is possible to decrypt a cipher once converted with a different key.""",,1
B-2020_U79,,,,,"""I was a little scared because I thought that just like personal information would be stolen on a personality test site, people who could answer common questionnaires and earn pocket money would also be stolen.""","""Even on the Internet, there are laws and literacy that must be followed, so you should fully understand them before using them. Also, you should know how to attack and know how to protect your personal information. It's important.""",,,0
B-2020_U8,"""In this class, I understood that attacks on ICT include threats that do not use ICT (take advantage of psychological gaps and mistakes in behavior). I understood the danger of being hijacked.
""",,,,,,"""There are more information security laws than I expected, and it was hard to distinguish.""",,1
B-2020_U80,,,,,"""I also use SNS, and I am always careful to protect my personal information and keep anonymity as a good thing and not to do bad things. I want to continue.""",,,,0
B-2020_U81,,,,,,"""Personal information is an important thing that must be protected, and there are various security systems and laws to protect it. However, we should always be vigilant because information may be leaked if we are not careful enough. that it is necessary to keep",,,1
B-2020_U85,,,,,"""It was easy to understand with lots of concrete examples""",,,,1
B-2020_U86,"""It is necessary to be aware that your information may be exposed to danger whether in an ICT environment or not, and to take minimum self-defense measures. It is important to pay attention to the leakage of personal information when disseminating information, and to examine the authenticity of information when you yourself receive it.""","""I found that passwords can be made much stronger by combining numbers and English.""",,,"""As biometric authentication progresses, it will be possible to identify objects from various perspectives, so I thought that even a slight change could make it difficult for people to identify themselves.""","""The author's moral right is a right to protect the author from being mentally harmed and cannot be transferred or inherited. A copyright is a right to protect property interests and cannot be transferred or inherited. It is possible. I found that there is such a difference between the two.""",,"""This class was the only online class where I could access the site a little earlier than class time, but my attendance would be judged.",1
B-2020_U87,,,,,"""Although there were a lot of slides, I was able to learn a lot of different case studies.""",,,,0
B-2020_U89,"""Security threats come not only from ICT. There is also the possibility that passwords and personal information may be leaked through analog means, such as eavesdropping on input screens, listening over the telephone, etc. In addition, personal information on the Internet is It is not a simple matter of whether or not a photo is displayed. sometimes specified. ""","""There was a description that the quality of chain mail deteriorated, but in that respect Twitter's retweet function can spread information without reducing quality, so I felt that it is a powerful function for better or worse.""",,,,,,"""In general, most of the lectures are on-demand, so it was very helpful to have the audio lectures using Teams. It's embarrassing to be a university student, but learning independently I'm not good at it, so I felt it was quite painful to take the on-demand format.Also, I think the teacher said around the first time, ""Basically, self-study, I will explain the parts I don't understand."" Even so, although there was a difference, I didn't feel like I was studying on my own because I touched all the parts of the textbook. Personally, I think it was one of the lectures in the spring semester that was the closest to a face-to-face class. """,1
B-2020_U9,"""As countermeasures against social attacks, it is effective to ask again, confirm your identity, set a password that is difficult to understand, check if you are being watched when you type, use biometric authentication, etc., and multiple answers are available in personality tests. It is necessary to be careful because there is a possibility that information that can lead to personal information may be lost if all are integrated.Bitcoin is divided into multiple important parts, and even if one is damaged, the whole will be affected. However, there is a drawback that if the exchange fails, it will affect the entire system.Since chain mail is sent from acquaintances, it is easy to believe it, and it is possible to cooperate in the spread of hoaxes and malware. Also, even if anonymity is maintained, it can be identified if something happens, so you have to take responsibility for what you say.PCs and mobile phones each have an IP address, and each terminal has an IP address. It is possible to identify whether the access is from.""","""We found Bitcoin to be highly secure.
I also found out that chain mail can make you a perpetrator without knowing it.
In addition, I learned about countermeasures against social attacks and chain mails. ""","""I didn't understand the purpose of the old chain mail.""","""When chain mail was a letter, what benefit would the sender gain from passing a letter of misfortune, etc.?""","""I'm glad that I learned about countermeasures against social attacks, which can be directly useful in my life. I want to be careful not to be subjected to such attacks. I would like to be careful not to act or say something that I am not responsible for because I am sagging.""","""Research misconduct includes ``falsification,'' ``plagiarism,'' and ``fabrication,'' and researchers must not engage in these activities in their research. In addition, researchers have a responsibility to contribute to the progress of science and the safety and security of society, and to protect the interests of their research institutions and clients. The three major elements that make up information security are maintaining confidentiality, integrity, and availability. encrypted and decrypted using the key. “Personal information” is not simply information held by an individual, but information that can be combined to identify an individual. In addition, copyright is included in intellectual property rights, and copyright includes author's rights and related rights. This is separate from industrial property rights, which include patents and trademark rights. The rights of authors include moral rights and property rights, and the rights of film directors and others include neighboring rights. Works that are recognized as works are those that express the thoughts and feelings of the author, and ideas that are not expressed are not recognized as works. """,,,1
B-2020_U92,"""I learned about the fragility of information about ICT, how information is leaked, the fear of SNS, cyber attacks, and cyber scams that I use every day.""","""Until now, I've been using my phone and computer without feeling any fear, but I found out that there are more fears hidden in it than I thought.""",,,,,,,1
B-2020_U93,"""Reason and cause of leakage of personal information""","""Photos should be considered and posted""",,,"""I thought I understood, but I'm not sure if I understand.""",,,,-1
B-2020_U94,,,,,"""I also use SNS, so I don't want to get involved in troubles such as being hijacked by others.""","""There are public key cryptography and private key cryptography, and how they work.
Cybersecurity Basic Law and its history. """,,"""Usually easy to understand, but sometimes I couldn't understand which page was explained.""",-1
B-2020_U95,,,,,,,"""I didn't understand much of the content, such as research ethics, the Basic Act on Cyber ​​Security, and the right to publish copyrights.""",,0
C-2021-1_U100,,"""I've been wondering how searches on google etc. are done, so I feel like I figured it out somehow.""",,,"""I felt that various trials and errors have been made in terms of what is the best way to reduce the number of comparisons.""",,,,-2
C-2021-1_U101,"""Merge sort is a method of dividing one number sequence into several pieces, arranging them, then comparing the numbers in order from the beginning, storing them in a new number sequence in order from the smallest, and arranging them. Linear search is a method. Binary search is a method of searching in ascending or descending order when examining whether an element x is included in a certain sequence, starting from the beginning of the sequence. By comparing the middle value of the rearranged series with x, it is determined whether the element x is in the front half or the rear half of the whole, and the side where the element x does not exist is removed from the search range and the existing side is newly Comparing x and the median value as a valid search range... By repeating this, it is a method to determine whether the element x exists or not.In terms of search methods, binary search is overwhelmingly faster than linear search.""",,,,,,,,-2
C-2021-1_U105,"""How merge sort algorithms work. How comparison sort algorithms work. Comparison-based sort algorithms always require O(nlogn) comparisons. So, is there a way to sort without comparing elements? Binary search."" The time complexity of the modulus is O(logn).""","""In the merge sort algorithm, first split the number sequence into two, sort each of them, and then merge the two columns after sorting. Let the lengths of the two split sequences be n₁ and n₂, respectively, and the number of comparisons is At most n₁＋n₂-1. Split and merge are done many times.""",,,"""I can understand each method of the sorting algorithm, but when it comes to the number of comparisons and order notation, I suddenly lost my mind. I also lost my sense of what the purpose of the method was. So I decided to study it again.""",,,,-1
C-2021-1_U107,"""Mergesort and Binary Search""",,,,"""Feeling like a continuation of the last time""",,,,0
C-2021-1_U11,"""Linear search is the method of searching from the beginning when elements are not aligned, and binary search is the method of searching by comparing elements in the middle when aligned.""",,"""The calculation formula was difficult, so I want to be careful.""",,"""Various calculation methods have appeared, so I would like to organize and understand them.""",,,,-3
C-2021-1_U12,"""I learned how to use mergesort and binary search, and how to compare their computational complexity and speed.""","""When using a tree, the number of comparisons does not exceed the number of stages in the tree. I thought it was amazing to compare from the middle with binary search.""","""Different number of comparisons between binary search and binary search using suffix
There were things I haven't caught up on yet, such as the proof of calculations.""","""Is the worst-case complexity the sum of the number of comparisons and the number of exchanges?""","""It's very difficult.
However, I was very interested in the fact that the development of new comparison methods will increase the speed. I think it's a field with a lot of future. """,,,,-1
C-2021-1_U13,,"""I learned about the new meaning of merging and its usefulness, and now I can make better choices.""","""preparation""",,,,,,-2
C-2021-1_U14,"""On Mergesort and Binary Search""",,,,,,,,-2
C-2021-1_U15,"""The last one was easier""","""I understand how keyword searches work""",,,"""B unit was difficult, so I want to review it properly""",,,,-2
C-2021-1_U19,"""Binary search is much faster than linear search.""",,,,,,,,-3
C-2021-1_U2,"""I checked the complexity by looking at the mergesort and binary search algorithms, and learned that the number of comparisons is at least on the order of O(n log n).""",,,,,,,,-3
C-2021-1_U20,,"""Comparison-based sorting always requires O(nlogn) comparisons.""",,,,,,,-3
C-2021-1_U22,"""By splitting it into two and comparing them, you can sort by fewer comparisons.""",,,,,,,,-1
C-2021-1_U23,"""In merge sort, we divide and merge using a method that integrates aligned input sequences and outputs one aligned sequence. Comparison-based sorting algorithms require O(nlogn) comparisons. Binary search is sometimes used to search for information at high speed, but if the elements are not aligned in the first place, a linear search that searches from the beginning may require a large number of comparisons. If is aligned, you can compare with the middle element and narrow down the range to compare, and you can finish overwhelmingly faster than linear search.In the case of keywords, considering the suffix, the same binary search It can be performed.""","""I was able to understand how to use merge sort, linear search, and binary search. I learned how efficient binary search is.""","""I didn't understand ``The number of comparisons in the comparison sorting algorithm is less than or equal to the minimum height of a binary tree with at least n! leaves''. """,,,,,,-3
C-2021-1_U24,"""In B-9, we learned about merge sort and sort comparison count.
In B-11, we learned about linear search and binary search. ""","""I learned how mergesort works and how information retrieval works.""",,"""This is also related to the contents of the class a little while ago, but what does the function in parentheses in the order notation represent? And how do you find it?""","""In the information society, the need for high-speed data retrieval is increasing, so I thought it would be important to explore processes for more efficient sorting and information retrieval. On the other hand, I thought it might be a little troublesome to use different sorting algorithms depending on the purpose.I would like to investigate methods of sorting by methods other than element comparison.""",,,,-1
C-2021-1_U25,"""Differences between mergesort and other sorts, types of binary search""","""Google and others use binary search""",,,"""I'll do my best to prepare
""",,,,-2
C-2021-1_U26,"""Mergesort and Binary Search""","""Mergesort decomposes and reassembles, so it can be arranged in a simpler way.
Binary search reduces the number of comparisons because long strings can be compared in half. ""","""I don't know the log count.""",,"""We will review the range of sorting together so that you don't get confused with the previous lesson.""",,,,0
C-2021-1_U27,"・I learned a new ""merge sort"" as a comparison sort. In merge sort, the sequence is divided into sequences with the number of elements of 1, and each is compared.
・""Binary search method"" can be calculated overwhelmingly faster than other methods. ""","""I understood well how to do merge sort.
I understand how to do binary search.
""","""I didn't quite understand what the suffix part was doing after all.""","""Why are you comparing ac with a set of suffixes in the suffix part?
・I didn't understand the explanation that the number of steps in binary search for a set with n elements does not exceed log₂n, so it would be helpful if you could tell me. """,,,,,-3
C-2021-1_U28,,"""I was able to understand merge sort and binary search algorithms through diagrams.""","""I didn't quite understand the explanation after Stirling's formula in the proof of the number of comparisons of the comparison sorting algorithm.""",,"""It was interesting to learn about binary search and its algorithms in the web searches that we usually use. I felt that I could deepen my understanding by learning about algorithms through familiar examples like this."" .""",,,,-2
C-2021-1_U29,"""I learned about merge sort, comparison sort, and binary search.""","""I understand mergesort and binary search.""",,,"""I will do my best to review by solving practice problems.""",,,,-1
C-2021-1_U3,,,,,"""Binary search is also used on websites, but I was surprised that binary search had not been discovered until recently. I can imagine that linear search would take a considerable amount of time, but that was the only method available. In comparison, I thought that the discovery of algorithms contributed to the development of various fields.""",,,,0
C-2021-1_U30,"""Merge sort, binary search""",,,,,,,,-1
C-2021-1_U31,"""Merge sort is a method that first divides the number sequence, divides it one by one, and then sorts the elements one by one. Binary search finds the element you want to find in the arranged number sequence. A method that narrows down drunkenly before or after the middle of the sequence.""","""Comparative sorting is a fairly efficient method, but it turns out that it was discovered relatively recently.""","""I didn't understand the proof of comparison sort.""",,"""I found the most orthodox method of searching.""",,,,-2
C-2021-1_U32,"""A sort that recursively compares divided sequences is called a merge sort, and the number of comparisons is nlog(2)n at most. An algorithm that searches half by half from the sorted elements is called a binary search algorithm. The complexity is O(klogn).""","""Both merge sort and binary search were mainly divided into halves, but I thought it was very simple and easy to do. I also understood how to do it and how to think about the number of comparisons.","""I understand everything this time.""",,"""I was very surprised that a very easy-to-use binary search was not known until very recently, and I wondered if there were other easy-to-use search methods that were not yet known as well. I also investigated other search methods. I would like to.""",,,,-1
C-2021-1_U33,"""Merge sort divides into one element, then integrates (merges) and sorts.
A comparison sorting algorithm would require O(n log n) comparisons. The number of comparisons is equal to the number of edges in the decision tree.
Linear search is a method of searching for a one by one from the left end. In the worst case, we have to compare n times.
Binary search is a method of dividing into two and repeating dividing the applicable half into two again. The number of searches does not exceed log2n. ""","""It turns out that binary search is much faster than linear search.""",,,"""Since it is difficult to understand the amount of calculation and the number of comparisons expressed by mathematical formulas, I would like to understand why this number of times is required so that I can find it myself.""",,,,-1
C-2021-1_U35,"""I learned about merge sort and binary search. I think the point of merge sort is to divide and then merge. The basic idea of ​​binary search is to divide it into two and compare it with the middle one.""","""I understood well what exactly merge sort and binary search do.""",,,"""I think I understood it well this time. However, the content of B that I have studied the last few times was a little difficult. Especially, I still feel uncertain about the consideration of computational complexity. Before the test, etc. I want to keep my textbooks clean.""",,,,-1
C-2021-1_U36,"""・What is Merge Sort?
・Information retrieval: linear search, binary search
・Sort strings
・Text Search""","""・Merge sort
Divide the numerical sequence and integrate while comparing
Number of comparisons: n1+n2-1
Compare each stage a maximum of n times, the number of stages is at most log2, so the number of comparisons is at most nlog2n
・Comparison sorting always requires O(nlog2n) comparisons
・Linear search: Compare from the top of the unsorted column. max n times
Binary search: Compare with the element in the middle. Maximum log2n → Overwhelmingly fast
・Binary search complexity is klogn based on lexical order even for character strings
・Think about the suffix first → Sort by dictionary order → Binary search
The amount of computation is klogn""",,"""Nothing in particular""","""Personally, merge sort and binary search were intuitively easier to understand than binary trees.
I've been a little confused about why log2 appears a few times, but it's because the number is repeatedly doubled and halved.
It seems that the maximum computational complexity of various sorts will be mixed, so I will summarize it with LGC. """,,,,-2
C-2021-1_U37,,"""For binary search, each step reduces the search range to 1/2 or less""","""calculate log""",,"""There are some things I still don't understand, so I want to review.""",,,,-2
C-2021-1_U38,,,"""I don't know what criteria separates a, b, and c on page 28 of Merge Sort.""",,"""Personally, I found merge sort to be the most straightforward and simple. I was surprised that the most efficient binary search was discovered recently, and I found it to be even more efficient than this. I had a feeling I might have more ideas.
""",,,,0
C-2021-1_U39,,"""I learned that mergesort is recursive.""","""The binary search algorithm didn't quite make sense to me. I'm not sure.""",,,,,,-1
C-2021-1_U40,,,,,"""I was impressed by the precise calculation behind the searches of google and Yahoo.""",,,,-2
C-2021-1_U43,"""I learned about mergesort and binary search.""","""Binary search is more efficient than linear search.""","""How to do mergesort when it's not factorial of 2""",,,,,,-2
C-2021-1_U44,,"""What mergesort looks like
About binary search
Their computational complexity""","""Computational problems, why is the amount of computation so?""",,,,,,0
C-2021-1_U45,"""Mergesort can be simpler because it doesn't use a binary tree.
A linear search is not efficient, so we perform a binary search in which the elements of S are reduced. ""","""I understand mergesort, linear search, and binary search.""","""I don't quite understand the meaning of the formula. Is it something I can remember?""",,"""Today's class was a little more difficult to understand than last time. I still don't understand the formulas using log well, so I would like to practice.""",,,,-1
C-2021-1_U46,"""About binary search and mergesort.""",,,,"""As soon as a calculation comes up, my motivation goes away, so I want to raise my motivation and challenge the class.""",,,,-2
C-2021-1_U47,"""In addition to the method of comparing the order by element comparison, there is a method of comparing the order using the binary search method, and there are many problems in the field of computer science.""","""We found that binary search is overwhelmingly faster than linear search with less computational complexity.""","""I didn't really understand the number of comparisons in the comparison sorting algorithm, so I'm going to review it.""",,"""I still don't fully understand how the binary search algorithm works, so I thought I'd review it.""",,,,-2
C-2021-1_U48,"""Merge sort is an algorithm that can align new columns by sorting smaller columns first when merging (integrating) multiple columns. Binary search is a simple and fast algorithm. , must already be aligned.""","""I was surprised to learn that a simple but powerful binary search has actually been invented recently. It made me realize that there are still infinite possibilities in computer science, where not much is yet known. """,,,,,,,-3
C-2021-1_U49,"""・Merge sort Comparing the heads of two number sequences and creating a new number sequence
・ Maximum number of comparisons (sum of elements of two sequences) -1
・All comparison sorts can be expressed using decision trees.
・The height of the decision tree is the worst number of comparisons
・Linear search method (compare whether it is a specific element in a certain sequence or not)
・Binary search method: When finding x in a prearranged number sequence, find it by using the magnitude relationship with y.""","""・Merge sort by comparing the beginnings of two existing numerical sequences and rearranging them into one numerical sequence
・The order of sorting so far does not change much, nlogn or n squared
・In some cases, the binary search method can significantly reduce the amount of calculation.""","""・It was hard to understand when characters like computer programming came out in binary search.""",,,,,,-2
C-2021-1_U50,"""Learn merge sort and binary search methods and deepen your understanding of algorithms.""","""I was able to deepen my understanding by seeing an example of mergesort execution. I learned that comparison sorting algorithms can be represented by decision trees.""",,,"""Binary search got confused in the middle of the explanation and I couldn't keep up, so I thought I'd review it properly. I've learned all the representative algorithms so far, so I'm going to deepen my understanding of each one. I want to continue.""",,,,0
C-2021-1_U51,"""I learned how to do merge sort, how to find the worst number of comparisons for each sort using elements, and the usefulness of binary search conditions.""","""During binary search, we found that the number of comparisons varies significantly between ordered and unordered sequences.""","""I didn't fully understand all of the worst-case comparison counts for each algorithm and their order notation values, so I'll review and understand them.""",,"""I think it's a great achievement just to be able to search, but I think it's really amazing that you created a method such as binary search that greatly reduces the time.
With this development, it is possible to process complex and very long character strings in a short time, and I thought that the time would come when everything would be clarified. """,,,,-2
C-2021-1_U52,"""Efficient sorting methods such as merge sort and binary search""","""Mergesort is more efficient than any other sort we've seen so far""","""Order, I don't really know what you are like""",,"""Sorting was something I saw on an NHK program, and I remember it being merge sort. There were parts I didn't quite understand, such as binary search and order notation.""",,,,0
C-2021-1_U53,"""Mergesort is a computational method performed by dividing the input sequence into smaller sequences and then merging them together. Linear search compares values ​​in order to find the same A two-part search is a comparison that uses the middle of a series of numbers arranged in advance according to certain rules as a reference.""","""Unlike last time, there were only two types of sorting today, so there were a lot of things I could understand. I've never heard of binary search, but it's surprisingly slow to come up with something this simple. I felt that things would be difficult to develop.""","""Different from merge sort, I felt that it would be confusing because there were many log that appeared so far in the time complexity of binary search.""",,"""I have learned about various sorts since last time, but I wondered how such a sort was born.""",,,,-2
C-2021-1_U54,,,,,"""Until now, sorting algorithms were unfamiliar to me, but the binary search method this time felt like a relatively familiar algorithm and was easy to understand.
""",,,,-2
C-2021-1_U55,,,,,"""I learned the method of binary search. It may be an excellent method mechanically, but I felt that it was a roundabout procedure from a human point of view.
It's kind of troublesome to divide a long text, rearrange it, and finally search for a keyword from there. If you are an ordinary person, you should read from the top and look for keywords.
If there is a gap between intuitive methods for humans and excellent methods for machines, I think it would be difficult to come up with good algorithms. """,,,,-1
C-2021-1_U56,"""Merge sort sorts by repeating the comparison of divided elements, and binary search uses a binary tree.""","""Binary search is an efficient task in which the number of steps does not exceed log₂n.""","""Every time I see log, I don't understand why it appears in the expression.""",,"""Including the previous review, I was able to reconfirm the contents of the sorting and the comparison of each sorting.""",,,,-1
C-2021-1_U58,,"""Based on the binary search algorithm, I was able to understand it by applying it to everyday things such as keyword search and text search using suffixes.""",,,"""I was surprised to find that the history of binary search, which may seem simple at first glance and is easy to think of, is only 30 years old.""",,,,-3
C-2021-1_U59,,,"""starling's formula""","""is not""","""I was wondering how the sorting that I had learned so far was used, so I heard that you are searching the web using information retrieval such as binary exploration. I'm also surprised that prefix lookup is now done.""",,,,-1
C-2021-1_U60,"""I studied the principles of mergesort and binary search (and the linear method). I also studied the complexity of each.""",,,,,,,,-1
C-2021-1_U61,"""Merge sort is to divide a series into two and rearrange them, then compare the beginnings of each series and output and integrate the smaller one. Merge = integration.
Linear search means searching for the desired element x from the beginning.
The binary search method is a method of searching while narrowing the range of worth more and more, and it is efficient. ""","""The number of comparisons is always less than the number of elements.
Strings are sorted lexicographically.
""","""In the case of binary search, when searching in the other half, is the element to be compared next determined?
I didn't quite understand the suffix explanation. """,,"""There was a programming-like part, and I was able to learn with interest.
I thought I would prepare for the test by solving practice problems regularly. """,,,,-2
C-2021-1_U62,"""Merge (integration) sort is a sort that advances by comparing the beginnings of two input sequences that have already been sorted and selecting the smaller one. Binary search is a sorted sequence Search while narrowing down the search position appropriately by comparing the middle of the character string with the target.It is a search method that repeats the comparison with the middle recursively.""","""I was able to understand the contents through the diagrams.""",,,"""It was easy to understand.""",,,,-1
C-2021-1_U63,"""Description of binary search and merge sort. Merge sort is an algorithm that compares two sequences from the top to produce a single aligned sequence. It is necessary to repeat several times from where the minimum division is made. Elements Binary search, which was created by improving the fact that there is a lower limit to the computational complexity of comparisons, is a mechanism that compares a certain element with the middle and the size of the sort, and repeats it.Because the number of comparisons and steps is small, it is naive Much faster than searching for patterns.""","""The fact that the number of comparisons in the worst case is the lowest for merge sort so far is undoubtedly because the number of comparisons is equal to the height of the decision tree and is always nlogn. No element comparison is performed. I found that by using a unique binary search called sorting, the minimum unit can be increased and the amount of computation can be reduced.""",,,"""Recently, I've been having trouble with my quizzes, which is disappointing. Even though I was able to keep up with the class this time, I'm disappointed with the result. The unit will change next week, so I'd like to switch over to the class. Also, I understand the structure of the content. I was impressed by the idea of ​​coming up with such an algorithm, and realized how amazing humans are.""",,,,-1
C-2021-1_U64,"""About Binary Search""","""Computational complexity of conventional sorting, method of binary search.""",,,"""It was fairly simple and straightforward compared to things like heapsort.""",,,,0
C-2021-1_U66,,,"""Although I grasped the calculation method itself, I couldn't fully understand the conceptual mechanism.""",,"""You need to know the linguistic aspects like algorithms and methodologies.""",,,,-1
C-2021-1_U68,,,,,"""I think I was able to understand most of this lecture. It was interesting because it was easy to imagine what is used in ordinary Internet searches, such as binary search.""",,,,-2
C-2021-1_U69,,"""I was able to learn about the binary search method, which is also used in today's Internet technology. I think that humans can search for the same word without thinking deeply, but as a method to find it theoretically I was intrigued when I learned that there was a search method.""","""I didn't understand how the number of comparisons required for sorting increases in proportion to nlog2 n.""","""is not""","""Binary search is easy to understand once you hear it, but I was surprised to learn that it was discovered only recently. I wondered if there might be an easier and faster computation.""",,,,-3
C-2021-1_U71,"""I learned merge sort and binary search.
Mergesort is a recursive sorting algorithm that performs split-compare-combine operations.
Binary search is an algorithm for efficiently searching objects from a set by sorting information in advance, and its applications are wide-ranging.
We also showed that the lower bound of the computational complexity of comparison sorting is O(nlog_2 n) using a decision tree. ""","""I learned how to do mergesort and binary search.""","""Nothing in particular.""",,"""The proof using the decision technique was interesting.
In addition, I felt a sense of familiarity with the fact that the sorting that I had learned so far was applied in a familiar way in the form of binary search.
Thank you for answering my previous question. """,,,,-2
C-2021-1_U73,"""In mergesort, by splitting into two sequences, one comparison always yields one value. In binary search, the size of the sequence is halved at each step, so when sorting large sequences, significantly reduces the amount of computation.""","The reason why the number of comparisons in merge sort is ""at most"" is that if either one of the two divided sequences becomes empty first, the number of comparisons becomes smaller than n1+n2-1. """,,,,,,,0
C-2021-1_U74,,"""Sorting by merge sort and search by binary search are now possible.""","""The amount of computation is a bit difficult.""",,"""Today's leaves were fairly easy to understand.""",,,,-1
C-2021-1_U75,"""Merge sort is an algorithm that divides the input number sequence, compares the magnitudes of them in order, and merges (integrates) them to obtain the result of sorting the original number sequence. Compare the two number sequences in order from the top, and store the other in a new sequence, which is simpler than heapsort because it does not use a binary tree.
By arranging the data, binary search can be performed. Binary search is a search method that compares what you want to search with the middle one of the aligned elements. Since the search range is halved with one operation, the processing is faster than the linear search that compares sequentially from the end. ""","""I learned the methods and advantages of mergesort. I learned several sorting methods and was able to compare them.By learning a process called binary search, I realized the usefulness of arranging data. did it.""",,,"""After learning various sorting methods, it was interesting to understand how to use the sorted information in concrete terms and clarify the purpose and meaning of the operations.""",,,,-1
C-2021-1_U76,"""Merge Sort, Comparison Sort Algorithm, Binary Search Algorithm,
""","""I found out how to execute mergesort and how binary search can be performed efficiently.""","""It was a little confusing to find the number of comparisons for merge sort
""",,"""I was surprised to find that there are various ways to rearrange the numbers in order, and that the efficiency varies greatly depending on the method.""",,,,-2
C-2021-1_U77,"""I learned about mergesort and binary search.""","""Now you can actually sort.""","""I didn't quite understand the worst case.""",,"""From next time onwards, I want to learn without omission.""",,,,-1
C-2021-1_U78,,"""About merge operations""",,,,,,,-1
C-2021-1_U79,"""Merge sort is a method of arranging numerical sequences by recursively repeating the division, sorting, and integration of the input numerical sequence. There are several ways to search for .For example, linear search is a search method that compares sequentially from the beginning, but it takes more time as the number increases. In point binary search, the number of comparisons is halved, so even if the number is large, the calculation does not take much time.""",,,,,,,,-2
C-2021-1_U8,"""Merge sort and the important point of binary search is to think in half""","""Dividing in half for sorting and searching is faster""",,,,,,,-3
C-2021-1_U80,"""I learned merge sort, binary search, and linear search as types of sorting. When I learned that there was search sorting in addition to comparison sorting, I thought that this was more information-oriented processing. Keyword searches, etc., are part of everyday life. It's something I see, so I can really feel it.""",,,,,,,,-2
C-2021-1_U81,,"""Binary deep search is overwhelmingly faster because it requires fewer comparisons than linear deep search""","""It was difficult to understand that the number of comparisons in the comparison sorting algorithm increases in proportion to nlog_2n.""",,"""I was surprised that a simple comparison method was recently invented. I'm excited to think that there is a better way that I don't know yet.""",,,,-1
C-2021-1_U82,"""About Mergesort
About linear search and binary search
How Keyword Search Works""","""・ Since merge sort does not use a binary tree, it is simple ・ Compares two sequences from the beginning ・ The solution is narrowed down by the comparison, and the solution is determined by repeating it
・The order in which elements are compared = Algorithm ・Extracting the target from a large amount of data is called information retrieval ・Binary search is significantly faster than linear search""",,,,,,,-1
C-2021-1_U83,"""Merge sort is a method that does not use a binary tree, but compares two numbers and rearranges them in order.""",,,,"""It was refreshing to look up something like looking up a dictionary.""",,,,-2
C-2021-1_U84,,"""It turns out that sorting by binary search is efficient.""",,,"""I was able to understand properly.""",,,,-2
C-2021-1_U85,"""A more efficient sorting method than binary trees is merge sort. Merge sort divides the elements and performs recursion. It can be performed with less computational complexity than other methods. Binary search. The other method is to compare one element with the already sorted elements, especially if it's a string, compare the suffixes and perform a search, which is efficient.""",,,,"""It was a theoretical content, and it was interesting to listen to. It was fun to understand how word searches are performed. The content will change completely from the next time, so I'm going to give it another shot. I would like to come to class.""",,,,-1
C-2021-1_U86,"""On Mergesort and Binary Search""","""Merge is simpler than heap""","""I knew the linear search method, but I didn't understand the computation of the binary search algorithm""",,"""I think I would have understood a little faster if I had prepared.""",,,,-1
C-2021-1_U87,"""Merge sort does not use a binary tree, but continues to divide until it can be divided, and then merges the two sequences to sort the original sequence. Unlike linear search, which searches sequentially from the end, Binary search searches from the half, so it can be searched overwhelmingly quickly. Keyword searches are performed by applying it.""","""Merge sort is simpler and faster to sort than binary tree or heap sort. I use binary search for keyword searches that I usually use.""",,,,,,,-1
C-2021-1_U88,"""Merge sort → Divide sequence A into A1 and A2, sort them, compare and integrate them in order from the beginning, and sort A.
　　　　　　　The number of comparisons...at most log""",,,,"""Once I finished learning about sorting, I thought I'd organize and review again.""",,,,-3
C-2021-1_U89,"""・ Merge sort
Divide into two number sequences, sort each, and then merge the two columns.
　Merging is an operation that outputs a single sequence of numbers from two already-ordered input numbers.
・The comparison sorting algorithm can be represented by a decision tree. In other words, the order of comparing elements = algorithm
• The number of comparisons of the algorithm for the input sequence A is equal to the number of edges from the root to the leaves of the decision tree.
• The algorithm's worst case number of comparisons is equal to the height of the decision tree.
- The number of comparisons in the comparison sorting algorithm is at least equal to or greater than the minimum height of a binary tree with n! leaves.
・Information retrieval is the process of retrieving information that matches a purpose from a large amount of data. (Google)
One of them is binary search.
・When the elements of S are not organized
Search for x from the beginning (linear search)
・If it is organized → P 12
""",,,,,,,,-2
C-2021-1_U9,,"""same as above""",,,,,,,-1
C-2021-1_U90,"""Mergesort and Search Algorithms""","""I understood the methods of merge sort and linear search""","""Why bother to merge sort with binary trees?""",,"""b is over, and it's about time I can't keep up with my understanding""",,,,-2
C-2021-1_U91,"""I learned about the method of determining the position of an element called the binary search method""","""It is now possible to determine the position of an element using a method called binary search.""",,,"""The content of the binary search method is not difficult, but it feels like a technique that I don't usually pay attention to, and it was a little fun.""",,,,-3
C-2021-1_U92,"""It was a class on mergesort and binary search.""","""Binary search computation is fast, and I found the method of mergesort.""","""I know how it works, I know what it's like, but I find it difficult when it comes to specific calculations.""",,,,,,-1
C-2021-1_U93,"""On Mergesort and Binary Search""","""I think I understand a little bit about binary search.""","""I don't understand mergesort in general.""",,"""I wanted to listen to the class from beginning to end.""",,,,-3
C-2021-1_U94,,"""I learned the word merge sort last week, but I didn't know what it meant, but today I understood how it works.
In linear search, the number of comparisons increases as x moves to the right, but it was found that binary search can be performed efficiently. ""","""I knew binary search for numbers, but I didn't quite understand what binary search for text was doing.""",,"""Merge sort seems to take a long time just by looking at the figure, but I was surprised that the number of comparisons in the worst case was not so large by dividing and sorting.""",,,,-2
C-2021-1_U95,"""・Merge sort Operation to output one sorted number sequence from two already sorted input number sequences.
・Linear search　Since the elements are not aligned, the operation searches for x in order from the beginning.
・Binary search　Since the elements are arranged, the operation of searching by comparing the middle element and x. """,,,,,,,,-2
C-2021-1_U96,"""Mergesort: split-tournament method
Binary search method: fill in half and half
""","""Understanding Binary Search""","""Understanding Merge Sort Comparison Count""","""B-09 p24 says 'the total number of comparisons of elements in each row does not exceed n', but I think it would be better to say 'n/2' in a smaller way. rice field. Can it exceed n/2? ""","""I was having trouble entering teams, so next time I can't enter teams, I will restart immediately.""",,,,0
C-2021-1_U97,"""Description of mergesort, linear search, and binary search""",,,,,,,,-1
C-2021-1_U98,,"""Binary search is a very convenient method, but surprisingly, it was not discovered until about 30 years ago, and it turned out that linear search was the mainstream.""","""It was difficult to understand the proof about the number of sort comparisons, so I would like to review it.""",,"""When I realized that Google's search system is also based on binary search, I realized just how convenient this method is.
It was very easy to understand when I followed the movement to compare with my eyes. """,,,,0
C-2021-1_U99,,"""Computation time is not a big deal when the size is small, so the important thing is how quickly it can be computed when the size becomes huge.""","""I was able to understand the mechanisms and calculation methods of merge sort and binary search.
I thought I didn't have enough understanding of binary search of text, so I would like to review it again. """,,"""I was able to gain a good understanding of the two computational algorithms.""",,,,-3
C-2021-2_U10,"""For sorting, I understood the mechanism of binary tree sorting, followed by heap sorting and merge sorting, and found that as the number of input integers increased, heap sorting was more advantageous than naive binary tree sorting.""","""Compared to other sorts, heap sort can reduce the number of comparisons as the number of input integers increases, and it was found that nlog₂n.""",,,"""It was interesting to learn about sorting that has been devised so that it can be arranged more easily when comparing more complicated elements.""",,,,0
C-2021-2_U100,"""A heap is a tree in which there are exactly 2^d nodes of depth d, and the value of any node is less than or equal to the value stored in its parent. Sorting using it is called heap sort. Merge. Sorting is to divide a number sequence into smaller number sequences and merge (unify) the sorted number sequences to obtain the sorted result.Comparison-based sorting algorithms are based on the comparison result of two elements. The solution candidates can be narrowed down and represented as a decision tree.The order in which the elements are compared is the algorithm.Extracting the one that matches the purpose from a large amount of data is called information retrieval.If it is not sorted, search from the beginning The method of searching is called linear search, and the method of searching while comparing the elements in the middle when they are aligned is called binary search.""","""In addition to the last time, I was able to understand the 5 types of sorting, and after understanding how to use it, I was able to understand in what situations it should be used. Also, after sorting, I was able to perform a binary search by searching for elements. and understand that the length is 1/2.""",,,"""Because I was able to understand the mechanism of sorting, which I was completely skeptical about at first, I thought it would be interesting to explain the work that I usually don't think much about from an algorithmic point of view.""",,,,-1
C-2021-2_U101,"""A heap is a binary tree with n nodes and height h. (2) The value of any node is less than or equal to the value stored in its parent.A binary tree is created so that it is always a heap, and the root is calculated for the completed tree. By repeating the operation of taking out and adding the last number to the root and adjusting it so that it becomes a heap, the number of comparisons in heap sort exceeds 3nlog_2(n) when the input size is n. Therefore, the computational complexity is of the order of O(nlogn).Comparing naive binary tree sorting with heapsorting, heapsorting is faster as the number of inputs increases.
Similar to heapsort, mergesort also requires O(nlogn) comparisons. This is a method of creating the same situation as sorting by dividing until the size becomes 1, and repeating merging to complete the sorting.
Comparison-based algorithms always require O(nlogn) comparisons. A comparison sorting algorithm can be represented by a decision tree, where the number of comparisons is equal to the number of edges from the root to the leaves of the decision tree, and the worst case number of comparisons is equal to the height of the decision tree. Also, the number of comparisons in the comparison sorting algorithm is at least the minimum height of a binary tree with n! leaves. ""","""I was able to understand how to create a heap and how to arrange numbers from the completed heap. I also understood the method of merge sort and the reason why it divides until the size becomes 1. I also understood the exercises. I think I could.""","""Nothing in particular.""",,"""In this class, the sorting procedure was shown using a specific number sequence, so it was easy to understand the heap conditions and how to merge, which I didn't understand with just letters. Although I checked several times, I couldn't access the lecture materials, so I was in a hurry to prepare for class, and there were some parts where I couldn't catch up with my understanding. I'm curious about algorithms that don't compare, so I'll look into it myself.

I apologize for the abstract questions and requests last time. I was able to understand with the supplementary story. thank you very much. """,,,,-1
C-2021-2_U102,"""In this lecture, I learned about heapsort and mergesort. Finally, I learned a bit about binary search.""","""We found that the number of comparisons for heapsort is lower than that for binary tree sorting when n=38. Merge sort is a method that divides a sequence, sorts them out, and integrates them. have understood.""",,,"""In this lecture, I mainly learned about heap sort and merge sort, but I thought it was interesting to think about how to sort a sequence in ascending order with a small amount of computation. I would like to learn about binary search as well. .""",,,,0
C-2021-2_U103,"""Continuing from the last lecture, we touched on various comparison-based sorting algorithms such as heap sort and merge sort, and learned about the number of comparisons.""","""There are various approaches to solving the sorting problem, but the heapsort and mergesort we dealt with in this paper have a low number of comparisons among the comparison-based sorting algorithms, and the number of comparisons required for the comparison-based sorting algorithms is large. It turns out that the order is nlog₂n.""",,,"""Today was also interesting because I learned how to solve various sorting problems. I'm looking forward to learning more about methods other than element comparison from the next time onwards. I'm glad that it was an interesting learning experience as it's the principle of the engine.""",,,,-1
C-2021-2_U104,"""For a binary tree with n nodes and height h, if there are 2^d nodes with depth d and the value of any node is less than or equal to the value stored in its parent, the tree is called a heap. Also, the operation of outputting one sequence that has been sorted from two input sequences that have already been sorted is called merging.""",,"""I still understand the order notation, but I don't think I understand it.""",,"""I found it both fun and difficult to think mathematically about how to sort faster.""",,,,0
C-2021-2_U105,"""I mainly learned about heapsort and mergesort. I solved an example using a binary tree. A binary tree goes through the left child in multiplication order, then reads its own value, then goes through the right child. A heap of heapsort is a binary tree with n nodes and height h, and there are exactly 2^d nodes with depth d, and nodes with depth h exist in order from the left. , and a tree that satisfies the condition that the value of any node is less than or equal to the value stored in its parent. A simpler version without a binary tree is merge sort.""","""There is a way to compare elements without using a binary tree.""","""I wondered where heapsort was better than mergesort. I wondered if only mergesort was good enough.""",,,,,,-1
C-2021-2_U106,"""Conditions of heap, relationship between sorting and heap using binary tree, upper limit of comparison count of heap sorting, comparison of computational complexity of each sorting algorithm, method and comparison count of merge sorting algorithm, comparison sorting algorithm, linear search I was scared.""","""I was able to understand how to make a sort using a binary tree and how to do a heapsort better than last week. I was also able to learn how to calculate a mergesort, comparison sorting algorithms, and the relationship between comparison sorting algorithms and binary trees. rice field.""","""I couldn't really imagine the merits of using mergesort and in what situations mergesort would be used.""",,"""The properties of binary trees and their relation to each computational algorithm were interesting. I was also surprised that the computational algorithm we dealt with in the class was O(nlogn). Also, the fact that linear search does not use iodine is what I found interesting. It was interesting because it hadn't happened before.""",,,,-1
C-2021-2_U107,"""Mechanism and characteristics of heapsort, mechanism and characteristics of mergesort, methods to reduce the number of comparisons in sorting, and explanation of decision trees""",,,,"""I was able to grasp the image of the order notation. I was impressed that even a complicated procedure like heap sorting made sense from the point of view of the efficiency of the number of comparisons.
""",,,,-1
C-2021-2_U108,"“While heapsort compares numbers using binary trees, mergesort is a simple algorithm that uses O(nlogn) comparisons like heapsort and does not use binary trees. However, the computational complexity of the algorithm is at least larger than n[nlogn].I unraveled the mechanism from a concrete example and investigated the computational complexity of the algorithm again using a formula.""","""Sorting elements according to a certain criterion from smallest to largest is called 'heapsort'. In particular, a binary tree is called a ""heap"" when there are exactly 2^d nodes with a depth of d, existing sequentially from the left, and the value of any node is less than or equal to the value stored in its parent. Also, if the condition 2 of the heap is not satisfied, it may be replaced with the parent appropriately. When the size of the input sequence is n, the comparison rank of heapsort does not exceed 3nlogn. The complexity of the algorithm is O(nlogn). By the way, I noticed that O(cf(n)) = O(f(n)) holds true by freely changing the positive constant c. On the other hand, ""merge sort"" is to output one number sequence aligned from two number sequences. is. Using the conventional sorting, the comparison rank will eventually be n[logn] or more. ""","""Mergesort should be simpler than heapsort in that it doesn't use binary trees, so why is the complexity of both cases at least n[nlogn]?""",,,,,,0
C-2021-2_U109,"""Heapsort, Mergesort""","""I was able to understand how to do heapsort, how to do mergesort.""","""I knew how to do it and the amount of calculation for heapsort, but I couldn't understand the explanation of the preparation.""",,"""I want to review the parts I didn't understand by watching the lecture video again.""",,,,-1
C-2021-2_U11,"""Heapsort eliminates the shortcomings of naive sorting using binary trees.
Heapsort and mergesort steps, number of comparisons
A description of the number of comparisons for comparison-based sorting algorithms
""","""How to do heapsort and mergesort
Comparison-based sorting algorithms require O(n*logn) steps
""",,,"""It was a very interesting class because I learned about sorting with smaller orders than last week.""",,,,-1
C-2021-2_U110,"""What we learned this time are heap sort and merge sort. Heap sort is a binary tree that satisfies the condition that the input string is packed in order from the top to the heap, and the child is smaller than the parent. Since the height of the binary tree is at most log2n and the number of comparisons for each node is three, the number of comparisons is at most 3nlog2n and the order is nlogn. Sorting compares and integrates two sequences that have already been sorted, and divides a sequence into the smallest sequence and integrates it again.At this time, the number of comparisons is at most nlog2n, and the order is nlogn. and this order is the smallest among the sorts involving comparisons.""","""This time, I got a rough idea of ​​how heapsort and mergesort work.""",,,,,,,-1
C-2021-2_U111,,,,,"""Personally, mergesort was easier to understand than other sorting algorithms. I realized once again that computational complexity is a very important factor in sorting.""",,,,-1
C-2021-2_U112,"""The disadvantage of the binary tree is that the calculation time changes depending on how the input sequence is arranged. Regarding the binary tree, there are exactly 2^d nodes with a depth of d, and nodes with a depth of h exist in order from the left. and the tree is called a heap if the value of any node is less than or equal to the value stored in its parent. Comparing which is faster between simple binary tree sorting and heapsorting, heapsorting is reversed from the middle, and heapsorting is faster as the number of input integers increases. In addition, merge sort does not use a binary tree, but sorts by merging (integrating) the sequence. In mergesort, each of the two original sequences being compared is aligned. ""","""I was able to review and understand how binary trees work. I was able to understand the basics of how heap sort works, and how merge sort works. Merge sort uses two already aligned sequences to sort I learned a lot about how to go about it.""","""I have grasped the overall picture of heapsort, but there are some details that I do not understand, so I would like to focus on reviewing those parts. Also, review the number of comparisons in the comparison sorting algorithm using specific examples. I felt the need.""","""Nothing in particular.""","""Heapsort felt a little more complicated than the sorts I've learned so far. Merge sort is easy to imagine and I think it was relatively easy to understand. I learned about various sorting algorithms in the previous classes, so I can grasp the big picture again. I would like to review detailed knowledge and methods, etc. Also, when I learned more about the number of comparisons in the comparison sorting algorithm, I felt it was difficult, but at the same time I became interested. I learned a little bit about selection, but I was intrigued because it sounded familiar.""",,,,-1
C-2021-2_U113,"""Description of heapsort and mergesort.""","""Mergesort is a sorting method that divides a sequence of numbers, sorts them, and then merges them.""","""I didn't understand the second stage of heapsort, so I'd like to try it by hand.""","""Nothing in particular.""","""In the beginning, the number of comparisons was smaller for n^2, but I found it interesting that as n increased, the number of heapsorts reversed and decreased.""",,,,-2
C-2021-2_U114,"""Heapsort is a sorting algorithm that improves the shortcoming of binary tree sorting, in which the amount of computation changes depending on how the input sequence is arranged. When creating a heap, the number of nodes is 2^d (d: depth). If the value of the child is greater than that of the parent, then the parent and child are switched, and the process is repeated.When sorting, the root is taken out, the last node is stored in the root, and the child is greater than the parent If it is a value, the process of replacing the parent and child is repeated.Since the number of comparisons in heapsort does not exceed 3nlog₂n, the time complexity is on the order of nlogn.Merge sort is a process that divides an input sequence and sorts it. It is a sorting algorithm that integrates while comparing large and small.When merging two sequences of size n1 and n2, you only need to perform at most n1+n2-1 comparisons.Furthermore, any comparison-based algorithm is at least O (nlogn) comparisons, and the maximum number of comparisons for a comparison sorting algorithm is equal to the height of the decision tree.""","""I found that heap sort and merge sort are more efficient than bubble sort, selection sort, and binary tree sort. I couldn't imagine how a graph represented by nlogn would be drawn However, he explained it in the lecture, and I understood that the longer the input sequence, the larger the difference.I also understood the relationship between the height of the binary tree and the length of the input sequence. I was able to do.""","""None.""","""Are all the orders written in the slides the order of the time complexity of the algorithm, or is it also the order of the number of comparisons?""","""Knowing that there are many types of algorithms for sorting, I think I caught a glimpse of the transition that led to the development of new algorithms that could be completed in a shorter time and had no shortcomings. Still academic. I think it's just the beginning, but I'm happy to be able to feel a little closer to this field.""",,,,-2
C-2021-2_U115,""" ● Comparison of coins that are not sure whether they are light or heavy ● Add all T(n) ● How to create a heap ● Its computational complexity ● Merge sort
""","""Understood the new algorithm""",,,"""Starting with binary trees, I was able to understand heapsort. Mergesort was also easy to understand and I found it useful. I'm looking forward to learning more about data science next time.""",,,,-1
C-2021-2_U116,"""There is a merge sort that divides into two, aligns them, and then realigns them all. It can be simplified by dividing (merging) multiple times.""","""I found that the execution of mergesort changes depending on whether n=2^k or not.""","""I could not understand the number of comparisons (4) and (5) of the comparison sorting algorithm.""",,"""All the sorts came out and I was wondering which one was the best.""",,,,-1
C-2021-2_U117,"""There is an algorithm that matches heapsort. This eliminates the shortcomings of naive sorting using binary trees. The number of comparisons in heapsort does not exceed 3nlog2n. Therefore, heapsorting is more naive in binary trees as the number of input integers increases. Faster than sorting. Secondly, mergesort is an algorithm that outputs one sorted sequence from two already sorted input sequences.The number of comparisons in mergesort is at most nlog2n.""",,"""Euclidean Algorithm, I found that when x and y are updated repeatedly, the remainder always becomes smaller than x, but I couldn't understand the reason why it can be said that it is less than half.""","""Nothing in particular.""","""It was the first time I learned that Euclid's algorithm, which I learned in high school, is used here as an algorithm, and I felt the meaning of my studies.""",,,,-2
C-2021-2_U118,"""The completed binary tree reads the node values ​​in the order of the left child, self, and right child. If the node to be read has children, the left child is read first. Node number n, A binary tree of height h has exactly 2 d nodes of depth d, the nodes of depth h exist in order from the left, and the value of any node is less than or equal to the value stored in its parent. A tree is called a heap. There is also a mergesort that does not use a binary tree with the same number of comparisons as the heapsort.""","""I know how to do mergesort.""","""I'm not sure how to read a binary tree, so I'll try to read it myself.""",,,,,,0
C-2021-2_U119,"""I learned about supplementary explanations of the previous quiz/assignments and the mechanism of heapsort/mergesort.""","""I was able to understand exactly why I got the wrong part of the quiz last time. Also, I was fumbling around with my friends for the last assignment, but I was able to understand how to do it. I understood what a heap was, and I understood what a merge sort was.""",,,"""The supplement to the previous quiz given at the beginning of this class was very convincing. When I took the quiz, I couldn't understand why I got it wrong, but the number of trials changes depending on the difference in Japanese. I was able to understand that, and I thought that I would pay attention to that point from now on.In addition, I was able to understand why heaps are used, so I felt that it was very useful for understanding what heapsort is. I can't remember the differences between bubble sort, selection sort, heap sort, and merge sort, which I've been lining up so far, so I'm confused, so I thought I'd take the time to review them thoroughly.""",,,,-1
C-2021-2_U120,"""Heap sort stores from the left and stores so that parent > child. Merge sort breaks down the numerical sequence into units, continues merging from there, and merges while comparing when it can be merged into two blocks. A decision tree is a binary tree with a unique solution.""","""How to do heapsort and mergesort.""","""Is it correct to understand that in mergesort, comparisons are made only between the final two sequences?""",,"""I knew that the number of comparisons would be o(n log n), but I didn't understand the process leading up to it.""",,,,0
C-2021-2_U121,,"""I was able to understand the outline of the heapsort and mergesort algorithms and the explanation of the execution examples.""","""I didn't understand the explanation for the number of comparisons in the comparison sorting algorithm.""",,,,,,-2
C-2021-2_U122,"""Binary trees are naive and have drawbacks. It is sometimes good to use a heap that satisfies certain conditions even in a binary tree. Furthermore, merge sort, which has the same order notation for the number of comparisons as the heap, It's simpler because it doesn't use a binary tree.""","""Defining Heapsort and Mergesort
Shortcomings of Naive Binary Trees""",,,"""It was more difficult than the previous bubble sort and selection sort.
""",,,,-3
C-2021-2_U124,"""About Heapsort
About the Mergesort Algorithm
number of comparisons for the comparison sorting algorithm""","""You can now run mergesort""",,,"""It's a bit difficult to understand number sequences, but I'd like to review them thoroughly this time as well.""",,,,-3
C-2021-2_U125,"""About heapsort and mergesort. Heapsort is an algorithm that uses a binary tree, and mergesort is a simpler algorithm because it does not use a binary tree. Both of them have O(nlogn) computational complexity. .""","""Heapsort is a method of sorting using a binary tree, where the nodes of depth d are exactly 2^d, and the value of any node is less than or equal to its parent.
Merge sort is a method of sorting by dividing one number sequence into two, rearranging each of them, and merging them. The best place to split is in the middle. In the case of an odd number, when q=[n/2], divide into A1=[1...q] and A2=[q+1...n].
These two algorithms are less computationally intensive and more efficient than bubble sort and selection sort. """,,,"""This time I continued to talk about sorting algorithms, but I enjoyed the sorting algorithms with more interesting mechanisms than last time. I was impressed that all comparison-based algorithms always require O(nlogn) comparisons. Heapsort has a first stage and a second stage, and mergesort divides and then merges again, so I thought it was unexpectedly troublesome.""",,,,-2
C-2021-2_U126,"""Heap sorting overcomes the drawback of binary tree sorting that the number of operations may be excessive. Heap sorting reduces the number of operations as the number of items increases. Similar to heap sorting, binary tree sorting What is not used is merge sort.The merge sort algorithm divides the input elements up to size 1, then compares and sorts the elements.""",,,"""Nothing in particular.""","""I didn't understand the last proof assignment, but after listening to the explanation at the beginning of the class, I finally understood a little. All comparison-based algorithms always require O(n log n) comparisons. It was interesting to hear that it was clear that

""",,,,-1
C-2021-2_U127,,"""I felt that heap sort and merge sort performed sorting more mechanically than bubble sort and selection sort that I learned last time. Also, element comparison has a limit in terms of time reduction. I understand.""","""Nothing in particular.""",,,,,,-2
C-2021-2_U128,,,"""The last proof question was a little difficult. I will review the lecture notes and slides to review.""",,"""Although I learned a lot more from the sort summary class, I think it was very interesting. The content will change slightly again next week, so I'll do my best.""",,,,-1
C-2021-2_U129,"""As a sorting problem, I learned about heap sort and merge sort. Heap sort first constructs a binary tree so that it is always a heap, takes out the numbers from the root of the binary tree, sorts them, and deletes the added nodes at the end. It repeats the work of putting it into the root and making it a heap again. Merge sort is to repeat the division first and then merge it.""",,,,,,,,0
C-2021-2_U13,,"""We have roughly figured out how comparison-based sorting algorithms can never be more efficient than O(nlogn) and how to do heapsort, mergesort.""","""I didn't quite understand how you derived 3nlog2n.""",,,,,,-3
C-2021-2_U130,"""I learned about the different types of algorithms and the computational efficiency of each approach and order notation.""","""It was easy to understand because I looked at each sorting method and the difference in calculation efficiency from the order notation and diagrams. I would like to actually follow the steps myself.""",,,"""Learning about various sorting and algorithmic methods, I feel that my understanding of this field has deepened somewhat since the beginning. However, it was a little complicated, so I would like to review it thoroughly. """,,,,0
C-2021-2_U131,,"""I was able to gain a solid understanding of how the first and second stages of bitree heapsort work, and how mergesort works.""",,,,,,,-2
C-2021-2_U132,"""I learned about mergesort and heatsort""","""I kind of understood the concept of mergesort.""","""I didn't understand how to merge""","""Nothing in particular""","""Recently things have become really difficult.""",,,,-1
C-2021-2_U133,"""I learned new sorting methods such as heap sort and merge sort. I compared the order of the sorting algorithms I've used so far and learned the number of times required for the fastest case.""","""I understood the methods of heapsort and mergesort. I learned that there is a minimum number of comparisons required for comparison-based sorting algorithms. I learned that the order in which elements are compared is the algorithm.""","""I didn't understand why logn appeared in the number of comparisons for heapsort and mergesort.""","""Why does logn appear in comparison counts for heapsort and mergesort?""","""I was able to understand the sorting method through preparation and classes, but I stumbled on the number of comparisons. I want to try to understand it through review. As the number of times increases, the content becomes more difficult for me to understand, so I need to prepare as much as possible. I thought that I would like to do my best on the parts that I could understand in .I didn't learn anything until high school, so I felt the content of information science was fresh.Especially, the sorting story I'm doing now. It's the first time I've heard it and it's very applicable.""",,,,-2
C-2021-2_U136,"""Definition and problem solving of heapsort and mergesort.""","""There are two heap conditions, the number of comparisons and the complexity of each.""",,,"""The content is difficult, so I thought I'd carefully review it.""",,,,-1
C-2021-2_U137,"""Heapsort is a sorting method that reduces the number of comparisons by tightening the conditions. There is also merge sort, which can reduce the number of comparisons more than heapsort. There is also a method called binary search, which It is also used for searches, etc.","""I was able to understand the procedures for heapsort and mergesort. Also, I was able to understand the release of the exercises.""","""I couldn't understand how binary search works, so I'd like to review it and understand it by the next time.""","""I was wondering what kind of situation each sort was used in. I apologize if I missed it even though you taught me in class.""","""I thought it was getting harder and harder to understand the content. I was happy to be able to study the sorts that are used around me.""",,,,-2
C-2021-2_U138,,"""I have a better understanding of the previous assignment.""",,,,,,,-1
C-2021-2_U139,,,,,"""It was all concepts that I had never heard before, but I was able to understand them well, so I'm glad I did.""",,,,-1
C-2021-2_U14,"""The disadvantage of naive sorting using binary trees is that the calculation time varies depending on the arrangement of the input sequence. It is called a heap.The time complexity of heapsort is O(nlogn) time.In the long run, heapsort can reduce the number of worst-case comparisons.Similar to heapsort, elements are sorted in O(nlogn) comparisons. There is an algorithm called merge sort that does not use a binary tree.""",,"""When I tried it myself, heapsort took a long time because I'm not used to it, so I didn't really feel how efficient it was.""",,"""By learning various sorts, I felt that it would be useful for me to arrange things myself.""",,,,-1
C-2021-2_U140,"""How to make a binary tree, how to make a heapsort, how to make a merge sort and the number of comparisons""","""Conditions for heap sort, how to make merge sort""","""Number of comparisons for comparison sorting algorithms""",,"""I've vaguely remembered the content of selection sort and bubble sort, so I'm going to review them.""",,,,-3
C-2021-2_U141,"""Description of how heapsort and mergesort work, complexity, usage and number of comparisons.""","""The meaning and usage of heap sort and merge sort.""","""Calculation of sort complexity and number of comparisons.""",,"""I was able to understand how sorting works, how to use it, and the differences between various sorts, but I couldn't understand the amount of calculations and the number of comparisons because there were a lot of mathematical parts.",,,,-1
C-2021-2_U142,"""First, there was an explanation of the previous assignment. Then there was an explanation of sorting using a binary tree. The first explanation of binary tree sorting was omitted, but the drawback is that it is calculated based on the input sequence. There is a point that changes.The number sequence that is already lined up is the worst pattern with the largest number of comparisons.After this, I entered the explanation of the heap.In the heap, the next one is only after each depth is filled. No, with heapsort you only care about filling the heap, between binary tree sort and heapsort, heapsort is faster as the amount increases.
Merging is the operation of outputting one aligned sequence from two sequences. Merge sort also has the same number of comparisons as heap sort and is fast. As a final example of how sorting is used, there was a little talk about search, which is the most important one. ""","""I was able to understand that heapsort and mergesort are faster sorts with fewer comparisons compared to other sorts I've done in class up until today. Also, I was able to understand how to compare heapsort and mergesort. ""","""I didn't quite understand even the number of comparisons in the comparison sorting algorithm, especially the part you were talking about in (5).""",,"""To be honest, I didn't really understand what heap sort and merge sort were for, but in this lecture I understood the meaning and the need to reduce the number of comparisons. Finally, as the best example of sort There was a talk about information retrieval, and the things we had learned up until now were finally applied to things that we use in our daily lives, and my interest was piqued.""",,,,-1
C-2021-2_U145,,,"""A Study of Sorting Algorithms More Efficient than O(nlogn)""",,"""I would like to re-do the exercises to deepen my understanding.""",,,,0
C-2021-2_U146,,,,,"""I didn't quite understand the issues and contents of the previous meeting, but I was relieved that I understood a little in the early stages. I'm glad I was able to understand heapsort and mergesort properly.""",,,,0
C-2021-2_U147,"""I learned about heapsort and mergesort. A binary tree with n nodes and height h has exactly 2 d nodes with depth d (0 ≤ d ≤ h -1). Nodes exist in order from the left.2 A tree is called a heap when it satisfies that the value of any node is less than or equal to the value stored in its parent.Also, the tree is a sorted 1 from two already sorted input sequences. The operation of outputting two sequences is called merging.
""",,,,"""I was a little unfocused. I'll try my best.""",,,,-2
C-2021-2_U148,"""In heap sort, a binary tree that satisfies certain conditions is called a heap. Numbers are written according to the heap, and the method of sorting by extracting numbers from the top of the heap is called heap sort. In this sort, the number of comparisons does not exceed 3n log2 n. .Merge sort is a method of dividing and sorting numbers by using merge, which is an operation that outputs one arranged number sequence from two arranged input number sequences.At this time, the worst case number of comparisons is n log2 n.""","""I was able to actually do and understand heapsort and mergesort.""",,,"""I'm interested in the next class because I can't think of a way to sort without comparison.""",,,,-1
C-2021-2_U149,,"""Exercise 2-1""",,,,,,,-1
C-2021-2_U15,,"""I understood the principles of heapsort and mergesort.""",,,,,,,-1
C-2021-2_U151,,,"""It's not that I didn't understand it, but I found the heapsort operation a bit complicated.""",,"""As mentioned above, it took a long time to operate the heapsort. Next time, I will concentrate on the lecture so that I can understand everything in one shot.""",,,,-3
C-2021-2_U152,,"""I learned about binary trees.""",,,,,,,-1
C-2021-2_U153,"""I learned about heap sort, merge sort, comparison sort algorithms, examples of implementations, and at most number of comparisons.""","""Through classes and exercises, I was able to understand the algorithm for each sort, how to execute it, and why the maximum number of comparisons is that number.""",,,"""Next time, we'll finish the sorting field and move on to data analysis, so I'd like to thoroughly review what I've learned so far and deepen my understanding of each sorting before moving on to the next topic.""",,,,-3
C-2021-2_U154,,,,"""Nothing in particular.""","""I didn't quite understand the homework for the 6th class, so I came to the class without fully understanding the previous class, but I was able to understand it in my own way after listening to the explanation of the previous class, so I think it was good. Also, I was able to review the previous class properly before class, and I was able to prepare for this class, so I was able to understand it properly.""",,,,-1
C-2021-2_U156,"""Heapsort moves large numbers to the top of the binary tree, merge sort is a method of dividing and sorting and then merging each of them, as the name suggests.""","""Heapsorting works only if both of the two rules of heapsorting are satisfied""","""I understand how mergesort works, but I still don't understand the formulas""","""As per (3), I would like you to explain again how the expression part works.""","""Thank you for your lecture.""",,,,-3
C-2021-2_U157,,,"""I thought heapsort algorithms would be difficult, but I think I understood them after watching them a few times, so there's nothing in particular that I didn't understand. Proving the fastest order for sorting problems was difficult.""",,"""There were a lot of difficult parts, but I'm glad I was able to understand most of them. The next lesson will be related to what I've learned so far.",,,,-2
C-2021-2_U158,"""Heapsort, Mergesort, Information Retrieval""","""How heapsort and mergesort work""","""How to derive computational complexity""",,"""It made me realize that I've been using Sort without realizing it.""",,,,-1
C-2021-2_U159,"""Introduction to mergesort, explanation of specific examples""","""I got a concrete image from listening to the overview of merge sort and the explanation of specific examples

""",,,"""This time the content was relatively easy to understand""",,,,-1
C-2021-2_U16,,,"""I didn't understand the order of heapsort and mergesort, and the meaning of the Gaussian symbols.
""",,"""There are various types of sorting methods, and I understand how each works.
However, I couldn't understand what kind of calculation it actually works on the first time, so I tried to review the lecture video until I could understand it. """,,,,-2
C-2021-2_U160,"""There are various sorting methods, and you should use the one that works best for each sequence. Merge sort divides a long sequence into two parts, sorts them differently, merges them, and repeats. ""","""Merge An operation that outputs one aligned sequence from two already aligned input sequences.
Compare the two sequences from the beginning and store the smaller one in a new array.
Number of comparisons for merge operations
Assuming N1 and N2, comparison should be performed at most N1+N2-1 times. The number of comparisons is at most n(log2n)
""",,,"""I found mergesort to be a simple and revolutionary method.""",,,,-3
C-2021-2_U162,,,"""I didn't understand why base 2 in log2n disappeared when heapsort and mergesort were expressed in order.""",,"""I understand how sorting works, but I can't keep up with generalizing it with formulas.""",,,,-2
C-2021-2_U163,"""Binary tree: reading: passing order (read node values ​​in the order of left, self, right), drawback: calculation time depends on how the completed sequence is arranged, and can be enormous.
Sorting using this binary tree is called heapsort. The operation of outputting one number sequence from two already aligned number sequences is called merge, and the sorting using this is called merge sort. ""","""What are heaps and mergesorts?""","""their meaning""",,"""Recently, it's getting harder and harder, so I felt I had to do my best.
""",,,,-1
C-2021-2_U164,"""Comparison of heapsort/mergesort and various sorting algorithms""",,,,"""I was under the impression that the amount of calculation would be the same no matter how I rearranged, but it was interesting that the amount of calculation changed greatly depending on the method, overturning my common sense.""",,,,-2
C-2021-2_U167,,,"""I was confused by too many calculations
・I do not understand the meaning of the first and second stages of heat sorting

""","""
・I do not understand the meaning of the first and second stages of heat sorting
""","""Compared to the previous classes, the explanation is 'move your hands'? The degree of understanding was low because there were many ways of being told. I would like to review it again because I have not solved the part I do not understand in my homework.
Binary search went too fast, so please explain from the beginning.
""",,,,-2
C-2021-2_U168,"""In today's class, we learned how to operate heapsort, mergesort, and binary search among sorting algorithms.""","""I learned how to do heapsort, mergesort, and binary search.""",,,"""Continuing from last time, there are many calculations related to the sorting algorithm, so there are parts that are difficult to understand, but I think I learned it.""",,,,-1
C-2021-2_U17,"""Binary tree sorting, heap sorting, which one is faster?
Merge sort (execution example, division), summary of sort, comparison count of comparison sort""","""I knew how to perform each sort very well.""","""It's still difficult to find the number of comparisons. I think it's even more difficult when O appears.""","""Are there other sorts?""","""There were a lot of difficult points, so I will spend some time reviewing them little by little.""",,,,-1
C-2021-2_U170,,,"""Expression by order notation""",,"""I'm glad I was able to understand the difference between heapsort and mergesort.""",,,,-2
C-2021-2_U174,"""Which method should be used according to the new method of sorting problem that rearranges the given numbers in ascending order and the size of the number n of numbers?""","""I learned how to do heapsort and mergesort using binary trees.""",,,"""I was able to learn a new method for sorting. I was surprised and amazed that heap sort was faster than naive sort when n was 28 or more. Also, heap sort and merge sort were faster than heap sort. I'm really excited to see if it's possible to sort information even faster. Personally, I hope it's possible.""",,,,-3
C-2021-2_U18,"""Heap sort is an algorithm that arranges the order like the root of a tree while taking into account two conditions, the number contained in each floor and the size of the parent and child numbers. Merge sort divides the given numbers into two sequences. It is an algorithm that extracts one from each, compares and arranges them.""","""I see two sorting mechanisms. I also see that the order notation is like a computational upper bound.""","""I didn't quite understand the log part of the order notation.""",,"""Even though there are various ways to arrange in ascending order, it is interesting that all of them take a lot of time and effort when done by humans, but when done by a computer, there is a big difference.""",,,,-1
C-2021-2_U19,"""There are also efficient sorts such as heap sort and merge sort.""","""I learned how heaps and mergesort work.""","""I didn't fully understand the math on the number of comparisons.""",,"""I completely forgot to write in my diary, so I want to write it sooner next time.""",,,,-2
C-2021-2_U20,"""Based on the previous bubble sort and heap sort, I learned about merge sort and other algorithms to compare.""",,,"""Stirling's Theorem...I think I've heard the name, but I don't know what it is.""",,,,,-2
C-2021-2_U21,"""For heapsort and mergesort, I learned the number of comparisons and their order notation.""","""I was able to understand how to do heapsort and mergesort by listening to explanations and actually using my hands.""",,,,,,,-3
C-2021-2_U23,,,"""The number of heapsort comparisons must not exceed 3nlogn.""",,,,,,-3
C-2021-2_U24,"""Heapsort and Mergesort, Limitations of Element Comparison""","""O(n log n) is the limit for element comparison""","""It was difficult to grasp the flow of heapsort""",,"""The formula seemed complicated and I was afraid to shy away from it, but after listening to the lecture, I was convinced.""",,,,-2
C-2021-2_U25,"""How heapsort and mergesort work.""","""Heapsort and how it works to compensate for the shortcomings of binary trees.""","""On Binary Search.""",,"""Next time, I want to prepare well so that I can understand everything in one shot.""",,,,-3
C-2021-2_U26,"""With a naive sort using a binary tree, the computation time changes depending on how the input sequence is arranged. Therefore, we consider a binary tree called a heap. A heap is a binary tree with n nodes and h height. home,
(1) Exactly 2^d nodes with depth d (0<=d<=h-1) exist, and nodes with depth h exist in order from the left
(2) any node's value is less than or equal to the value stored in its parent
It satisfies the following two conditions.
In heapsort using a heap, the number of comparisons does not exceed 3n*log2(n) when the size of the input sequence is n. So the order of heapsort is O(n*log(n)). That is, the larger n is, the fewer comparisons a heapsort will make than a naive sort on a binary tree.
Merge sort is an algorithm that sorts elements by O(n*log(n)) comparisons, similar to heap sort, and recursively repeats the operation of dividing, sorting, and integrating a sequence.
Heapsort and mergesort are the fastest comparison-based sorting algorithms.
""","""I was able to understand that heapsort and mergesort are the most efficient algorithms for comparing elements. I was also able to understand the procedure of heapsort.""","""Nothing in particular.""","""Nothing in particular.""","""I didn't really understand Heapsort at the preparatory stage, but I was able to understand it by listening to the lecture and actually using my hands. I want to concentrate on the next lecture.""",,,,-2
C-2021-2_U27,,,"""I don't quite understand the order notation.""",,"""It was good to realize that there are many types of sorting.""",,,,-3
C-2021-2_U28,,,,"""Nothing in particular.""",,,,,-1
C-2021-2_U29,"""How to read a binary tree
heap (node, etc.)
Merge sort algorithm
Introduction to Binary Search""","""Conditions for a tree to become a heap
O(nlogn) effectiveness in speed is found.
Some understanding of how mergesort works
""","""I didn't really understand why the number of heapsort comparisons did not exceed 3nlogn.
Overall, I didn't understand why the log appeared.""",,"""I learned sorting that compares elements, which is more difficult than last time (merge sort/selection sort), and I didn't quite understand where the log appeared, so I want to review and deepen my understanding. I'm looking forward to learning more about exploration.""",,,,-3
C-2021-2_U3,"""[heapsort]
Binary tree = rooted tree where each node has at most two children
Left if smaller, right if larger
Passing order: Read the contact value in the order of (left child, self, right child)

Disadvantage: Calculation time changes depending on input order.
　　　Assuming the size of the input string is n, the number of comparisons in the worst case is n(n-1)/2
Conditions that can be called a heap
(1) There are 2 to the power of 2 points of contact with depth d (0<=d<=h-1), and nodes with depth h exist in order from the left.
(2) Any node value is less than or equal to the value stored in its parent.

Heapsort comparison count
When the input sequence size is n, the number of heapsort comparisons does not exceed 3Nlog2N
The calculation time of heapsort is O(nlogn) time → the larger the number, the shorter the calculation time compared to other sorts.

[merge sort]
align elements with O(nlogn) comparisons
Merge: An operation that outputs an ordered sequence from two already ordered input sequences.
= Compare the two sequences from the beginning and store the smaller one in a new array.
Number of comparisons for merge operations
In order to merge a sequence A of size n1 and a sequence B of size n2, comparisons should be performed at most n1+n2-1 times.
Merge sort comparison count
If the size of the input sequence is n, then
・The total length of merge sort is always n
→Do not exceed the total number of comparisons of elements in each row, n
・The number of stages of merge sort is at most log2N
→The number of comparisons is at most Nlog2N

[Number of comparisons for comparison sorting algorithm]
・The solution candidates are narrowed down based on the results of comparing the two elements.
・It can be represented by a decision tree.
→ The order in which elements are compared = Algorithm
・The number of comparisons of the algorithm for the input sequence A is equal to the number of edges from the root of the decision tree to the leaf (solution for A)
The number of comparisons in the worst case is equal to the height of the decision tree.
　A minimum height of a binary tree with at least n leaves
""Increase in proportion to nlogn""","""I learned the heapsort and mergesort methods, and was able to sort them. Heapsort and mergesort take less time than bubble sort and selection sort to calculate a large number of numbers, and are more efficient. I also found that I can make good use of","""I still can't say that I fully understood the calculation formulas and ranges. I would like to take measures such as going back to lecture materials from earlier classes to review from the basics.""","""is not""","""Thank you for explaining the self-study, it was easy to understand and I was able to solve my doubts. Thank you very much.""",,,,-3
C-2021-2_U30,"""Understanding heapsort and mergesort with pre-ordered columns, which are advanced versions of binary trees""","""Principle of Heapsort, Mechanism of Mergesort""","""formula part""",,,,,,-1
C-2021-2_U31,"""I learned heapsort and mergesort algorithms.
Comparison sorting algorithms always require O(nlogn) comparisons. ""","""I understood the heapsort algorithm.
It turns out that mergesort can sort without using a binary tree.
It turns out that comparison-based sorting always requires O(nlogn) comparisons. ""","""I didn't quite understand why there is no algorithm that is more efficient than O(nlogn) for comparison-based sorting.
I didn't understand well about the number of comparisons in mergesort. """,,"""There was a more complex algorithm than last time, and it was difficult to understand.""",,,,-2
C-2021-2_U33,"""For more than 38 input sequences, heapsort is more efficient than binary tree. Mergesort is a simpler algorithm because it does not use binary trees.""","""We can now configure heapsort to have a large parent. We found that when the size of the input sequence is n, the number of heapsort comparisons does not exceed 3nlog2n.
Mergesort allows you to output a single sorted sequence from two already sorted input sequences. """,,,,,,,-2
C-2021-2_U34,,"""I was able to understand how heapsort and mergesort work.""",,,,,,,-1
C-2021-2_U36,"""Heapsort is an algorithm that uses a binary tree. First, the binary tree is constructed so that it always becomes a heap, and the numbers are arranged while deleting nodes one by one from the completed heap. Heapsort is an order of nlogn. , and is faster than the naive binary tree sort with fewer comparisons as n grows.Merge sort does not use a binary tree, but divides the sequence and then By recursively performing the operation of merging, we finally obtain an aligned number sequence. Merge sort can also be calculated in the order of nlogn and is simple because it does not use a binary tree.""","""By learning the heapsort and mergesort algorithms, I was able to learn how to sort simple sequences and how many comparisons to make by actually using my hands. Determining the order by comparing elements inevitably takes o(nlogn) time. I was able to understand what was required both numerically and conceptually.""","""I couldn't think of a way to determine the order other than doing element comparisons.""",,"""It was nice to learn new heapsort and mergesort algorithms. Mergesort is a fairly simple algorithm and I had no trouble understanding it.""",,,,-1
C-2021-2_U37,"""Heapsort and Mergesort""","""I learned about heapsort and mergesort""",,,"""I'm glad I was able to understand the lecture well""",,,,0
C-2021-2_U38,,,"""I understand what you mean with the explanation on page 30, but I don't understand the formula.""",,"""When thinking about the number of comparisons, the idea of ​​a decision tree as an application of binary trees came up again, and I realized the importance of binary trees.""",,,,-2
C-2021-2_U39,"""Today we learned about heap sort and merge sort. A heap is a binary tree with n nodes and h height that satisfies two conditions. The first condition is There are exactly d nodes of depth d, and nodes of depth h exist in order from the left. The second condition is that the value of any node must be smaller than its own parent.The first stage of heap sorting is binary while satisfying the conditions. Next, the second stage is to remove the nodes one by one from the heap completed from the first stage and add numbers, for example, the number at the top of a heap and replace it with the last number (bottom right).Here, the number at the top of the heap is the largest according to condition 2. By repeating this operation, heapsort can be performed.In addition, heapsort comparison The number of times does not exceed n in 3nlog2 when the size of the input sequence is n, because once per comparison with the parent in the first stage and twice per comparison left and right in the second stage. , because the height of the heap consisting of n nodes does not exceed n in Log2 (according to condition 1), so the time complexity of the heap is O(nLogn).Next, mergesort is heapsort The time complexity of mergesort is O(nLogn) like , and mergesort is simpler because it does not use a binary tree.The basic concept of merge is that two already aligned From the input sequence, the output is a sorted sequence, that is, a new sequence is obtained by comparing the two sequences from the beginning and selecting the smaller one.Also, the comparison of merge sort. The number of times is at most (adding the size of each sequence and subtracting 1), that is, A + B - 1. Also, if the input size is 2 to the nth power, you can always divide by 2, but the input If the size is not the nth power of 2, sort by using Gaussian notation to the smallest integer greater than half its size, for example, if the size is 5, half of it is 2.5, and 2.5 Since the smallest larger integer is 3, it can be sorted by dividing it into 3 and 2. Also, the sum of the lengths of the sequences divided in each stage of merge sort is always n, and the number of stages of merge sort is Since it is n of Log2 at most, the number of comparisons of merge sort is at most n (n of Log2). Also, any comparison sorting algorithm necessarily requires O(nLogn) comparisons. ""","""I learned about the alignment methods and time complexity of mergesort and heapsort, and also about the number of comparisons in comparison sorting algorithms.""","""is not.""","""is not.""",,,,,-1
C-2021-2_U40,"""There was an explanation of heap sort using a binary tree. There is a tree called a heap, and by performing a binary tree with conditions, it becomes a more efficient sort. A disadvantage of the binary tree is that it depends on the order. The number of comparisons varies and the computation time depends on the order, but heapsort compensates for this.We also learned about merge sort.Both of them keep the number of comparisons small by using logarithms. We also know that these comparison-based algorithms always require O(nlogn) comparisons.""","""I found mergesort to be very useful. I also found that on a comparative basis, I could never get below nlogn.""","""If it is a comparison-based algorithm, it is not clear which one is the most effective after all. I wondered if the small number of comparisons was the only evaluation criterion.""",,,,,,-1
C-2021-2_U41,"""In a binary tree with n nodes and height h, there are exactly 2 to the power of 2 (0 ≤ d ≤ h - 1) nodes with depth d, and nodes with depth h exist in order from the left. A heap is a binary tree in which the value of any node is less than or equal to the value stored in its parent.It is inconvenient that the depth of the binary tree formed by the arrangement of the input sequence changes, so the depth is the same. In order to create a heap, we perform the following two steps: First, in the first step, the value of any node is less than the value stored in its parent, If the conditions are not met, the parents and children are swapped, and so on until the conditions are met.In the second step, one node at a time is removed from the heap completed in the first step. First, take out the numbers from the root and sort them, delete the last added node and store the number of nodes in the root.Here, if the value of the child is greater than the value of the root, , exchanges the root value with the larger one of the right child and the left child, and continues to exchange until the magnitude relationship between the parent value and the child value is satisfied.In heap sorting, when the size of the input sequence is n, the comparison The number of iterations is 2nlog(2)n+nlog(2)n, not more than 3nlog(2)n (where (2) is the base), and the computational complexity of heapsort is O(nlogn) time. Comparing the worst number of comparisons between simple sorting using binary trees such as bubble sorting and selection sorting and heap sorting, it can be seen that heap sorting is superior at n=38.
There is an algorithm called mergesort, which is simpler than heapsort (because it does not use a binary tree) and aligns elements with O(nlogn) comparisons like heapsort. Merge sort divides the input sequence A into smaller sequences A1 and A2, and merges a1 and A2 after sorting to obtain the sorted result of A. Merge is an operation that outputs one aligned alignment from two already aligned input alignments, and it aligns by comparing the two sequences from the beginning and storing the smaller one in a new array. When merging sequences of size n1 and size n2, at most n1+n2-1 comparisons should be performed. This is because one element is always output when element comparison is performed once, the size of the finally output sequence is n1+n2, and the last remaining element has no comparison partner. By the way, the number of comparisons is (n1+n2-1) when the values ​​appear alternately from the smaller one in the two series. The way mergesort works is to recursively split the input sequence into two alignments, sort each one, and then merge the two sorted sequences. Note that the merge sort divides the sequence of size n into A[1...q] and A[q+1...n]. Here, let q=[n/2]. At this time, the sum of the lengths of the sequences divided in each stage of the merge sort is always n, the total number of comparisons of the elements in each stage does not exceed n, and the number of stages of the merge sort is at most [log(2 )n], the number of comparisons in merge sort is at most n[log(2)n]. In fact, any comparison-based sorting algorithm necessarily requires O(nlogn) comparisons. A binary tree for sorting is called a decision tree, and a comparison sorting algorithm can be represented by a decision tree. where the number of comparisons in the comparison sorting algorithm is at least n! is greater than or equal to the minimum height of a binary tree with leaves If the height of the decision tree is h, the number of leaves is at most 2 to the power of h, so (2 to the power of h)>n! /2)nlog(2)n, and it can be seen that the number of comparisons required for sorting increases in proportion to nlog(2)n. By the way, the nature of the comparison sorting algorithm is that it narrows down the candidate solutions by virtue of the comparison.
Information retrieval is the process of retrieving information that matches a purpose from a large amount of data. One way to speed up information retrieval is to pre-sort the data and then perform a secondary search.
Since we want to check whether an integer is included in a set (integer search problem), the input is an integer set S and an integer x, and the output is yes if x is included in S, and if x is not included in S Think as no (integer search problem). When S is not aligned, we search for x from the beginning (left end) (linear search), and in the worst case we have to compare elements n times, and the time complexity of linear search is O(n). Become. This is too much computation, so we search for x in the following way. (Binary search)
When S is aligned, the middle elements y and x are compared, and when y is greater than x, the first half of y is compared, and when y is less than x, the second half of y is compared with the middle value, and y= Repeat until x. ""","""Heap sort is more efficient than the bubble sort, selection sort, or naive sort using a binary tree that we studied earlier, when n exceeds 38. We also found that comparison sort-based sorting algorithms have an order of magnitude less time complexity than bubble sort and selection sort.""","""In my discussion of the total number of comparisons in heapsort, I didn't understand why the first stage would result in a total of n-1 comparisons.""","""Nothing in particular.""","""There are still some parts I'm not quite satisfied with (the parts marked with a yellow marker), so I thought I'd review them so that I would be able to understand them properly.""",,,,-1
C-2021-2_U42,"""In addition to bubble sort and selection sort, there are heap sort and merge sort as types of sort, and the computational complexity of kernel sort algorithms is O(n log n) and O(n^2), respectively.""","""When the size of the input sequence is n, the number of comparisons in heapsort does not exceed 3nlog2(n), and the height of the heap consisting of n nodes does not exceed log2(n). Merge sort is It is an operation that outputs an aligned sequence from two already aligned input sequences.To merge sequence A of size n1 and sequence B of size n2, it takes at most n1+n2-1 operations. you can do it.""",,,"""Continuing from the last time, it was interesting to learn about the sorting performed by the computer. I learned that there are various algorithms, so I would like to be able to decide for myself which sorting should be used in which situation. .""",,,,-1
C-2021-2_U43,"""A disadvantage of sorting using a binary tree is that the calculation time varies depending on how the input sequence is arranged. A binary tree with n nodes and height h is 1. Nodes with depth d are exactly 2^d A tree is called a heap when it satisfies the following two conditions: 2. The value of any node is less than or equal to the value stored in its parent. The sorting performed by going through the first stage and the second stage so as to satisfy is called heapsort.The number of comparisons in heapsort does not exceed 3nlog2n, and the computational complexity is O(nlogn). It can be seen that the calculation becomes faster.
Merging is an operation that outputs one sequence that has been sorted from two already sorted input sequences, and the computational complexity is also O(nlogn).
Therefore, sorting by element comparison always takes O(nlogn). ""","""I was able to learn about heap sort and merge sort. I found that the computational complexity is always O(nlogn) if it is a method that compares elements.""",,,"""The heapsort method seemed difficult. I wanted to be able to do it myself.""",,,,-1
C-2021-2_U44,"""Heap sorting is the sorting of numbers using a binary tree that satisfies the conditions for a heap. As the number of input numbers increases, the calculation time is shorter using heap sorting than simple binary tree sorting. The process of outputting one sorted sequence from two sorted input sequences is called merge sort. Merge sort is simpler than heap sort because it does not use binary trees.""",,"""When I heard the explanation, I felt that binary tree sorting had fewer steps than heap sorting and was simpler, so I wondered if heap sorting could actually complete calculations faster when the numbers were huge.""",,"""It was interesting to have various sorting methods such as heap sort and merge sort.""",,,,-1
C-2021-2_U46,,,,,"""It's a lot of work for humans to do, but sorting is very interesting for computers because it's an efficient method.""",,,,-3
C-2021-2_U48,"""To put it simply, heap sort is a binary tree that is filled from the top so that the child is not larger than the parent. If the computational complexity of heap sort is expressed in order notation, bubble sort and selection sort. Faster for longer inputs than mergesort.Mergesort is simpler because it does not use a binary tree.Mergesort divides the sequence and then merges it.Mergesort is ordered. Notationally, it's the same as heapsort.No comparison sorting algorithm is faster than O(nlog n).""","""I now know what heapsort is. I also know what mergesort is. The worst-case complexity is the same for heapsort and mergesort, but mergesort is the simpler sorting method. If the input is It turns out that long ones are more efficient to use heap sort and merge sort, and shorter ones are more efficient to use naive sort, bubble sort or selection sort.""",,,"""I'm glad that I was able to understand what kind of things sorting is actually used for. Next time, I think it will be about searching, so I'm looking forward to knowing how sorting is actually used.""",,,,-3
C-2021-2_U5,"""There are many types of algorithms, such as heap sort, which builds a kind of binary tree called heap structure and sorts, bubble sort, which compares and exchanges adjacent elements in order from the end, and data string There is merge software that divides into small pieces and merges them gradually while arranging them.""","""I understood the mechanism of the binary search method and was able to put it into practice.""","""Mechanism of calculating sigma in heapsort and mergesort.""",,"""A lot of seemingly difficult algorithms came out, but I'm glad I understood their purpose. It seems that the binary search method can be applied to find arbitrary books on library bookshelves, so I'd like to put it into practice.""",,,,-3
C-2021-2_U50,,,"""Nothing in particular.""",,,,,,-3
C-2021-2_U51,"""Learn about heapsort and mergesort
""","""I figured out how to sort and extract heapsort.""","""I had no idea how to order without using element comparison""",,"""It was easy to understand because it was illustrated and explained.""",,,,-2
C-2021-2_U53,"""Today, I learned about sorting using binary trees, heap sorting, merge sorting, etc. I was able to learn new algorithms.""","""When creating a heapsort, I thought that the operation to replace the parent and satisfy the conditions was similar to the bubble sort that I had learned before, and it was interesting to learn and realize that everything is connected. Merge sort was very simple and easy to understand.""","""You can see an example of sorting using a binary tree, but when it came to making it myself, there were parts that I didn't quite understand no matter how many times I tried it, and it was difficult.""","""I often see the logarithm log when comparing ranks, but I wonder why log is so closely related to sorting. Is there a reason?""","""In today's class, we also learned about algorithms. I think I've finally gotten used to algorithms around this time. However, I had a hard time understanding the heapsort that I learned this time. I hope to be able to understand it by the next time. I thought.""",,,,-3
C-2021-2_U54,"""In heapsort, the number of comparisons is reduced because the last digit cannot be compared. In mergesort, it is already sorted, so we only need to merge. The number of comparisons in the worst case of the algorithm is equal to the height of the decision tree. .""","""I wasn't able to do much of the report assignment, but after listening to the explanation, I understood. I learned how to do heapsort, especially when condition 2 is not met.""","""I didn't understand why the number of comparisons showed log.""",,"""I was disappointed that I made a mistake in the last quiz, but this time I got a perfect score, so I want to do my best next time. I learned a lot of different sorting algorithms, so I learned how to do each one, the number of comparisons, and the order. I'm going to review. The content of the class is getting harder and harder, so I'm going to do my best to prepare and review more than before.""",,,,-1
C-2021-2_U55,"""Some of the algorithms use binary tree sorting. The sorting reads in passing order, but the calculation time varies depending on the arrangement of the input sequence. A binary tree of height h has exactly 2^d nodes of depth d, and nodes of depth h exist in order from left to right, and any node value is less than or equal to the value stored in its parent value A tree that satisfies the two conditions is called a heap. Merge sort is a sort that performs an operation to output one sequence that has been sorted from two input sequences that have already been sorted.""","""I learned how to define heapsort and mergesort.""","""I haven't learned how to do it yet, so I want to review it.""",,"""Now that I know how to do heapsort and mergesort, I want to try it myself and practice using my hands.""",,,,-1
C-2021-2_U56,"""A binary tree is a rooted tree where each node has at most two children. Traversing order is reading the values ​​of a node in the order left child, self, right child. If the target node has children, read the left child first, then its own value, then the right child, in walking order.Disadvantages of naive sorting using a binary tree is that the computation time changes depending on how the input sequence is arranged.When the size of the input sequence is n, the number of comparisons in heapsort does not exceed 3log₂n.Since the merge sort algorithm does not use a binary tree, it is simpler Merge is the operation of outputting one sorted sequence from two already sorted input sequences.To merge sequence A of size n₁ and sequence B of size n₂, at most n₁＋n₂－1 Assuming that the size of the input sequence is n, the sum of the lengths of the divided sequences at each stage of the merge sort is always n. The total number of times does not exceed n.The number of stages in merge sort is at most log₂n, so the number of comparisons in merge sort is at most nlog₂n.The comparison-based sorting algorithm narrows down the lower candidates according to the comparison result of two elements. Therefore, any comparison-based sorting algorithm always requires O(nlogn) comparisons.One way to speed up information retrieval is to pre-sort the data and then perform a binary search. If the elements of s are not aligned, searching for x from the beginning is called linear search.""","""I was able to learn about the mechanisms of binary trees and heapsorts, which I didn't know last time.""",,,,,,,-2
C-2021-2_U57,"""In today's lecture, we mainly learned about heapsort and mergesort. Both of these are algorithms that align elements in O(n log n) comparisons, while heapsort uses a binary tree. Mergesort doesn't make use of it, so it's simpler.""","""By studying heapsort and mergesort, I was able to understand the contrast between heapsort that uses binary trees and mergesort that does not use binary trees. Mergesort is also superior in the number of comparisons in the worst case. I also understand that.""","""When I listened to this lecture, it sounded like heapsort had no advantage over mergesort. I didn't understand where heapsort was superior.""",,"""Until now, there were bits and pieces of stuff I knew, but now it's full of things I've never seen before. I've been preparing for lessons, but there are parts that I can't grasp with just that, so I want to review them properly. thought.""",,,,-2
C-2021-2_U58,"""Heapsort uses a binary tree, but the calculation time changes depending on how it is arranged.
Merging is to compare the size of the heads of two number sequences that have already been arranged and rearrange them into one number sequence.
Sorting is used in search engines, where binary search is used. ""","""I understood how to use the order notation and the basic concept.
I found out how to use sort specifically. ""","""The heap definition was confusing.""",,"""I thought sort was used in unexpectedly familiar places.
""",,,,-1
C-2021-2_U59,,,,,"""I had heard of bubblesort, but never heard of heapsort or mergesort, so I was able to learn about new algorithms.""",,,,-2
C-2021-2_U6,"""Binary tree sorting sorts small items on the left and large items on the right, so the number of comparisons varies greatly depending on the item. Heap sorting creates a binary tree while sorting in descending order for the time being, so the number of comparisons is reduced. It is fixed to some extent and the maximum number of times does not increase too much. Merge sort is convenient because the program is simple and the number of comparisons does not become too large.""","""I understand why you don't use only one method for sorting. I understand the importance of thinking about sorting according to the usage and the amount of data.""","""The explanation of the number of comparisons in the comparison sorting algorithm was so complicated that I couldn't quite understand it.""",,"""During class, I couldn't understand and was left behind, but after watching the class video, I was able to understand.",,,,-2
C-2021-2_U60,"""Binary trees can be used for sorting by placing values ​​smaller than the parent on the node to the left of the parent and values ​​larger than the parent on the node to the right of the parent, and reading them in passing order.
However, even if a simple binary tree is used, the computation time will vary depending on how the input sequence is arranged, but the computation time can be shortened by using a tree called a heap.
A heap is a tree in which the deepest leaf node is left to right, and the other leaf nodes at depth d are 2^d, and the value of the child is always less than or equal to the value of the parent.
Based on this, the method of sorting while exchanging the nodes of the binary tree and replacing the last number with the root is called heap sort.
Between the former method and the latter method, the more the number of terms in the input sequence, the shorter the calculation time for the latter.
Also, a sorting method that divides the input number sequence into one element and then merges them (outputting one number sequence from two already sorted number sequences) is called merge sort.
Like heapsort, mergesort is a method that can sort by O(nlogn) comparisons, but it is simpler than heapsort because it does not use a binary tree.
By the way, comparison sorting algorithms always require O(nlogn) comparisons, and mergesort and heapsort are the most efficient comparison sorting algorithms. ""","""Understanding Heapsort and Mergesort""","""Computing the number of comparisons for heapsort and mergesort""",,"""I'm late writing the journal again. I'll try to write the journal on the day I have classes as much as possible.""",,,,0
C-2021-2_U63,,,,,"""Every time I learn a new kind of sort, I'm a little impressed to see the effort for simplification.""",,,,-3
C-2021-2_U64,"""In this class, we learned about heap sort and merge sort. We also learned about the number of comparisons for each. We also learned how to use the merge sort algorithm. Finally, we learned about bubble sort, selection sort, I learned about the number of comparisons in the worst case of sorting using binary trees, heap sorting, and merge sorting, and the order notation of the number of comparisons.""","""I was able to gain some understanding of sorting using binary trees. I also learned that merging is the operation of outputting an ordered sequence from two already-ordered input sequences. Heapsort Both mergesort and mergesort have the same number of comparisons, but mergesort turns out to be simpler than heapsort because it does not use a binary tree.""","""In this class, I noticed that I didn't have a deep understanding of the number of comparisons and the amount of calculation for each sort. I was able to understand the merge sort algorithm somewhat, but when it came to generalization, I felt that the formula was difficult.""","""Nothing in particular.""","""In addition to the previous bubble sort and heap sort, I learned about the details of heap sort and merge sort, but I haven't reached the point where I can distinguish between them yet. I want to be able to.""",,,,-2
C-2021-2_U65,"""Binary tree = rooted tree where each node has at most two children
↑ reads node values ​​in the order of left, self, and right (passing order) → Left priority
Calculation time varies depending on how the input sequence is arranged

Heap = There are many parts that are divided from the left, and the number is smaller at the bottom

When the size of the input sequence is n, the comparison rank of heapsort does not exceed 3nlog^2n
・Compare with parent → once
・Compare left and right → twice
n the height of the heap consisting of this node does not exceed log₂n
Heapsort nlogn time
binary tree sort n^2 time
Bubble sort, selection sort n^2 hours


merge sort algorithm
= Algorithm that sorts elements with nlogn comparisons, similar to heapsort
Merge = operation to output one sorted number sequence from two already sorted input number sequences

To merge a sequence of size n with a sequence of size m, at most n+m−1 comparisons are required.
If the size of the input slides is n, the sum of the lengths of the split sequences in the merge stream is always n → the sum of the number of comparisons of the slide elements does not exceed n.
The number of stages of merge sort is at most log₂n → the comparison rank is n(log₂n)
*Order notation nlogn

Comparison-based sorting algorithms always require O(nlogn) comparisons because they narrow down the candidates by the result of scratching two elements.
The order of scratching the elements = Algorithm
Number of comparisons in worst case = height of decision tree

Extracting information that matches the purpose from a large amount of data = information retrieval
""",,"""Nothing in particular""",,"""The diagrams were clear and easy to understand.""",,,,-1
C-2021-2_U66,"""About heapsort and mergesort algorithms. (Binary search method)""","""I was able to understand the algorithms and computational complexity of heapsort and mergesort.""","""I couldn't understand the number of comparisons in the comparison sorting algorithm in the second half.""",,"""Heapsort is a bit complicated, but I thought I could sort by following the steps.""",,,,-2
C-2021-2_U67,"""There is heap software that uses a binary tree, and the binary tree has the drawback that the calculation time changes depending on the order of the numbers input. There are two conditions for what is called a heap. , These two are heap sort.Also, when comparing soap and heat soap in a simple binary tree, heat soap is more efficient from a certain number.There is also merge sort, and merge is It creates a sequence from two already aligned input sequences.There is also a method called binary search.""",,,,,,,,-1
C-2021-2_U68,"""In integer sorting, the maximum number of comparisons is n(n-1)/2 in the case of a naive binary tree. However, in the case of heap sorting, it can be done in 3nlog2(n) times, and as n increases, Heapsort takes fewer tries.""","""It turns out that which sort is faster depends on the number of integers n. In this example, when n is small, the naive binary tree sort is better, and when n is large, the heap sort is better. Are better.""","""Nothing in particular.""","""Nothing in particular.""","""It was interesting to learn that there are various algorithms other than bubble sort and selection sort, which I followed last time.""",,,,-3
C-2021-2_U70,"""The content of this time is a continuation of the previous sorting, and we learned about merge sort. Merge sort is the work of comparing the first element of each of the two input arranged number sequences and extracting the smaller one. In addition, by using this, one or more sorted input sequences are repeatedly divided until each element becomes two, and the smallest chunk is sorted by It is possible to sort by adopting a merge sort method, and the number of comparisons in this method is at most n[log2n].""","""In today's content, in addition to the two sorting methods we learned last time, we were able to sort a sequence using a new technique called merge sort. Also, we were able to calculate the number of comparisons on our own.""","""When calculating the number of comparisons for comparison sorting, I didn't quite understand the explanation that the number of comparisons is proportional to nlogn due to the height of the decision technique.""",,"""In this class, we learned about the third method of sorting, but it was interesting to generalize these and come to the conclusion that the number of comparisons for comparison sorting always requires O(nlogn). """,,,,-1
C-2021-2_U71,"""I learned how to use several kinds of algorithms for sorting sequences of numbers and their advantages and disadvantages.""","""I learned how to use it as a tool and its characteristics.""","""I understood how to use it and how it works, but there were parts I didn't understand when I rewrote it into a formula.""",,"""There was something I didn't understand about the formula, so I'll review it later.""",,,,-1
C-2021-2_U72,"""Sorting is done using a binary tree. First, prepare an appropriate number. Compare it with the size of the next character. If it is smaller, place it on the left, and if it is larger, place it on the right. Repeat this. This The number of calculations varies depending on the input sequence.The worst pattern is that the number of calculations becomes n(n-1)/2 times, where n is the size of the input sequence.To solve this problem, the number of nodes Consider a binary tree with n and height h, and a heap with 2^d nodes of depth d (condition 1), where every node is smaller than its parent (condition 2). Think.It should be simple to make it a heap.While always keeping condition 1, if an event that does not meet the condition 2 of the heap occurs, replace it with the parent.From there, take the number with the largest number, that is, the root , put the last number at the root, then arrange it so that it satisfies condition 2. Repeat this until there are no more binary trees. )n, and the height of a heap consisting of n nodes does not exceed log(2)n, and the computation time for heapsort is O(n*logn), compared to a simple binary tree computation The amount of time is less than n = 38. The mergesort algorithm, like heapsort, is a O(n*logn) computation without using binary trees.Two sequences already sorted. to output one aligned sequence, i.e. compare only the beginning of each sequence.To merge a sequence of size n1 with a sequence of size n2, do n1+n2-1 comparisons Before doing the merge sort, divide the sequence into two in the middle and merge each, then merge the two sequences.When n≠2^k, divide by the quotient and either + 1. The number of comparisons for merge sort is n*⌈log(2)n⌉ times.There have been various comparisons for sorting so far, but when talking about the order function, there are only two types. No. This is the reason why I prepared the order function.For example, if there is a series of numbers a, b, and c whose sizes are unknown, there are 3!=6 numbers after sorting this series, and the size of the letters is The number of comparisons in the worst case of the algorithm is equal to the height of the tree, which is at least n if the height of the decision tree is h The maximum number of leaves with height h is 2^h, so n! (2) Increases in proportion to n. ""","""I understand most of it.""",,,"""This time, I was very intrigued by the content that got to the essence of the algorithm itself.""",,,,-2
C-2021-2_U73,,,"""I've stumbled a bit when calculating the number of comparisons between the two, and I'm still not sure how many comparisons I'll make, so I'll review it.""",,"""I was able to reduce the number of comparisons to O(nlogn), so I'm looking forward to seeing if I can reduce this by using a method that doesn't compare elements. Also, there are often things I don't understand well, so I want to remember to review them. """,,,,-3
C-2021-2_U74,"""In this class, I explained the contents of the order in detail based on the contents inherited from the previous class, and introduced a new way of thinking.""","""In addition to nlogn, I learned that the sorting method can be efficiently changed depending on the way of thinking.""",,,,,,,-2
C-2021-2_U75,"""In a binary tree with n nodes and h height, there are exactly 2^d nodes of depth, and nodes of depth h exist in order from the left, and each node is a value stored in its own parent. The tree is called a heap when Sorting is called sorting.Merging is the operation of outputting one sorted sequence from two already sorted input sequences.The number of comparisons in merge sort is at most nlog₂n.All comparison-based algorithms are necessarily O(nlogn ) comparisons.""","""I was able to understand what heapsort and mergesort were like.""","""I didn't really understand the decision tree and Stirling formula.""",,"""I'd like to review what I didn't understand and try to understand it, so that I can deepen my understanding of sorting.""",,,,-2
C-2021-2_U76,"""The drawback of sorting using a binary tree is that the calculation changes depending on how the input sequence is arranged. To eliminate this drawback, there are exactly 2^d nodes of depth d, and the nodes of depth h are A tree is called a heap when it exists in order from the left and no node is less than the value stored in its parent.When the size of the input sequence is n, the number of comparisons in heapsort does not exceed 3nlog2(n). In the simple sort of binary tree and heap sort, when the number of inputs is a certain value, the heap sort has a large number of worst comparisons.In addition, the number of stages of merge sort is at most log2(n), and the number of comparisons is reversed. is at most n[log2(n)].""","""I learned how to operate mergesort and heapsort.""","""It was difficult to slide the number of comparisons (4) and (5) of the comparison sorting algorithm.""",,"""I found it interesting to see how the sorting algorithm was developed to be more efficient.""",,,,0
C-2021-2_U78,"""Today, I learned about heap sort and merge sort. I felt that it is important to choose the type of sorting that can be done the fastest.""","""As a condition of the heap, we found that the nodes of depth d were modulo 2 and less than or equal to the value stored in the parent of . Merge sort, from the two input sequences already sorted, yields It is an operation that outputs a single sequence of numbers that have been sorted.""","""I didn't know how to calculate the number of heapsort comparisons.""",,"""It was good to know the various sorts.""",,,,-3
C-2021-2_U79,"""I learned about features and drawbacks of sorting on binary trees, features of heapsort, and features of mergesort.""","""I learned what kind of algorithms are sorting, heap sorting, and merge sorting using binary trees.""","""I still don't have a deep understanding of the order of each sort.""","""Nothing in particular.""","""It was interesting to learn 3 new sorting algorithms.""",,,,-1
C-2021-2_U8,"""A disadvantage of naive sorting using binary trees is that the calculation time varies depending on the order of the input sequence. Therefore, in the worst case, the number of comparisons for a sequence of size n is n(n-1)/2. A binary tree with a depth of d is called a heap when it satisfies the condition that there are d-th-th nodes in each column from the left, and the value of any node is smaller than the parent. Heapsort is a sort using this tree.When the size of heapsort is n, the number of comparisons does not exceed 3nlog₂n.In addition, the computational complexity is O(nlog₂n) time.The number of comparisons is similar to that of heapsort, but binary There is also a tree-less mergesort, where a merge is an operation that outputs a single ordered sequence from two already-ordered input sequences, and a merge operation merges two sequences of size n1 and n2. Sometimes it is enough to perform at most n₁ + n₂-1 comparisons.The merge algorithm is an operation that divides a sequence until the size becomes 1 and merges each sequence recursively.The number of comparisons in merge sort is There are at most nlog2n comparisons for an input sequence of size n.Since the number of comparisons for a comparison sorting algorithm is at least the minimum height of a binary tree with n! leaves, any comparison-based sorting algorithm has It always requires O(nlog2n) comparisons. There are sorts other than comparison sorts that can be done faster than O(nlogn).""","""In this class, we talked about heap sort and merge sort, but I was able to do both by actually practicing. Combined with the previous class, I was able to understand 4 sorts.""","""I didn't quite understand what the binary tree sorting diagram was referring to in the preparation stage, but after listening to the class, I understood.""","""is not.""","""This time, I was able to listen to what the teacher had to say in class and understand what I was learning.""",,,,-3
C-2021-2_U80,"""Beginning with an explanation of binary trees, there was an explanation of the definition and method of heapsort, and the amount of computation. Also, the meaning of the word merge, the mergesort algorithm, the number of comparisons, and the comparison of comparison sorts learned so far. There was also an explanation about the number of times, and there was also a little talk about linear search and binary search.""","""I understood the relationship between binary trees and heapsort, and with that I understood what heapsort is. I also understood how mergesort works.""","""The number of comparisons part of the comparison sorting algorithm was difficult.""","""Nothing in particular.""","""I've heard about sorting in previous lectures, but I've never heard of heap sort or merge sort, so it was interesting. Merge sort, which seems complicated at first glance, is very efficient. I was surprised how good it was.""",,,,-1
C-2021-2_U81,"""I learned famous sorting algorithms such as heapsort and mergesort.""","""I learned about heapsort and mergesort algorithms, how they work, and their applications.""","""Normally, the content was difficult and I couldn't fully absorb it.""",,"""Good to know that there are different sorting algorithms.""",,,,0
C-2021-2_U83,"""Number of comparisons between heapsort and mergesort""",,,,,,,,-2
C-2021-2_U85,"""I learned about heapsort, the idea of ​​mergesort, and binary search.""","""Simple sorting using a binary tree has the disadvantage that the calculation time varies depending on how the input sequence is arranged. Heapsort is a sorting algorithm that uses a binary heap tree, and compensates for the disadvantages of the binary tree. In the first stage, the binary tree is constructed so that it always becomes a heap, and in the second stage, the nodes are arranged one by one from the heap completed in the first stage. Similar to heapsort, it is an algorithm that aligns elements in O(n log n) comparisons, and is simpler because it does not use a binary tree. An operation that outputs a single sequence.Merge sort divides an input sequence into two sequences if the size of the sequence is greater than 1, sorts each, merges the two columns after sorting, and is repeated recursively.""",,,"""The heapsort and mergesort you learned this time were more difficult than the sort you learned last time.""",,,,-3
C-2021-2_U86,"""About heapsort and mergesort.""","""Heapsort compares at most 3nlog₂n times Mergesort compares at most nlog₂n times""",,,"""Since various sorts have come out so far, I would like to thoroughly review the features of each.""",,,,-2
C-2021-2_U88,"""I learned how heapsort and mergesort go through the process and compare the number of calculations.""","""I fully understand how heapsort and mergesort work. I have found that the number of computations for any sort can never be less than O(nlogn).""","""I don't think so.""",,"""This time it was easier to understand than last time.""",,,,-3
C-2021-2_U89,"""A naive sort using a binary tree has the worst number of comparisons n(n-1)/2. On the other hand, a heap sort has the worst number of comparisons 3n[log2n]. When n>=38, n(n-1)/2 > 3n[log2n], heapsort is faster.Furthermore, the worst number of comparisons for mergesort is n[log2n], which is less than heapsort.In addition, the algorithm for comparison sort is determined Since it can be represented as a tree, the order in which elements are compared is itself an algorithm.
""","""I found a mechanism for heap sort and merge sort that is more efficient than selection sort and bubble sort.""","""I didn't understand why the number of comparisons in the comparison sorting algorithm is more than O(nlogn).""",,"""Today's content was the most difficult so far, and there were many things I didn't fully understand. In the next class, I want to prepare well so that I can keep up with the class while fully understanding it. Also, how to do heap sort and merge sort. Even if you memorize it in words, it's difficult, so I'd like to try it a few times and memorize it.""",,,,-2
C-2021-2_U9,,,,"""Why is it ""proportional"" to n〖log〗_2 n when the number of comparisons required for a comparison sort increases?""","""I got a little confused when thinking about the number of comparisons for heapsort and mergesort. It was a little difficult, but I'll try to organize it and understand it by the next class.""",,,,0
C-2021-2_U93,"""I learned the characteristics of sorting using a binary tree, including its drawbacks. Relatedly, I learned the concept of a heap and how to create it. I learned the concept of merging and the number of comparisons, and merge as an application. I learned how to sort.""","""I learned how to create a heapsort and how to read it. I was able to understand how to do it by looking at an example of running mergesort.""","""I didn't understand why the number of comparisons in heapsort does not exceed 3nlog2n when the size of the input sequence is n. I didn't understand why the number of stages and the upper limit of the number of comparisons in mergesort are uniquely determined.""",,,,,,-1
C-2021-2_U95,"""It was a class about harpsort, mergesort, and dichotomy.""","""Sorting is less work this time than what we learned last time.""","""The calculation of the number of comparisons is slightly misunderstood""",,"""Firmly cover the parts that you can't understand in one class with post-class study, etc.""",,,,-3
C-2021-2_U97,"""・About heap sort ・About merge sort""",,"""About the order notation of the sorting algorithm""",,,,,,-3
C-2021-2_U99,"""Binary trees have the drawback that the computation time changes depending on how the input sequence is arranged, so it is better to introduce a heap. Heap sort and merge sort use the same number of comparisons, and merge sort uses a binary tree. No, it's easier.""","""In addition to bubble sort and selection sort, we discovered new sorts such as heap sort and merge sort.""",,,"""It was a bit difficult with a lot of algorithms.""",,,,-3
C-2022-1_U10,"""・Heap sort: There are exactly 2^d nodes with depth d, nodes with depth h exist in order from the left, and the value of any node is less than or equal to the value stored in its parent. A method of creating a binary tree that satisfies two conditions.The completed binary tree is read while deleting nodes one by one.The number of comparisons of elements is at most 3nlog[2]n times.(*0≦d≦h-1 , h is the height of the binary tree, and n is the number of nodes.)
・Merge sort: A method of dividing the input number sequence into smaller number sequences and merging them after aligning them.
Binary search method: Sort the data in ascending or descending order, and check whether the data to be searched (hereinafter referred to as the target) is larger or smaller than the central element. This makes it possible to know whether the target is in the front half or the back half of the whole, so the half on the side where the target does not exist is excluded from the search targets. If this operation is repeated, it can be seen that the data group to be retrieved is halved for each operation. The search terminates when either the median value matches the target or the number of elements in the search range is 1 (target not found).
This search method can also be applied by replacing the values ​​in the index order of the characters. """,,,,,,,,-3
C-2022-1_U12,"""There are various types of algorithms, and it is important to choose an efficient one.""","""Now I know the difference between bubble sort, selection sort, heap sort and merge sort.""",,,"""It was difficult to calculate.""",,,,-3
C-2022-1_U13,"""Comparison time is faster than comparison-based algorithms in heapsort and mergesort
To merge is to output a sequence from two input sequences that have already been compared. The mergesort algorithm works by splitting multiple times and merging multiple times.
Comparison-based algorithms always require nlogn comparisons.
Information search is the process of retrieving data that meets a purpose from a large amount of data, and binary search is overwhelmingly faster than linear search. (The sorting order of strings is the same as the dictionary order)""","""On why comparison-based algorithms always require nlogn comparisons
When there are n characters, the leaves of this decision tree are n! There is always one. Assuming that the height of the tree is h, the maximum number of leaves is obtained when all branches are formed, and the maximum value is 2 raised to the power of h.
Therefore, 2 raised to the power of h≧n! Then, when transformed using Stirling's formula, the number of comparisons required for sorting increases in proportion to nlog[2]n. ""","""Now that I understand the flow, I want to deepen my understanding of the proof by actually working with it.""",,"""Today's content felt a little difficult. However, I learned a lot by actually writing a binary tree, so I think I'll try again by myself if the proof is still ambiguous. Sorting I once again felt today that the important thing in comparison is to minimize the number of comparisons, shorten the time, and output reliably. However, it takes time and there are times when I overlook things, so I thought it was necessary to use an efficient method, even if it was a little complicated.""",,,,-3
C-2022-1_U14,"""While observing the conditions, we create a binary tree to form a heap, remove the root, add the last added leaf to the root, and repeat the work of checking the conditions so that it becomes a heap. Sorting the input number sequence is called heap sort.When the input number sequence is large, it is much faster than the normal sorting of binary trees.One input sequence is divided into small sequences and merged after sorting. The process of (integration) is called merge sort.
When searching for information like Google, the method of repeatedly comparing the middle element of the sorted data and narrowing it down is called a binary search. """,,,,,,,,-3
C-2022-1_U15,"""One of the algorithms for arranging elements is the merge sort algorithm, which divides the input number sequence into smaller number sequences and merges each number sequence after sorting, thereby sorting the original number sequence. Comparison-based algorithms always require O(nlogn) comparisons, while comparison sorting algorithms are represented by decision techniques, where the number of comparisons is at least the minimum height of a binary tree with n! leaves. is greater than or equal to the value, and the number of comparisons required for sorting increases in proportion to nlog2(n).""",,,,,,,,-3
C-2022-1_U17,,"""I was able to understand how a fast way to retrieve information works. Heapsort can be faster in some cases.""",,,"""After completing the B unit, I was able to learn about various ways of arranging numbers. It was easy to understand because I was able to think concretely with a small number of input integers.""",,,,-3
C-2022-1_U20,,"""Today I understood the time it takes for each and the meaning of the graph.""","""Do your own calculations quickly""",,"""Today I found out which thought speeds up my calculations.""",,,,-3
C-2022-1_U21,,"""We found that heap sorting has the advantage of saving wasted time compared to binary tree sorting. Binary tree sorting has the disadvantage that the calculation time varies depending on the arrangement of the input sequence, but heap sorting overcomes this disadvantage. Merge sort turns out to be simple and fast because it takes advantage of the fact that each array is already ""sorted"". """,,,"""I learned that there are various types of sorting, such as exchange type, divide-and-conquer type, and selection type. Each type has its own disadvantages, such as calculation method, speed of calculation time, and complexity. The content is getting a little difficult (it's hard to understand if you think about it in terms of the general expression n), so I'm going to put all my energy into it and do my best.I like mergesort.""",,,,-2
C-2022-1_U22,"""Merge sort... Divide the input A into small sequences and integrate the sorted sequences to get the result""","""The merge sort procedure was well understood""","""It's a little hard to understand when orders and the number of comparisons are involved.""",,"""Since last time, I don't understand the order well, so I want to do my best to understand it.""",,,,-3
C-2022-1_U25,"""Merge is an operation to output one sorted sequence from two already sorted input sequences. Let the size of the input sequence be n. is always n, so the sum of the number of comparisons of remarkable degree does not exceed n.The number of stages is at most ""log2n"". The number of comparisons is at most n[log₂n]
Any comparison-based sorting algorithm necessarily requires O(nlogn) comparisons. A comparison sorting algorithm can be represented by a decision tree. The order in which elements are compared = algorithm. The algorithm's worst-case number of comparisons is equal to the height of the decision tree. The number of comparisons in the comparison sorting algorithm is at least n! at least the minimum height of a binary tree with leaves
Information retrieval is the process of retrieving information that matches a purpose from a large amount of data.
Time complexity of binary search is O(logn)""","""I understand how to calculate the number of comparisons.""",,,"""I'm getting confused with all the different sorts out there, so I thought I'd organize them properly.""",,,,-3
C-2022-1_U26,"""Heapsort replaces the larger one upwards. The upper one is called the root. As the number of input integers increases, it becomes shorter compared to the binary tree. When the size of the input sequence is n, the comparison The number of times is 3n log2n, the height of the heap is log2n.
Merging is to rearrange two series that have already been arranged into one series. Splitting a sequence into elements and repeating merging from them produces a sorted sequence.
The number of comparisons in the comparative sorting algorithm is proportional to the height of the sort.
Linear countermeasures search for a certain character from the beginning. If the elements are sorted, binary search, which narrows the search range compared to the median, is faster.
""","""It turns out that there are many different ways to align a number sequence.
I learned that sorting is also used for information retrieval. ""","""Various sorts are coming out and it's messed up, so I want to organize it.
""",,,,,,-3
C-2022-1_U27,"""A heap is a binary tree in which the values ​​are arranged in order so that the binary tree forms an equilateral triangle, and the value of any node is less than or equal to the value above it, and it is used for sorting Algorithm for sorting is called heapsort.Merge is an operation to output one sorted number sequence from two sorted input number sequences, and an algorithm for sorting using it is called merge sort.Furthermore, Binary search is a search for whether x exists in S by comparing the input element x and the middle element y of the aligned element S.","""I learned how heapsort, mergesort, and binary search work and how fast they are.""","""There were so many formulas that I couldn't keep up with my understanding.""",,,,,,-3
C-2022-1_U28,,,,,"""It took me a long time to figure out heapsort.""",,,,-3
C-2022-1_U29,,,"""I vaguely understand that the number of comparisons for any sorting algorithm is O(n logn) or more, but I don't think I can explain it to my friends.""",,"""Since I've been through the sorting algorithm, I wanted to organize each method and relationship well in my head. For now, I want to be able to listen to the name and sort by that method. Also, compare I'm not good at content where the number of times doesn't exceed 〇〇, so I'll do my best to explain it in my own words.""",,,,-3
C-2022-1_U3,"""Merge is an operation that outputs one sorted number sequence by comparing two already sorted input number sequences from the beginning and storing the smaller one in a new array. In merge sort. It repeats the work of dividing the input sequence into two and merges them to sort them.Comparison sorting algorithms that narrow down the solution based on the comparison result of two elements, such as heap sort and merge sort, always require O(nlogn) comparisons. To speed up information retrieval, binary search is used, which finds matching elements by repeating comparisons with the middle element of the aligned array. It requires fewer comparisons than a linear search that finds out by comparing each element.""","""I was able to understand how the order notation of the number of comparisons in each sorting algorithm is obtained. In heapsort, when the height is h and the input size is n, the maximum number of nodes is 2^h= n and h does not exceed logn.When considering the comparison with the parent and the comparison with the left and right children, it is 3logn, and the total number of comparisons is 3nlogn because the input size is n.Merge sort also has a height At most logn, the number of comparisons in each stage does not exceed n, so the total number of comparisons is nlogn.If we consider the number of comparisons in the comparison sorting algorithm using a decision tree T, T has at least n! Since the number of leaves is at most 2^h from the height, 2^h>n! Therefore, h>logn!, n!>(n/e)^n, so h>nlogn-nloge is derived, It turns out that Onlogn's number of comparisons is necessary.""","""It was difficult to think about how many comparisons would be required by stepping through the height representing the computational steps of the comparison sorting algorithm and how many comparisons were required at each stage. Also, the input size was It was a bit difficult to adapt when it wasn't 2^k.""",,"""By looking at the number of comparisons for each sort, I was convinced that heap sort and merge sort are more efficient algorithms than bubble sort, selection sort, and binary tree sort. I was wondering if they are using heap sort or merge sort, or if they are using something like bubble sort because the input size is small.""",,,,-3
C-2022-1_U30,,,"""The number of comparisons for each sort is confusing, such as why the number of comparisons can be determined by the formula, so I would like to review and understand each one by reading the materials again.""",,,,,,-3
C-2022-1_U32,,"""I learned how heapsort, mergesort, and binary search work""",,,,,,,-3
C-2022-1_U33,"""・Explanation of heap sort and merge sort and specific method of calculation
・Summary of sorting algorithms
・About Binary Search""",,,"""Nothing in particular.""","""It was good to learn that there are various types of algorithms and that each has its own characteristics and meanings. I would like to continue practicing and be able to solve computational problems on my own.""",,,,-3
C-2022-1_U34,,,,,"""I'm not good at mathematics, so explanations using symbols are quite difficult to understand. I'd like to come across more examples so that I can digest them in my own mind.""",,,,-3
C-2022-1_U35,,"""I was able to understand various sorting methods and mechanisms. I also understood a little about the number of comparisons.""",,,"""I felt that it was getting more and more difficult. I feel like I've learned a little bit about algorithms and can imagine what kind of calculations the program is doing.""",,,,-3
C-2022-1_U37,"""There are many kinds of sorting algorithms.""",,,,,,,,-3
C-2022-1_U38,"""The act of comparing and rearranging two numerical sequences from the beginning is called merge sort. By dividing one numerical sequence in half and comparing the halves repeatedly, it is possible to sort them. If they are next to each other, there is a way to check whether an element is included in the set of sequences, and that is binary search, which shortens the time it takes to search by comparing in half the places. can be done.""","""mergesort
Information retrieval
linear search
binary search""","""Detailed mechanism of each""",,,,,,-3
C-2022-1_U4,,,,,"""I really appreciate how you repeatedly emphasized the important points. Heapsort is difficult and I would like to be able to do it.""",,,,-3
C-2022-1_U41,,"""How to do binary trees, about heaps and merging""",,,,,,,-3
C-2022-1_U42,"""・About Heapsort
・About merging
・About the merge sort algorithm
・Comparison sorting algorithm
・About information search""",,,,"""I was very surprised to learn that bi-minute search of text using suffixes was announced in 1991, as it is called 'digression' on the last slide. . It is very interesting that there seems to be a lot of information worlds that we do not know yet, such as information retrieval and calculation methods, and the communication method used in A. """,,,,-3
C-2022-1_U44,"""I learned the difference between heapsaw and mergesort, their characteristics, the advantages of binary search, etc.""","""Binary search is efficient""",,,,,,,-3
C-2022-1_U45,,,"""Nothing in particular""","""Nothing in particular""",,,,,-3
C-2022-1_U46,"""・Binary tree: a rooted tree in which each node has at most two children
・Binary tree sorting … Compare Ai (i = 2, 3, …, n) with the value of the current node,
　　　　　　　　Ai is smaller → left
　　　　　　　　Ai is larger → right
→ If the size of the input sequence is n, in the worst case the number of comparisons is n(n-1)/2
・Passing order: Read the node values ​​in the order of the left child, self, and right child

・Heap: A binary tree with n nodes and h height
　　　　　There are exactly 2^d nodes with depth d(0=<d=<h-1), and there are n-(2^h-1) contacts with depth h from the left. The total number of contacts up to depth h-1 is (2^h-1).
　　　　II Any node value is less than or equal to the value stored in its parent.
・Heap sort…① Construct a binary tree so that it is always a heap
　　　　　　　　While fulfilling II, add the left child and then the right child in order
　　　　　　　　② From the heap completed in ①, delete the nodes one by one while arranging the numbers
Take a number from the root, store the last number in the root, and replace it with the larger child until II is satisfied. (root = top, leaf = bottom)
→ When the size of the input sequence is n, the number of heapsort comparisons does not exceed 3nlog2n
　1 time for each comparison with the parent in ①
　Twice each time the left and right children are compared in ②
→Heap height of n nodes does not exceed log2n

・Merge sort … output one sequence sorted from two already sorted input sequences
　　　　　　　　Compare the two sequences from the beginning and store the smaller one in a new array
→In order to merge sequence A of size n1 and sequence B of size n2, at most n1+n2-1 comparisons are required.

・Merge sort: O(nlogn) time
・Heapsort: O(nlogn) time
・Binary tree sort: O(n^2) time
・Bubble sort: O(n^2) time
・Selection sort: O(n^2) time
""","""I was able to understand the order notation better than last time. Thank you for your explanation.""","""I didn't understand much about heapsort and mergesort times, so I thought I'd give it a try and understand.""","""Not yet""","""I got a perfect score on the quiz today, so I'll do my best while reviewing the assignments so that I can get all the answers right next time.""",,,,-3
C-2022-1_U47,,,,,"""The calculations are getting complicated, so I want to study hard and prepare for the test.
""",,,,-3
C-2022-1_U48,,,"""I wondered what a binary tree was.""",,,,,,-3
C-2022-1_U49,"""There are several ways of sorting, but you should choose and devise a way of sorting to reduce the amount of calculation as much as possible.""","""There are five sorting methods. Comparing the computational complexity of sorting algorithms, logn-related is overwhelmingly faster than n-squared-related, especially when n is large.
The number of leaves of a comparative tree of height h is at most 2 raised to the power of h. I didn't really understand Exercise 3 last time, but I understood it by looking at the supplement. ""","""Exercise 2 of 2""",,,,,,-3
C-2022-1_U50,"""・The merge sort algorithm is an algorithm that sorts elements with O(nlogn) comparisons, similar to heap sort, and is simple because it does not use a binary tree.
・Merge is an operation to output one sorted number sequence from two already sorted input number sequences.
・In order to merge a sequence A of size n1 and a sequence B of size n2, at most n1+n2-1 comparisons are required.
・When element comparison is performed once, one element is always output.
・The size of the final output sequence is n1 + n2, and the last remaining element has no comparison partner, so the number of comparisons is at most n1 + n2 − 1 times
・The maximum number of comparisons (n1+n2−1) occurs when the values ​​in sequence A and B appear alternately from the smaller one.
• A comparison sorting algorithm can be represented by a decision tree and is the order, or algorithm, in which elements are compared.
• The number of comparisons of the algorithm for the number of inputs A is equal to the number of edges from the root of the decision tree to the leaf (solution for A).
・The number of worst-case comparisons of the algorithm is equal to the height of the decision tree.
- The number of comparisons in the comparison sorting algorithm is less than or equal to the minimum height of a binary tree with at least n! leaves. """,,,,"""・The internet was not working well, and there were occasional team malfunctions.
・Since the chapter on calculation is over, I want to remember to review it.""",,,,-3
C-2022-1_U51,"""In addition to bubble sort and heap sort, there is also merge sort""","""Mergesort is the one that moves neighboring permutations from small ones to large ones""","""I didn't really understand comparison sorting""",,"""Sorry for being late""",,,,-3
C-2022-1_U52,"""The total number of comparisons between the first stage and the second stage when n input sequences arranged in descending order are sorted in ascending order using heapsort
→2n[log2(n)]+n-1
∵The first stage is n-1 comparisons (one comparison with each parent)
  The second stage is at most 2n[log2(n)] comparisons (after taking out the number of roots, the smaller value goes into the root. The height of the heap is at most [log2(n)], so a total of 2n[log2 (n)]

Merge sort: An operation that outputs one sorted sequence from two already sorted input sequences
・In order to merge sequence A of size n1 and sequence B of size n2, at most n1+n2-1 comparisons should be performed.
・In the merge sort, the sum of the lengths of the divided sequences is always n → the sum of the number of comparisons of the elements in each stage does not exceed n.
・The number of stages of merge sort is at most [log2(n)]
・Therefore, the number of comparisons in merge sort is at most n[log2(n)]

・Since the comparison sorting algorithm can be represented by a decision tree, the order of comparing elements is the algorithm.
・The number of comparisons of the algorithm for the input sequence A is equal to the number of edges from the root of the decision tree to the leaf (solution for A) → The number of comparisons in the worst case of the algorithm is equal to the height of the decision tree.
・The number of comparisons in the comparison sorting algorithm is greater than or equal to the minimum height of a binary tree with at least n! leaves.

Information retrieval is the process of retrieving information that matches a purpose from a large amount of data.
→One of the methods to perform information retrieval at high speed is to sort the data in advance and then perform a binary search.

if the elements in the set are not aligned
→ Find elements from the beginning: Linear search → In the worst case, you have to compare elements n times.
time complexity is O(n)
if the elements in the set are aligned
binary search → the number of binary search steps for a set of n elements does not exceed log(n)
The time complexity of binary search is O(log(n))
Overwhelmingly early!
→ Binary search for keywords can be done in the same way
If the number of elements in keyword set K is n, the number of binary search steps does not exceed log(n)
If the length of the pattern string p is k, each step performs at most k character comparisons.
→ Therefore, the time complexity is O(klog(n))

A binary search in a text string yields the same result.""","""We confirmed that binary search is much faster than linear search.""",,,"""It was fun to get to know the behind-the-scenes of Google and other search engines that I always use. I could really feel that the classes were connected to my daily life.""",,,,-3
C-2022-1_U53,,,,,"""I was impressed to learn about the behind-the-scenes methods of web searches that I usually use to get results faster.""",,,,-3
C-2022-1_U54,,"""I found that there are many kinds of sorting, and I can use the one that sorts the fastest of each.""","""It gets confusing when log calculations appear.""",,"""The content of the sort was difficult at first glance, but it was good to see that it was actually useful when understood.""",,,,-3
C-2022-1_U56,"""In addition to the previous content, sorting includes heap sorting, merge sorting, etc. The height of these heap trees and the number of comparisons can be obtained from the algorithm.
Information retrieval is to extract what matches the purpose from a large amount of data. Linear search is a method of searching for items that match the conditions from the beginning, but it takes time, and binary search, which compares elements in the middle, can greatly improve efficiency. """,,"""I didn't quite understand how to derive the number of comparisons and the number of stages for sorting using a calculation formula using log.""",,"""I felt that the content of the work and the calculation formulas were getting more and more difficult. I want to be able to deepen my understanding by doing proper preparation and review.""",,,,-3
C-2022-1_U58,,,,,"""I don't really understand the binary search for the next text, so I'd like to do some homework.""",,,,-3
C-2022-1_U6,"""Among the sorting algorithms, heap sort is faster than other sorts at O(nlogn) time when comparing the computational complexity in order notation because the value of any node in the binary tree is less than or equal to the value stored in its parent. Also, 2 There is also a method of dividing into two alignments without using a progression tree, then merging (integrating) and aligning them, which is called a merge sort algorithm.This comparison sort algorithm narrows down candidates by comparing two elements. It uses a decision tree approach and always requires O(nlogn) comparisons.
Information retrieval is the process of retrieving information that matches a purpose from a large amount of data such as web searches. Random linear search takes too much time, but binary search is a method that searches for aligned elements from the middle, the search range is halved, and the time complexity is O(logn). get faster. """,,,,,,,,-3
C-2022-1_U61,"""Contents that are becoming more and more obscure""","""Binary tree naive sorting and heap sorting can make a huge difference in speed""",,,,,,,-3
C-2022-1_U63,,"""Linear search is very labor intensive and takes a long time, but binary search allows you to find information faster because it divides more and more.""",,,,,,,-3
C-2022-1_U65,"""I learned how to make a heap sort. In the first stage, a binary tree is constructed to form a heap with the input numbers. When the heap is complete, delete nodes one by one and sort the numbers until all When the action is over, the sorting is completed.It is difficult to explain in words, but it is easy to understand by drawing a diagram.In addition, the number of comparisons in heap sort is the number of comparisons when the size of the input sequence is n. does not exceed 3nlog2(n).For this reason, compared to a simple binary tree, heapsort has fewer comparisons (specifically, from when it exceeds 38), and the computation time is overwhelmingly short and efficient. The computation time of heapsort is O(nlogn), but the same type of algorithm is mergesort, which is simpler because it does not use a binary tree. A simple procedure is to perform sorting and then merging, which is the process of outputting one aligned sequence from two already-aligned input sequences, and sorting (dividing) first. and then merge them in order to complete the alignment.
Here, the number of comparisons of the comparison sorting algorithm always requires O(nlogn) comparisons. Therefore, heapsort and mergesort are algorithms that minimize the number of comparisons.

Information retrieval is the process of retrieving information from a large amount of data. There are linear search and binary search methods for this information retrieval, but binary search is preferable for higher speed. Binary search is a method that sorts the data in advance and then compares the objects. You can see the importance of sorting here. The number of binary search steps for n elements does not exceed log2(n). Keywords can be sorted lexicographically in the same way as numbers in binary search. In both cases, it is possible to search overwhelmingly faster than linear search. ""","""I was able to understand the concrete method of heapsort and the mechanism of mergesort.
It was also interesting to discover that sorting plays an important role in information retrieval, and that sorting can be used in this way. """,,,"""Sorting came out in information retrieval, and I felt that I had a deeper understanding by knowing a concrete example that what I had done so far was useful for this kind of thing.
Heap sort and merge sort are easy to understand when you actually write them on paper and practice them. """,,,,-3
C-2022-1_U67,"""Sort using binary trees, heapsort, mergesort, and binary search.""","""I figured out how to sort each one, and found that the complexity is n*logn, no matter how small.""","""I couldn't figure out how many times it would be at most. I just memorized it instead of thinking about it.""","""Nothing in particular.""","""I think it's important to actually try and understand what's covered in this article, because it's only by listening that I can understand what's going on. , I thought that Google Sensei was great after all, knowing that it was sorted quickly with as few steps as possible.""",,,,-3
C-2022-1_U68,"""Merge is the operation of outputting one aligned sequence from two already aligned input sequences, dividing the input sequence into smaller sequences and merging the aligned smaller sequences to input An algorithm that obtains the result of sorting a number sequence is called a merge sort algorithm.""","""If the number of nodes is n, the number of comparisons in heapsort does not exceed 3nlog2(n), and the height of the heap does not exceed log2(n). Like heapsort, it takes O{nlog(n)} comparisons to Algorithm to align .""",,,,,,,-3
C-2022-1_U69,"""Sorting using a binary tree changes the calculation time depending on how the input sequence is arranged, so it is better to use heapsort, which constructs a binary tree so that it is always a heap. output one sequence sorted from two input sequences) is O(nlogn), but it is impossible to sort faster than this.
When searching the Internet, it is faster to find a keyword using binary search. """,,,,"""I understood that binary search is faster than linear search, but I couldn't imagine being able to instantly obtain necessary information from countless sites with only keywords, and I thought it was strange. """,,,,-3
C-2022-1_U7,"""Heapsort satisfies the condition that the value of any junction is less than or equal to the value stored in the parent. Merge sort is a method of outputting a new number sequence from already sorted number sequences. take things out.""","""It was easy to understand how heapsort sorted.""","""I still don't quite understand the number of comparisons in the comparison sorting algorithm.""",,"""There are various ways to arrange numbers, and heap sorting is easy to understand and the exercise was fun.""",,,,-3
C-2022-1_U70,,,,,"""This class had a lot of mathematical formulas, so it felt like a math class. I did a lot of preparation and review before the class, so I was happy that I was able to understand the content without too much trouble. It seemed that I would not be able to master it unless I took it and actually moved my hands, so I wanted to do my best with the exercises.""",,,,-3
C-2022-1_U71,,,"""is greater than or equal to the minimum height of a binary tree with n! leaves (?)""",,"""Tests are starting for other subjects, so I'll do what I can while I can.""",,,,-3
C-2022-1_U73,,"""Until now, I didn't know why I was learning sorting, but when I learned that sorting was used for information retrieval, it made sense all at once.
The time complexity of binary search is at most klogn, which is faster than kn of linear search. Information retrieval is the process of retrieving a desired object from a large amount of data.
A heap is one whose node value is less than or equal to the value stored in its parent. ""","""Why does merge sort divide a sequence using the smallest integer greater than or equal to z for any real number z? I don't understand Stirling's formula.""",,"""Until now, I couldn't imagine what it would be used for, but now I finally understand how sorting is used.
I understand the general content, so I want to acquire it firmly by solving the exercises and organizing it with LGC.
""",,,,-3
C-2022-1_U74,,"""Binary trees look complicated at first glance, but once you understand them, they can be done quickly. When I looked at them in order, I found them very different and interesting.""","""It seems okay, just get used to it?""","""Nothing in particular""",,,,,-3
C-2022-1_U75,"""A binary tree that satisfies certain conditions is called a heap. There is a limit to the height of a heap. A Merseysort algorithm is a simple algorithm that does not use a binary tree. Information retrieval is the process of finding a purpose from a large amount of data. Take out what matches.""","""This was the last episode of B, so there were a lot of words, but I was able to review and organize them.""","""It was confusing because there were many similar words.""",,"""There were a lot of terms in B, but it ended unexpectedly quickly, so I want to review it thoroughly.""",,,,-3
C-2022-1_U76,,,"""In merge sort, it seemed inefficient because it compares after splitting once.
""",,"""I've looked into binary search before, but I'm not sure how to calculate the number of comparisons.""",,,,-3
C-2022-1_U77,,,,,"""Many of the contents were abstract, and I felt that I did not fully understand them. I carefully reviewed the meaning of words and the meaning of formulas one by one, and tried to review them so that I could explain them in my own words. .""",,,,-3
C-2022-1_U78,"""Merge sort decomposes, sorts, and merges (integrates) the input sequence. It is simple because the number of comparisons is O(nlogn) and it does not use a binary tree.
Binary search is overwhelmingly fast in O(logn) and is used in web search. ""","""I was able to sort according to the procedure of merge sort.""","""What is a decision tree T with at least n! leaves?""",,"""I thought that more convenient algorithms would be developed one after another.""",,,,-3
C-2022-1_U79,,,"""Since the tree structure of the heap is not well understood, I know that the depth will be shallow, but I am still not sure about the time complexity.""",,,,,,-3
C-2022-1_U81,"""About various sorts""","""Mechanisms for mergesort and binary trees""",,,"""It's hard to memorize all the things that come up, so I want to organize them in my own way and prepare for the test.""",,,,-3
C-2022-1_U82,,"""I found that nlogn is involved in various sorts, and that it can be calculated very quickly compared to the order of n or n-square. I realized that the binary search method is used in Google searches that we use every day, and that it is a method that can significantly reduce the search time compared to the linear search method. I understand.""","""Since nlogn appears in various places, I will quickly relearn the parts that I do not fully understand yet, and I will do my best to deepen my understanding of the computational complexity of sorting. Also, in Unit B, I will discuss several types of nlogn. Now that sorting has been introduced, I would like to be able to actually sort things and explain sorting in my own words by solving the exercises on my own.""",,"""I have almost finished the lecture of unit B, but I have learned various sorting and search methods so far, so there are many parts that I haven't been able to organize in my head. Use LGC and BR-MAP to organize your knowledge. There are some sorts with improved computation time, and many sorts that are not, but it is precisely because some sorts have the disadvantage of being computationally expensive that there is a better way to improve them. I thought it was invented, and it makes me really happy to think that it is thanks to researchers in the past who created such a wonderful method that our lives are so convenient. """,,,,-3
C-2022-1_U83,"""Thought about various ways of sorting""",,,,,,,,-3
C-2022-1_U84,"""Today was also an introduction to how to sort numbers.
It was reasonable and easy to understand. """,,,,,,,,-3
C-2022-1_U85,,"""Binary search is fast, computational complexity is small, number of stages of merge sort is at most (log2N)
""","""Method of calculation""",,"""The calculations are getting more and more difficult, so I want to review them thoroughly and organize my mind.""",,,,-3
C-2022-1_U86,"""Two Sorts and Binary Search""","""It turns out that there are many different types of sorting.""",,,,,,,-3
C-2022-1_U87,"""In today's class, we learned about sorting using binary trees, heap sorting, and so on. We learned that sorting makes it possible to minimize algorithms.""","""What I learned in today's content was learning methods for minimization, such as sorting using a binary tree, and learning that the algorithm can be minimized by placing small numbers on the left and large numbers on the right. """,,,,,,,-3
C-2022-1_U89,"""This time, we learned about sorting using binary trees, heap sorting, merge sorting, etc. By the way, heap sorting is a type of sorting using binary trees, and it is more efficient. Binary trees. is a rooted tree where each junction has at most two children, the value of the child to the left of the junction is less than the value of the junction, and the value of the junction is less than the value to the right of the junction. The disadvantage of is that the computation time varies depending on the arrangement of the input sequence, that is, it depends on the depth of the completed binary tree.Depending on the contents of the sequence, the number of comparisons may be enormous. A heap is a binary tree with n points of contact and height h. There are dth power of , and there are n-(2^h-1) nodes with depth h from the left, and the value of any node is less than or equal to the value stored in its parent. The computational complexity of heapsort becomes shorter as the sequence length increases.On the other hand, merge There is something called sorting.Since it does not use a binary tree, it has a simple design.By dividing the input sequence into more sequences and merging them after they have been sorted, the first input sequence is It obtains an ordered result.It is created by recursively dividing and merging.Binary search method is to divide the sequence into two parts and search for the one that meets the search condition from among them. It is used for keyword searches, etc.""","""I was able to learn about the types of sorting. I think I was able to understand both heap sorting and merge sorting if I represented them graphically. Also, the amount of computation varies greatly depending on the type of sorting. By doing so, I was able to learn that the advantages and disadvantages of each sort can be used for different purposes.""",,,,,,,-3
C-2022-1_U9,"""Merge sort that divides the number sequence until it becomes one number and integrates (merges) in ascending order
Binary search, which finds out where a certain number is in the sequence","""When doing a binary search, sort the elements of the sequence in either ascending or descending order.""",,,"""When I try to draw a marker on a textbook, the line extends to an unintended part, or the marker disappears even though I drew it.""",,,,-3
C-2022-1_U90,"""When a binary tree with n nodes and h height satisfies two conditions, the tree is called a heap. When the input sequence size is n, the number of heapsort comparisons does not exceed 3log base 2n.""",,,,,,,,-3
C-2022-1_U91,"""If numbers and strings are arranged regularly, it will be easier to find them.""","""If the above conditions are met, at worst the number of checks will be halved""","""About suffixes""","""About suffixes""","""Binary search is important for fast processing of information""",,,,-3
C-2022-1_U92,"""Binary tree naive sort and Hipsort, when n=38, Hipsort outperforms binary tree naive sort in the worst number of comparisons""","""Understood about Hipsort and MagiSote""",,,"""I was happy because I got a perfect score in the quiz""",,,,-3
C-2022-1_U93,,,"""Last slide of Mergesort""",,"""I thought the merge sort method was the easiest to understand.""",,,,-3
C-2022-1_U94,"""Merge the operation of inputting one ordered number sequence from the already input number sequence. The comparison sorting algorithm can be represented by a decision tree.""","""The number of comparisons in a comparison sort is at least the minimum height of a binary tree with N! leaves""",,,"""Today was the hardest time for me to understand.""",,,,-3
C-2022-1_U96,"""Heapsort is a method of reading numbers in passing order using a binary tree and arranging the numbers. The drawback is that the calculation time changes depending on how the input sequence is arranged. When the binary tree satisfies two conditions, it is It is called a heap.It is a condition of the first stage and the second stage.A method of dividing a long number sequence into two, aligning them, comparing them from the beginning and outputting a character string is called merge sort.After aligning, it is called merge sort. , a method of efficiently examining elements using inequality tests is called a binary search method.""","""Practice 1
     Ten
        5 20
    3 7
 1 6 8
                   9 In order of passing, 1,3,5,6.7.8,9,10,20

Exercises
1. Division 8,2,10,1 9,7,5,6,4
              1,2,8,10 4,5,6,7,9
       Merge 1, 2, 4, 5, 6, 7, 8, 9, 10 7 times

Exercise 1 · 3 times yes
　　　　　　　　　・3 times no

　　　　　　　　　

""","""Exercise 2

""","""Is it correct that the beginning of the binary search should be compared from the middle of the sequence?""","""I'm glad I finally understood heapsort. I want to know more about computation and search time.""",,,,-3
D-2020_U1,,,,,"""I would like to review the contents of the class and acquire the meaning of the properties of the Z-transform and the procedure for the inverse Z-transform.""",,,,0
D-2020_U13,,"""I found out how to calculate the inverse Z transform""",,,"""I want to review the properties of the Z-transform""",,,,1
D-2020_U14,"""About Z Transform and Inverse Z Transform""","""How to do inverse z-transform""",,,,,,,0
D-2020_U15,"""Properties of Z Transform and How to Inverse Z Transform""","""Properties of Z Transform and How to Inverse Z Transform""",,,,,,,1
D-2020_U18,"""Z-transform has various properties such as linearity and transitivity theorem.
Like the Fourier transform and inverse Fourier transform, obtaining the original discrete-time signal from the Z transform is called the inverse Z transform.
Specific methods include the power series expansion method and the partial fraction expansion method. ""","""I was able to understand the mechanism of the partial fraction decomposition method by referring to examples.""","""The defining formula for the inverse Z-transform was presented, but I didn't quite understand the meaning of the middle formula.
In particular, I could not understand the explanation about how to take route c. """,,,,,,1
D-2020_U19,,"""I learned about the properties of the Z-transform and the inverse Z-transform.""","""I can't use the Z transform well unless I'm still looking at the slide.""",,,,,,0
D-2020_U2,"""X(z) can be restored to the original discrete signal x(n) by inverse Z-transform. There are two methods: power series expansion and partial fraction expansion.""",,,,,,,,1
D-2020_U21,"""Continued from last time""",,,,,,,,1
D-2020_U22,,,,,"""I felt that I still didn't have a good grasp of how to use knowledge maps well.
""",,,,1
D-2020_U25,,,,,"""Even with the same inverse z-transform, with the power series expansion method, I had to find the relationship between each term on my own, which was very difficult.""",,,,1
D-2020_U27,,"""I understood that there are two ways to solve the inverse z-transform.""",,,,,,,-1
D-2020_U28,"""inverse z-transform""",,,"""Nothing in particular.""","""I would like to review the material again for the next comprehensive review.""",,,,0
D-2020_U29,"""On the properties of Z-transform and inverse Z-transform""","""I learned to do the inverse Z-transform. I understood the properties of the Z-transform.""",,"""Is the inverse Z transform of z/(z-1) either u(n) or 1?
Or is it just special this time?""","""Inverse Z-transform is more difficult to transform than transforming.""",,,,1
D-2020_U31,"""The z-transform has properties such as linearity, transitivity theorem, product of exponential sequences, and convolution.
An inverse z-transform yields the original discrete-time signal.
A power series expansion method or a partial fraction decomposition method is used for the inverse z-transform. ""","""Properties of the z-transform, how to do the inverse z-transform.""",,,"""Today wasn't particularly difficult.
I want to be able to calculate the inverse z-transform well. """,,,,1
D-2020_U33,"""inverse z-transform""",,"""Nyquist frequency""",,,,,,0
D-2020_U34,"""Inverse Z Transform and Checking the Regions where it Can Be Done""","""I thought what I was doing was the same as the Laplace transform.""","""I wondered if it would be possible to get the original signal directly from the defining formula, like the inverse Laplace transform.""",,,,,,-2
D-2020_U35,"""Properties of Z Transform and How to Obtain Inverse Z Transform""","""How to find the inverse Z transform""",,,"""I was impressed that the inverse Z-transform was obtained without using complicated integrals.""",,,,-1
D-2020_U36,,"""The properties of the Z-transform and the technique of the inverse Z-transform.""",,,,,,,1
D-2020_U40,"""Definition of inverse Z-transform and how to obtain it concretely""","""What kind of calculation should I do when doing the inverse Z transform?""",,,,,,,1
D-2020_U41,,"""Inverse z-transform uses partial fraction expansion when calculated by hand""",,,,,,,0
D-2020_U42,,"""The inverse Z-transform can be easily performed using the partial fraction decomposition""","""There wasn't that much content this time, so I feel like if there weren't any miscalculations I'd be fine.""",,,,,,-1
D-2020_U43,"""How to use BRMAP""",,"""Nothing in particular""",,"""Nothing in particular""",,,,1
D-2020_U44,,"""It is difficult to obtain the inverse Z-transform directly from the Z-transform formula.
Simplify using partial fraction expansion and power series expansion.""",,,,,,,1
D-2020_U45,,"""By definition it is difficult to compute the inverse Z-transform using line integrals
Because it is difficult, we use partial fraction decomposition to calculate.""",,,,,,,0
D-2020_U46,"""To convert the z-transformed signal back to the original sequence of discrete-time signals, perform an inverse z-transform.
The inverse z-transformation can be performed by complex integration, but since it is difficult to calculate the complex integral, the inverse z-transformation is performed using the power series expansion method or the partial fraction expansion method. """,,,,,,,,0
D-2020_U47,"""Basic properties of Z-transform and inverse Z-transform to convert Z-transformed signal to original signal
""","""It was easy to understand because the basic properties, the method of inverse Z-transform, etc. were very similar to what I had learned before.""","""I don't think the power series expansion method, which is one of the inverse Z-transform methods, is necessary, but I will check how to do it.""",,,,,,0
D-2020_U48,,"""I was able to understand the properties of the Z transform, including the proof.
In addition, we were able to actually perform the inverse Z-transform using the procedure of the partial fraction expansion method.""",,,"""It was easy to understand as usual""",,,,1
D-2020_U49,"""The Z-transform also has properties similar to the Fourier transform, and the inverse Z-transform can use power series expansion and partial fraction expansion. I thought this was similar to how to find the inverse Laplace transform.""","""I understand two methods of inverse Z transform.""",,,"""It was easy to understand because there was a part similar to the inverse Laplace transform.""",,,,1
D-2020_U52,"""Continuing from last time, I learned about the Z-transform. Specifically, I learned about the properties of the Z-transform and the inverse Z-transform.""","""The properties of Z-transform include linearity and transitivity theorem. There are various methods for inverse Z-transform.""",,,"""I wanted to get used to the calculation of the inverse Z-transform by actually solving the exercises.""",,,,1
D-2020_U53,"""Properties of z-transform and inverse z-transform""",,,,,,,,-3
D-2020_U54,,,,,"""I was able to compute the inverse z-transform using partial fraction decomposition. I will continue to do my best.""",,,,0
D-2020_U55,"""About inverse z-transform""","""The definition of the inverse z-transform is the counterclockwise integration of the cycle c surrounding the origin in the convergence region, but it is difficult to calculate, so we use the partial fraction expansion method.""",,,,,,,1
D-2020_U57,"""The inverse Z-transform can restore x(n) from X(z)""",,,,"""I think I'll try calculating the power series expansion method.""",,,,-1
D-2020_U6,,"""The properties of the Z-transform include linearity, the transitive theorem, the product of exponential sequences, and the convolution theorem.
I also found two different procedures for inverse Z-transformation, the power series expansion method and the partial fraction expansion method.""",,,,,,,1
D-2020_U62,,"""Properties of Z-transform and inverse Z-transform. By using inverse Z-transform, it is possible to restore the sequence of the original discrete-time signal. Also, the specific method. Since integration in the complex plane is difficult, inverse Z-transformation is often performed using power series decomposition and partial fraction expansion, taking advantage of the fact that X(z) is a finite function of the variable z.""",,,"""In this class, we learned that unlike the previous Z-transform, the original signal can be restored by using the inverse Z-transform. However, integration over complex numbers is difficult. I would like to deepen my understanding of the inverse Z-transformation, noting that it must be transformed using series expansion and partial fraction decomposition.""",,,,0
D-2020_U63,,"""Method for Inverse z-Transform Using Partial Fraction Decomposition""",,,,,,,0
D-2020_U64,,"""I found that the inverse Z-transform can be done by doing partial fraction decomposition.
""",,,"""I'm starting to understand more and more about digital signal processing systems.""",,,,0
D-2020_U66,"""inverse z-transform""","""Find the inverse z-transform using partial fraction decomposition.""",,,,,,,1
D-2020_U7,,"""I was able to organize only the main points of the contents so far""",,,,,,,1
D-2020_U9,,,,,"""I want to deepen my understanding by doing examples.""",,,,-1
D-2021_U100,"""The z-transform has properties such as linearity, transitivity theorem, exponential function, and convolution theorem.
A discrete-time signal can be z-transformed, but the opposite phase difference is called an inverse z-transform. Since it is difficult to perform the inverse z-transform according to the definition, the power series expansion method and the partial fraction expansion method are used. ""","""I figured out how to do the inverse z-transform.""",,,"""It was good because I was able to understand it during class.""",,,,1
D-2021_U101,"""z-transform and inverse z-transform""","""I was able to understand the method of inverse z-transform and the properties of z-transform.""",,,,,,,1
D-2021_U102,,"""I learned about the properties of the z-transform and the inverse z-transform""",,,"""I want to solve more inverse z-transform problems and get used to it.""",,,,1
D-2021_U103,"""I learned about system stability conditions and their derivation.""","""By using the difference equation, we were able to know the stability from the transfer function of the system.""",,,"""In the connection of a linear time-invariant system, cascade connection is convolution, but I don't have a good image of convolution (I'm simply not good at it).
I wanted to understand it again.
This time, I overslept and was absent. I learned by taking notes beforehand and listening to the audio, but I feel like I was able to understand more than usual.
I felt that I was doing my usual homework properly, and I reflected on it.
""",,,,1
D-2021_U104,,,,,"""I forgot the retrospective journal for last week, so I'll add it later.""",,,,1
D-2021_U13,"""The inverse Z-transform is conditional on the condition that z is within the convergence region, and can generally be transformed by performing partial fraction decomposition.
""","""Partial fraction decomposition for inverse Z-transform""",,,,,,,1
D-2021_U14,"""Since it is difficult to make the inverse Z-transform as defined, we use the power series expansion method and the partial fraction expansion method.
""",,,,,,,,1
D-2021_U15,"""Understanding the properties of the z-transform""","""I was able to understand the properties of the z-transform and the calculation of the inverse z-transform""",,,,,,,1
D-2021_U16,,"""Inverse Z Transform, Properties of Z Transform""","""nothing especially""",,,,,,1
D-2021_U17,"""Properties of Z Transform and Inverse Z Transform""","""I found out that there is a power series expansion method in the inverse Z-transform method.""",,,,,,,1
D-2021_U19,,"""z-transform""",,,,,,,1
D-2021_U20,"""Properties of Z Transform and Inverse Z Transform""",,,,"""I'm getting a little used to using Z-transform pairs.""",,,,1
D-2021_U21,,"""The z-transform has some properties.""",,,,,,,1
D-2021_U22,"""I learned about the properties of the Z-transform, the inverse Z-transform.""",,,,"""I was able to prove the transitive theorem of the Z transform myself. I would like to confirm the inverse Z transform when the power series expansion method can be used.""",,,,1
D-2021_U23,,"""Finding the inverse Z transform
""",,,,,,,1
D-2021_U28,"""Properties of Z Transform, Inverse Z Transform""","""Linearity, transitivity theorem, partial fraction expansion method""",,,,,,,1
D-2021_U30,,,,,"""Until now, partial fraction decomposition took a long time, but I learned a simple method, so I think it can be applied to other fields.""",,,,1
D-2021_U31,,"""Now I can solve the inverse Z transform problem""",,,"""The understanding of Z-transform and inverse Z-transform has advanced""",,,,1
D-2021_U32,,,,,"""The method of partial fraction expansion is different from the previous method, so I would like to review it.""",,,,1
D-2021_U41,,"""Properties of Z Transform and Inverse Z Transform (Power Series Expansion Method, Partial Fraction Expansion Method)""",,,,,,,1
D-2021_U43,"""On Linear-Time System Difference Equations for Discrete-Time Systems
""","""I was able to understand the terms related to linear-time system difference equations for discrete-time systems.
""",,,,,,,1
D-2021_U46,"""Properties and calculation methods of Z-transform and inverse Z-transform""","""The inverse Z-transform is generally given by the integral over the complex number plane. However, it is difficult to compute the complex integral.
In practice, the power series expansion method and the partial fraction expansion method are used in the analysis of discrete-time systems. """,,,,,,,1
D-2021_U48,,"""By inverse Z-transform and partial fraction expansion, I was able to express a signal in a simple formula using exponential functions""",,,,,,,1
D-2021_U49,,"""I was able to do the inverse Z transform using the power series and partial fraction decomposition.""",,,,,,,1
D-2021_U61,"""The properties of z-transform include linearity, transition theorem, product of exponential sequences, and convolution theorem.
Done using partial fraction decomposition or power series expansion, thereby transforming from the complex dimensional z-domain to the real dimensional time domain. """,,,"""Nothing in particular.""","""It became interesting to see how it would be applied to digital signal processing.""",,,,1
D-2021_U62,"""I learned the properties of the z-transform, the product of exponential sequences, the transitive theorem, the convolution integral, and the inverse z-transform.""","""I could understand the solution method by partial fraction expansion of inverse z-transform.""",,,,,,,1
D-2021_U63,,,"""Not particularly.""",,,,,,1
D-2021_U64,"""Inverse Z transform""",,,,,,,,1
D-2021_U67,"""I learned about the inverse z-transform""",,,,,,,,1
D-2021_U69,,"""I learned about the properties of the Z transform, the definition of the inverse Z transform, and how to solve the inverse Z transform. In particular, I learned that there are two ways to solve the inverse Z transform, the power series expansion method and the partial fraction expansion method. I got it.""","""It was a little difficult to understand how to solve the inverse Z transform using the power series expansion method because I didn't actually solve the problem.""",,,,,,1
D-2021_U70,"""On the properties of the Z-transform and how to obtain the inverse Z-transform.""",,,,"""Inverse Z transform was difficult because the amount of calculation was large depending on the problem.""",,,,1
D-2021_U72,,,"""I didn't know exactly what a power series expansion looked like.""",,"""I was able to fully understand the content today because there was little content.""",,,,1
D-2021_U74,"""The inverse Z-transform is to obtain the sequence of the original discrete-time signal from X(z).
Since it is difficult to obtain by integration on the complex number plane, it is better to use the power series expansion method or the partial fraction expansion method. ""","""I was able to understand the inverse Z transform through examples.""",,,"""I'm glad I understood how to solve the inverse Z transform problem.""",,,,1
D-2021_U75,"""Introduction of inverse z-transform.""","""How to find the inverse z-transform.""",,,"""I think I was able to concentrate and take classes.""",,,,1
D-2021_U76,,"""I was able to come up with the proof myself.""",,,,,,,1
D-2021_U78,"""The operation of obtaining the original discrete-time signal sequence from the z-transform X(z) of a complex number z is called the inverse z-transform. Calculations are performed using solutions such as power series expansion and partial fraction decomposition, and z-transform tables. """,,,,,,,,1
D-2021_U79,,,,"""Explanation of Power Series Expansion Using Concrete Examples""","""Made it easier to understand by associating it with a transformation pair.""",,,,1
D-2021_U81,"""Inverse Z transform.""","""How to compute the inverse Z transform.""","""Scenes using the power series expansion method.""",,,,,,1
D-2021_U83,,"""There are several ways to find the inverse Z transform, and how to do it.""",,,,,,,1
D-2021_U84,"""I learned how to do the inverse Z transform.""",,"""I didn't really know where to use the inverse Z transform.""",,"""I was able to solve the problem, and I felt like I understood it this time.""",,,,1
D-2021_U85,"""The z-transform can be reconstructed, and x(n) can be derived from X(z).""","""The properties of the z-transform were similar to those of the Fourier transform.""",,,,,,,1
D-2021_U86,,"""Inverse z-transform by partial fraction expansion method""","""I'm a little unsure about the power series expansion method""",,"""I thought I'd practice well and take measures.""",,,,1
D-2021_U88,,,"""It was difficult to introduce the inverse Z transform""",,,,,,1
D-2021_U89,,"""Discrete-time systems can be described by difference equations
""",,,"""It was good because the example of discrete convolution sum gave me a concrete image of the operation.""",,,,1
D-2021_U90,,"""I could understand that the partial fraction expansion method is effective for the inverse Z-transform.""",,,"""I was surprised that partial fraction expansion was different from what I used to do in high school.""",,,,1
D-2021_U91,"""Inverse Z transform""","""There are two patterns of inverse z-transform""",,,,,,,1
D-2021_U93,"""I learned about the properties of the Z-transform, the inverse Z-transform.
At that time, I learned that the power series expansion method and the partial fraction expansion method are used. """,,,,,,,,1
D-2021_U94,,"""I was able to understand the properties of the Z-transform and representative methods of the inverse Z-transform.""","""We know what the properties of convolution are, but we still don't know what convolution is in the time domain.""",,,,,,1
D-2021_U97,,"""Z-transform the difference equation, and after partial fraction decomposition, check if it returns to the original.""",,,"""I want to organize my knowledge using a knowledge map.""",,,,1
D-2021_U98,,"""Created a summary article""",,,,,,,-1
D-2021_U99,"""Today we learned the inverse of the z transform.
I also learned how to use knowledge maps. ""","""I found the formula for the sum of geometric progressions very useful.""",,,"""z-transforms are fun.""",,,,1
D-2022_U14,"""Methods and properties of inverse Z-transformation and inverse Z-transformation, which are transformations from the Z domain to the time domain""",,,,,,,,1
D-2022_U21,"""I learned how to do the inverse Z transform.""",,,"""Do I have to memorize the contents of the Z conversion table?""","""I mainly use the partial fraction expansion method to solve the problem, so I would like to study it thoroughly and become able to solve it.""",,,,1
D-2022_U24,"""Properties of the Z-transform and its inverse Z-transform.""","""I was able to do the inverse Z transform using the power series expansion.""",,,,,,,1
D-2022_U25,"""I learned various properties of the Z-transform. Linearity, transitivity theorem, scaling, exponential sequence, differentiation, convolution theorem, etc. Also, the inverse Z-transform can be obtained by the power series expansion method and the partial fraction expansion method. """,,,,"""Today's content was mathematically learned about Z-transformation and inverse Z-transformation. I'm glad I was able to understand it to some extent.""",,,,1
D-2022_U26,"""Properties of Z-transform, definition of inverse Z-transform and its calculation method""","""I understand the properties of the Z-transform, the definition formula of the inverse Z-transform, and the specific calculation method of the partial fraction expansion method.""",,"""I would like you to demonstrate a specific problem with the power series expansion method and how to solve it.""",,,,,1
D-2022_U28,,"""Properties of Z Transform, How to Obtain Inverse Z Transform""",,,"""Because of the nature of the Z-transform, I don't think you need to be particularly concerned about linearity, etc., because it holds true for other transformations and ordinary calculations, but the transitive theorem and scaling are unique, so I want to keep them in mind.""",,,,1
D-2022_U29,"""Properties of Z Transform, Practical Method of Inverse Z Transform""","""I was able to understand how to handle the Z transform specifically.""",,,"""Because I prepared well for the class, I was able to understand it smoothly.""",,,,1
D-2022_U31,"""The properties of z-transform include linearity, transition theorem, scaling, differentiation, product of exponential sequences, and convolution theorem. To obtain inverse z-transform, there are power series expansion method and partial fraction decomposition method.""",,"""I didn't understand why the complex integral became that formula.""",,"""The main points are the properties of the z-transform and how to obtain the inverse z-transform, so if you keep those two points in mind, I think there will be no problems with today's class.""",,,,0
D-2022_U32,"""The nature of the z-transform and the method of the inverse z-transform.""","""As a general method for inverse z-transformation, I understood the method of partial fraction decomposition and then obtaining from the z-transform pair of each term.""","""I couldn't really understand the method of inverse z-transform using the power series expansion method.""",,"""I have done inverse z-transform using partial fraction decomposition in another lecture before, so I want to remember it. I have never done derivation by power series expansion, so I would like to solve an example thought.""",,,,1
D-2022_U36,,,,,"""Partial fraction decomposition is done with a goal in mind (in the form of a conversion table).""",,,,1
D-2022_U38,,,,"""is not.""",,,,,1
D-2022_U39,"""The z-transform has properties similar to those of the Fourier transform.
Since it is difficult to calculate the inverse z-transform as it is, the power series expansion method and the partial fraction expansion method are used. """,,,,"""I was able to understand each class, but I felt that my understanding of the entire class was weak.""",,,,1
D-2022_U40,,"""By using the partial fraction decomposition method, the inverse Z-transform can be performed""",,,,,,,1
D-2022_U42,,,"""I still don't really understand how the inverse z-transform by power series expansion works, so I'd like to investigate a specific example.""",,,,,,1
D-2022_U43,"""A general method for finding the inverse Z-transform.""",,,,,,,,1
D-2022_U44,"""Application or Practice of Z Transform""",,,,,,,,1
D-2022_U45,,,,,"""It was good because I was able to reconfirm how to do the inverse Z transform.""",,,,1
D-2022_U51,,"""I was able to derive the properties of the z-transform""",,,,,,,1
D-2022_U52,,"""When using the inverse Laplace transform, apply a partial fraction decomposition to an adaptive formula""",,,,,,,1
D-2022_U53,,,"""I want to know what the difference equation is used for and its applications.""",,"""It was easy to understand""",,,,-2
D-2022_U54,"""A lot of math content was tough
""",,,,,,,,1
D-2022_U55,"""I learned about discrete-time systems. Discrete-time systems are the output of some transformation on the input. They can be linear systems, time-invariant systems, and so on.
A transfer function consists of the ratio of input and output, and expresses the amount of transfer from input to output. The transfer function can also be obtained from the difference equation, and the properties of the system can be investigated from the poles and zeros of the transfer function. """,,,,"""I'm glad I was able to get the knowledge I needed to understand the system.""",,,,1
D-2022_U56,"""I learned about the inverse Z-transform. Also, I learned the power series expansion method and the partial fraction expansion method as liberation.""",,,,"""I want to be able to understand it properly by actually solving it using the partial fraction expansion method.""",,,,1
D-2022_U58,"""Properties of Z Transform and How to Inverse Z Transform""",,"""I didn't understand what would happen if I used the integral path C to do the inverse Z transform.""",,,,,,1
D-2022_U59,,,,,"""Understood well""",,,,1
D-2022_U60,"""Description of Inverse Z Transform""",,,"""Nothing in particular.""","""I thought the inverse Z transform was difficult.""",,,,1
D-2022_U61,"""Perform the inverse z-transform using the previous z-transform concept.""",,"""Actually finding formulas using methods other than partial fraction decomposition.""",,"""I felt that I would like to actually think about how to obtain it in cases other than the partial fraction decomposition method.""",,,,1
D-2022_U62,,,,"""Nothing in particular.""",,,,,1
D-2022_U65,"""About Inverse Z Transform""","""Inverse Z transform""",,,"""I was able to understand the calculation method of the inverse Z-transform and the relationship between the Z-transform and the Laplace transform.
""",,,,0
D-2022_U66,,"""I was able to understand the principle of Z transformation""","""I couldn't understand the specific calculation""",,"""I want to be able to do calculations on my own.""",,,,-1
D-2022_U67,"""The Z transform has properties such as convolution
The original sequence can be expressed from the Z-transformed sequence by the inverse Z-transform.""",,,,,,,,0
D-2022_U69,,"""Inverse Z transform""",,,,,,,1
D-2022_U7,"""Properties of Z Transform and Inverse Z Transform""","""Method of Inverse Z Transform""","""I'm having a hard time calculating the second exercise question, and I think I'm making a mistake, so I'd like to know the correct solution.""",,,,,,1
D-2022_U72,"""Properties of Z Transform and Inverse Z Transform""","""How to do inverse Z transform""",,,"""Concise and easy to understand""",,,,1
D-2022_U77,,"""Computation of the inverse z-transform by partial fraction decomposition.""",,,,,,,1
D-2022_U80,"""Today's content was discrete-time signals and Z-transform""",,,,,,,,0
D-2022_U83,,,"""Inverse Z transform by power series expansion""",,,,,,1
D-2022_U84,"""About Inverse Z Transform""",,,,"""This time it was easy to understand because the portion was small""",,,,1
D-2022_U85,"""On various properties of Z-transform and inverse Z-transform.""","""I was able to understand the partial fraction expansion method well among the calculation methods of the inverse Z-transform.""",,,"""It was nice to be able to do the calculations using Z-transform pairs.""",,,,1
D-2022_U87,"""Methods for Computing Sequences of Discrete-Time Signals""",,,,,,,,1
D-2022_U89,,"""I was able to learn how to solve the inverse Z-transform using the partial fraction expansion method.
I was able to understand more about the nature of the Z transform. ""","""I didn't really understand the inverse Z-transform by releasing power series points.
""",,"""I was able to deepen my learning of Z-transformation and inverse Z-transformation in today's class.
I would like to deepen my knowledge using the knowledge map in the next class. """,,,,1
D-2022_U9,"""Today we learned about the inverse z-transform.""",,,,"""It was good because I was able to concentrate on the exercises today.""",,,,1
D-2022_U90,,"""The z-transform has properties similar to those of the Fourier transform. Among them, the transition theorem is an important property in the analysis of discrete-time systems. In the inverse z-transform, the circuit C is used as the integral path. It can be obtained by line integral, but since the z-transform of the discrete-time system that is actually handled is often a rational function, it is common to perform partial fraction decomposition and obtain it from the inverse z-transform pair.""","""I forgot the partial fraction decomposition.""",,,,,,1
D-2022_U91,"""In this class, we learned about the meaning and properties of the Z-transform and the inverse Z-transform. The inverse Z-transform is an operation related to a complex number function that obtains the original discrete-time signal sequence x(n) from X(z). .""",,,,,,,,1
D-2022_U92,"""Various properties of z-transform and inverse Z-transform""",,,,"""In addition to the Z transformation, I still have a feeling that I'm not good at the inverse Z transformation, so I wanted to solve as many problems as possible so that I could get rid of it.""",,,,1
D-2022_U93,,"""The z-transform of the convolution operation is represented by the product of complex domains, just like the Fourier transform.
Inverse z-transform requires understanding of partial fraction decomposition""",,,,,,,1
