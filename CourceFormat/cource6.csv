userid,1,2,3,4,5,target
B-2020_U10,,"""I learned that copyright is not only for the author, but also for the people involved in the work.""",,,,0
B-2020_U13,,,,,"""I would like to think carefully whether I am unconsciously infringing copyright on a daily basis.""",1
B-2020_U14,"""About copyright in intellectual property rights, such as the definition of works and the rights of authors""",,,,,1
B-2020_U15,"""Intellectual property rights include copyrights, industrial property rights and other rights, and copyrights include authors' rights and related rights. Authors' rights are also called copyrights. Furthermore, it is divided into moral rights and property rights.Property rights are also sometimes called copyright.The author's moral rights protect the feelings of the author and are extinguished after death and cannot be transferred.Property rights protect profits. Neighboring rights are the rights of what is conveyed.In principle, permission is required to use the work of others, but there are exceptions.Civil law in cases of infringement of copyright or be punished under the criminal law.""","""I learned that there are different types of copyright. I learned what constitutes a copyrighted work. I learned that the sender has neighboring rights. I learned that there are penalties for copyright infringement."" I found a case where copyrighted works can be used exceptionally.""","""No.""",,,1
B-2020_U16,,"""Learn more about intellectual property and copyright
Criteria for copyrighted works (differences from non-authored works)
Regarding Exceptional Unauthorized Use of Copyrighted Materials""",,,,0
B-2020_U17,,,,"""Why is the protection period set so long only for movies?""",,0
B-2020_U18,,,,,"""With so many illegally uploaded works on the internet, I would like to be especially careful about copyright infringement.""",1
B-2020_U19,"""Rights are granted by law so that people who create something through intellectual creative activities will not suffer misfortune (rights are granted in detail according to the form of the creation). However, the period of protection is limited. Acts that infringe moral rights are, in principle, cracked down, but copyrights and other rights are extinguished and freely used as common property of society as a whole.","""I was able to understand that the reports and impressions I wrote were also copyrighted. I realized that society has created a place for free creative activities.""","""I didn't understand the meaning that it is said that moral rights should not be infringed even after they are extinguished.""",,"""I felt that it is important not to infringe on copyrights and to assert copyrights when conducting research from now on. There are many things I do not understand about copyrights even after class, and my knowledge has not been established, so I need to prepare more. I wanted to spend time on",0
B-2020_U21,,,"""Because I thought I knew what wasn't copyrightable and didn't bother to check it, I overlooked the part where the idea was not included in the copyrightable work.""",,"""I didn't know that people who deserve movie copyrights and authors are a little different from other works, so I'm glad I had this opportunity to learn.
I thought I'd check it out in detail myself because it's very important about the cases where you can use it without permission. """,-1
B-2020_U22,"""Copyright law stipulates the rights of authors and works in considerable detail, and clearly describes the actions to be taken in the event of violation.""",,,,,1
B-2020_U23,"""One of the intellectual property rights is the copyright. The copyright is generated at the time the work is created, and the author's moral rights and copyright (property rights) are granted.""","""Copyright does not apply to ideas or data. Also, related rights are involved in works created by multiple people.""",,"""Are videos posted on YouTube subject to copyright?
""",,0
B-2020_U24,,,,,"""Copyrights are not only related to the Faculty of Design, but also to citations of other people's papers, so I learned a lot. When I use other people's works, I try to pay attention to copyrights.""",0
B-2020_U26,,,,,"""Recently, with the development of SNS, there are many publications and reprints of copyrighted works.",0
B-2020_U27,,,,,"""Nowadays, the Internet is widespread, and I think that there are many cases where movies and music are uploaded in illegal ways, but considering copyrights, if you can determine whether it is illegal or not, I will continue to do so. I decided not to watch it.""",-1
B-2020_U29,"""Copyright, one of the intellectual property rights, is regulated in detail by the Copyright Act.""",,,,,1
B-2020_U30,"""Copyright""",,,,,1
B-2020_U31,"""Today, we learned about copyright. It is part of intellectual property rights and is given from the moment a work is created. It is a right given not only to authors but also to performers. It's meant to protect people emotionally and financially, and when it's violated, countermeasures are given.""","""Copyright is subject to frequent revisions, mainly due to advances in data and information technology, and there are exceptions to suit different types and uses. For example, the term of protection is 70 years after the death of the author, but the performer Lifetime alone is 70 years since the movie was released.""",,,"""I knew the word copyright, but it was the first time I had learned about it in detail. We are surrounded by creative works, so we need to consider the period of protection and I would like to gain knowledge on how to use it and use it correctly.""",1
B-2020_U32,,"""I learned what intellectual property rights are and what they protect and for how long.""",,,"""There are various conditions for unauthorized use, and some conditions require payment, so I wanted to be careful when quoting it in reports.""",0
B-2020_U33,,,"""I didn't know where to apply to use the copyrighted material and how to use it.""",,,0
B-2020_U34,"""Copyright is one of the intellectual property rights, and copyright covers creative works such as literary arts, academics, fine arts, and music. Moral rights exist to prevent creators from being mentally harmed. Copyright is automatically granted at the time of creation.In addition to the rights of the author (copyright and moral rights), there are also the rights of performers, etc. Rights such as copyright and related rights. has a period of protection. Exceptions that can be used without permission are cases such as private use and use for educational and welfare purposes.""",,,,,1
B-2020_U35,,,,,"""I thought I'd be careful when duplicating""",0
B-2020_U36,,"""Copyright Term
that copyright does not apply only to people""",,,"""When I used images imitating anime characters and commercials at school cultural festivals, etc., I did a little research on copyrights, so it was nice to know the details.""",1
B-2020_U38,,,,,"""We often hear the word ""copyright"" and it's very familiar, but I didn't know the actual situation, so it was great to learn about it. It made me sad that things that should be protected because they are so popular aren't being protected.""",0
B-2020_U39,"""Copyright is automatically granted at the time a work is created, which guarantees moral rights, property rights, and other rights to protect the author. Protected by neighboring rights.""",,,,,1
B-2020_U4,"""Intellectual property rights are rights granted to those who have created something through intellectual creative activities, and are rights that cannot be used by others without permission.
Copyright is one of them.
Moral rights protect the author morally for the life of the author.
Copyright protects the work for the duration of its existence plus 70 years.
Works that can be protected under Japanese law meet the conditions of nationality, place of publication, and treaty, but each country has its own copyright law, and multinational treaties are used to protect copyrights around the world.
It stipulates who handles copyrighted works other than the author, such as related rights, transfer of copyrights, and setting of publishing rights.
There are many cases of exceptional unauthorized use of copyrighted works, such as personal use, use of accompanying subject works, and educational purposes. It is important to always be aware of this and not neglect to check. """,,,"""When I buy the sheet music, the copyright fee is included, so is it okay to perform it in public?""","""I think it's the copyright law that can be caught next to traffic violations, so I'd like to have a solid knowledge of it.""",1
B-2020_U40,,"""Please note that the copyright protection period varies depending on the type of work.
The latest caution is required when using copyrighted works of others. """,,,,1
B-2020_U41,"""Intellectual property rights include copyrights. Moral rights of authors consist of protection rights, publication rights, and name display rights. It consists of rights not to be exploited. Neighboring rights are also granted to those who perform the work.""","""Copyrighted works are permitted for private use limited to domestic use.
Ideas are not copyrightable.
Copyright and a word are various. """,,,"""There used to be a lot of rules about copyrights. Nowadays, if you look it up on the Internet, you can always access information about copyrights. I would like to keep that in the back of my mind and acquire the skills to correctly extract and utilize them when necessary. """,-1
B-2020_U43,,"""Copyright should not apply at the idea stage.""",,,,1
B-2020_U44,,,"""I couldn't understand enough to get a perfect score on the test""",,"""Although I have used the term copyright frequently on a daily basis, I didn't know much about how it actually works, so I was glad that I was able to learn about it in this class.""",-1
B-2020_U45,,,"""I didn't quite understand the criteria for assigning copyright related rights.""",,"""I often hear people say, 'I had my idea stolen,' but when I learned that ideas are not copyrighted works, I thought I shouldn't carelessly tell people about my ideas. """,0
B-2020_U46,"""Copyright is included in intellectual property rights, and exists to protect the property and spirit of authors. There are copyrights and author's moral rights. In addition, it protects performers, who transmit their works. This includes related rights, moral rights of performers, etc. A work is defined as ""a creative expression of ideas or feelings."" This copyright basically protects works produced by Japanese citizens in Japan, and foreign works are protected by treaties concluded in each country. Because it is protected by copyright, others cannot publish or modify the work without permission. As a general rule, the permission of the copyright holder is required when using a copyrighted work. However, copyrighted works have a period of protection, and if this period has passed, there is no need to obtain permission. In addition, it is not necessary to obtain consent for private use within a limited range such as at home. In addition to this, there are cases where it is okay to come without obtaining consent in special cases, such as when using it for education. Due to the recent development of the Internet, etc., the number of cases that must be dealt with has increased, and a revision was made in 2018. ""","""Copyright protects not only the author but also the performer, and I understood the scope of the performer.""",,,"""thank you very much.
I've researched copyright as a high school assignment before, but I was only able to touch on the content itself, so I'm going to keep the performer's rights and special exceptions firmly in mind. """,1
B-2020_U47,,,,"""Is it okay if I write 'Anyone can use this song freely' when I make a song? """,,0
B-2020_U49,,"""I was able to organize and understand copyright and other rights related to it.
・I was able to get a perfect score in the quiz. ""","""Nothing in particular.""",,,1
B-2020_U5,"""Contents to learn about detailed contents and peripheral rights related to copyright.""","""I thought that the copyright of the work is 50 years after death, but I learned that 70 years after death is correct, and I learned about this mistake later in the lecture, but I learned that it would lead to a situation where criminal and civil countermeasures would be taken. I tried not to proceed with vague interpretations.""","""I'm not sure if in the past I thought that the copyright I wrote in (2) was 50 years after my death, but if the copyright were to grow like that in the future, it would be Even if the copyright has expired, I wondered what would happen to the works that entered the copyright protection period after the revision.""",,,0
B-2020_U50,"""Copyright belongs to the author and the people involved in the work. Copyright also includes moral rights and property rights, which protect the use of the work and the author himself/herself, but the period is set. Recent changes in information and the nature of authors have led to changes in copyright law.""","""There was an expiration date on copyright rights""",,,,0
B-2020_U52,,,,,"""As the computer society progresses, I think that I must be aware of the laws that are constantly changing so that I do not infringe on my rights.""",0
B-2020_U53,,,,,"""I've seen and listened to illegally uploaded videos and music, so I decided to quit. I want to enjoy my works in a way that benefits the people who made them.""",1
B-2020_U54,,"""I learned that there are many kinds of copyright. I thought ideas were copyrighted, but I found out they weren't.""",,,,0
B-2020_U58,,"""I learned a lot about the relationship between copyrights and intellectual property rights, and how copyrights are protected.""","""Not this time.""",,"""This time I used a lot of marker functions, so I understood it very well. I want to use it next time.""",0
B-2020_U59,"""Copyright includes moral rights of tea creators, copyright (property rights), and protection period. Copyright includes thought/feelings, creation, expression of ideas, and literary/academic/art/musical elements. Without permission. It may be possible to use it, but there are restrictions.""",,,,,1
B-2020_U6,"""About copyright, what it covers, and when it's not covered by copyright.""","""I learned about the difference between moral rights and copyright, and what copyright is granted to and for how long.
""",,,"""I knew about copyright until now, but I didn't know it in such detail, so I was surprised to learn that it was decided in such detail. I want to be able to make judgments.""",1
B-2020_U60,,"""Inclusion relationship between copyright and intellectual property rights, definition of copyright, cases of exceptional unauthorized use of copyright""",,,,0
B-2020_U61,,,,,"""Because of the nature of my undergraduate degree, there is a high possibility that I will create something in the future, so I want to make sure I don't forget what I learned in this class.""",1
B-2020_U62,,,"""Nothing in particular""","""Nothing in particular""",,0
B-2020_U64,,,,,"""I've learned what constitutes copyright infringement, so I want to be careful not to do that.""",-1
B-2020_U65,,,"""The line of conduct that constitutes copyright infringement remains vague.""",,,0
B-2020_U66,"""Determining what is copyrightable and exceptional unauthorized use of various types of copyright, moral rights, etc.""","""I didn't know that not only the author but also performers, record companies, and broadcasters have rights related to copyrights. I also found out that unauthorized use is possible in exceptional cases. """,,,"""I thought that if the idea was copyrighted, there would be a dispute between the people who claimed that I came up with it first. The fact that the idea is not copyrighted is something that often happens in dramas. I thought it was pitiful to think that the person who stole the idea was stolen and the person who killed it was not legally bad, but the person who killed it was bad. Copyright is so important that it kills people.""",-1
B-2020_U67,,,"""I didn't understand one of the quizzes.""",,,1
B-2020_U68,"""I learned about various laws related to copyright""",,,,"""I was able to get a general understanding of copyright. I fully understood this law and thought I should memorize it because I may be involved as a rights holder in the future.""",1
B-2020_U69,"""Rights are granted in many cases to protect authors and others.""","""Copyright has more rules and conditions than you can imagine, and there are many points to be aware of when using it.""",,"""Nothing in particular.""","""Since it is related to my major, I would like to investigate it in more detail myself.""",0
B-2020_U70,"""About copyright.""","""I found a detailed overview of copyrights, exceptions, etc.""",,,,0
B-2020_U71,,,,,"""Thank you for today's class. Thank you very much.""",-1
B-2020_U73,,,,,"""Because I was listening with more concentration than usual, my understanding was high.""",0
B-2020_U74,,"""This is the first time I've learned about 'author's moral rights'. """,,"""Nothing in particular.""",,-1
B-2020_U75,"""Types of Copyright and Their Contents""","""I learned that there are many different types of copyright,"" he said.",,,,0
B-2020_U76,,,,,"""When I entered university, I had more opportunities to write reports, etc., and I thought I should learn more about copyright, so I'm glad I learned it.""",0
B-2020_U78,,"""I was able to learn about the types of forms recognized as an author, the scope of copyright, and the scope of neighboring copyrights.""","""Nothing in particular.""",,"""When something went wrong with Teams, I couldn't think of using the chat room to contact or confirm the response, so I was confused, so I want to be able to use what I should use properly.""",1
B-2020_U79,,,"""I couldn't get it all in my head.""",,"""It's a pretty difficult subject, so I thought I'd check it out again if I had the chance to deal with copyrighted material.""",0
B-2020_U8,,"""I learned how to use a copyrighted work. I learned that there are various rights, and that the period during which the rights work differs depending on the copyrighted work.""",,,"""Copyrights and intellectual property rights are important laws in today's world, and I may need this knowledge in the future, so I would like to review and deepen my understanding.""",1
B-2020_U80,"""What are the classifications, content and exceptions of intellectual property rights?""","""I was able to understand the content of the terms 'intellectual property rights' and 'copyrights', which I had only heard mostly by name but had a rough understanding of their meaning from the context in which they were used in society. """,,,,0
B-2020_U81,,,,"""Why are the terms of protection for various rights all about 70 years?""",,1
B-2020_U85,,,"""Understanding of corporate writing is still weak""",,"""I would appreciate it if you could explain legal matters with specific examples.""",1
B-2020_U86,"""There are multiple rights related to copyright, and it is important in daily life to acquire knowledge about them, especially about exceptional unauthorized use.""","""I was able to learn about the scope of exceptional unauthorized use.""","""I wasn't prepared.""",,,1
B-2020_U87,,,,,"""I realized that copyright is an important right to protect people's creative activities. I thought that various rights correspond to various situations.""",0
B-2020_U9,"""Copyright is contained within intellectual property rights, and within copyright are author's rights and related rights. This is different from industrial property rights, which include patent rights and trademark rights. Among the rights of authors are moral rights and property rights, and among the rights held by film directors, etc., there are related rights.What is recognized as a work expresses the thoughts and feelings of the author. An idea that is not expressed is not recognized as a work, and moral rights are recognized to protect the author from being unintentionally harmed. In some cases, it is basically necessary to obtain the author's consent, but after the copyright period has expired, it can be used without obtaining consent.""",,"""I think I understood today's lesson properly.""",,,1
B-2020_U91,,,,,"""I'm glad I learned more about copyright, which is hard to fully understand even if I try to research it myself.""",0
B-2020_U92,,,"""I think I understand most of it.""",,,1
B-2020_U93,,,,,"""I thought it was important in my life until now and in the future.""",-1
B-2020_U95,"""Regarding copyright, legal commentary and specific examples of copyrighted works.""",,,,,0
C-2021-1_U10,"""Various types of sorting and their amount of computation time and number of comparisons
""",,,,"""I found that there are various sorts to reduce the amount of time computation. I would like to understand the properties, advantages, and disadvantages of each sort so that I can use them correctly. How to formulate order notation I didn't understand well, so I would like to review what the order is and try to solve it by myself through practice problems, etc. .""",-2
C-2021-1_U100,"""About various sorts.""",,,,,-2
C-2021-1_U101,,,,,"""As I mentioned in (3), I still don't understand heapsorts and binary trees, so I'd like to review them through assignments.""",-2
C-2021-1_U104,,"""Understanding what bubble sort, selection sort, binary tree and heap sort are""","""Consideration of Worst Complexity of Heapsort""",,,-1
C-2021-1_U105,"""Sorting in a certain order is called sorting. Bubble sorting is sorting by comparing adjacent ones in order. Selection sorting is a method of selecting the largest one and putting it at the end. Sorting using a binary tree was easy for me to understand, but this method requires a very large amount of calculation depending on how the original is arranged.The heap sort solved this problem, and the depth d A node is 2 to the power of d.""","""The time complexity is the sum of the time it takes to execute each procedure for the input a. Considering the complexity as a function of the input n, the computation takes the longest time among n The amount of computation is called the worst amount of computation.""",,,"""If you don't understand the order notation, you will not be able to understand the computational complexity of the algorithm, so I'm at a loss. For now, I would like to understand the order notation. If each sort can be represented by a general formula, , I will reject it, so I want to face it for the time being and try to understand it.""",-1
C-2021-1_U106,"""There are multiple types of sorts, and it is necessary to use them according to their suitability.""",,,,"""I want to understand correctly, including the next time.""",-2
C-2021-1_U107,,,"""I don't quite understand the time complexity""",,"""It's getting pretty difficult""",0
C-2021-1_U11,"""Sort problems include bubble sort, selection sort, binary tree sort, heap sort, etc. Selection sort is an improvement of bubble sort, and binary tree naive sort and heap sort have n=38 comparisons. Reverse.
""","""I understood the rough usage of sorting.""","""Heapsort was difficult and I didn't know the worst case.""",,"""Various sorts came out, so I want to be careful not to mix them up.""",-3
C-2021-1_U12,"""I learned about the correctness of the Euclidean reciprocal method, selection sort, heap sort, and other calculation methods.""",,,"""I was wondering where and how each of these calculation methods is used.""","""It was difficult with various calculation methods and definitions.""",-1
C-2021-1_U13,,"""A suitable use case for each sort.""","""I couldn't really write a binary tree sort, so I'd like to draw one.""","""In particular.""",,-2
C-2021-1_U15,"""Simple and easy to understand""","""I know how to rearrange numbers
""",,,"""I want to understand it quickly next time""",-2
C-2021-1_U16,,,,,"""Since I was given more advanced content and more difficult assignments than before, I would like to be able to understand everything within class time so that I can quickly tackle the assignments from the next time onwards.""",-2
C-2021-1_U18,,,,,"""I find it very difficult online to stay awake and concentrate on listening to lectures on Mondays. The first semester is almost half over, so I'm going to try to get myself back on track.""",-2
C-2021-1_U19,"""Even if the time complexity is the same, it can be different when examined closely.""",,,,,-3
C-2021-1_U2,"""I learned Euclid's Algorithm of Algorithm. Also, I confirmed the differences and computational complexity among bubble sort, selection sort, binary tree sort, and heap sort.""",,"""It was difficult to think about the amount of computation.""",,,-3
C-2021-1_U20,"""First, the Euclidean algorithm, which is specifically used in common key cryptography, etc. Next, sorting algorithms include bubble sort, selection sort, and heap sort. Heap sort is a binary tree. which algorithm is superior is judged by the amount of calculation of the input that takes the most time, and uses the order notation.""",,,"""Part (3)""","""I found that using a sorting algorithm makes it easy to sort in ascending or descending order. I thought the mechanism using the binary tree of heapsort was amazing.""",-3
C-2021-1_U23,,"""I was able to understand the methods of bubble sort, exchange sort, binary tree sort, and heap sort. I understood the shortcomings of binary tree sort and was convinced.""","""The order notation was difficult and I didn't understand it very well. I think it's hard to get used to reading binary trees in sorting using binary trees.""The number of comparisons in heap sorting does not exceed 3nlog(2)n I didn't understand even after listening to the explanation. """,,,-3
C-2021-1_U24,,"""I was able to understand how to quickly find the greatest common divisor using Euclid's method of division.
I was able to understand the characteristics of four kinds of sorting algorithms. """,,,"""It was difficult to understand the sorting algorithm just by reading the definition, but it became easier to understand when I specifically rearranged the numbers. I would like to try the exercises and deepen my understanding.""",-1
C-2021-1_U25,"""Computation using Euclidean Algorithm, Bubble Sort, and Heap Sort""","""How bubble sort works""",,,,-2
C-2021-1_U26,"""How to arrange information, comparison of time and effort required to arrange""","""Compared with the one next to it and put them in order""","""I don't remember how to do Euclidean Algorithm. I'll review it in my high school textbook. I don't understand the clear difference between bubble sort and selection sort, binary tree and heap sort.""",,"""I thought I understood it somehow. I don't think I really understood it, so I'd like to go over my notes and make sure it's solid.""",0
C-2021-1_U27,"""・Sorting includes bubble sort, selection sort, binary tree sort, and heap sort.
・If you graph simple binary tree sorting and heap sorting, the number of worst comparisons reverses at n=38 when the number of input integers is large. ""","""I understood how to do the first stage of heapsort.
・I learned how to select and sort.
・I learned how to do a bubble sort. ""","""I didn't quite understand how to do the second stage of heapsort.
・I didn't understand the difference between the height and depth of a binary tree. """,,,-3
C-2021-1_U28,,,,,"""Sorting is an unfamiliar word, but the mechanism was surprisingly easy to understand and the contents were interesting. However, there are some difficult things such as the amount of calculation, so I would like to review it.""",-2
C-2021-1_U29,"""I learned about bubble sorts, selection sorts, binary trees, heap sorts, and more.""","""I found out how sorting works and its shortcomings.""",,,"""A lot of content came out, so I would like to do my best to review.""",-1
C-2021-1_U3,"""There are different sorting methods, such as bubble sort, selection sort, binary tree, heap sort, etc., which change the amount of computation required. For each, we can consider the worst case, or the most computationally intensive case.""","""I found out what the algorithm for each sorting method was. I was able to calculate the worst case calculation time, and I also found that the worst case is different for each method.""",,,"""The worst case is different depending on the method, so I thought it might be necessary to judge which method is appropriate for this sequence each time.""",0
C-2021-1_U30,"""bubble sort, selection sort, binary tree sort, heap sort""","""How to sort each""",,,,-1
C-2021-1_U31,"""In order to reduce the sorting time, we have used a binary tree. In particular, heap sorting is more efficient when the number of sequences is large.""","""I found that the sorting is calculated differently.""",,,,-2
C-2021-1_U32,"""Sort is to rearrange multiple items according to a certain order. There are various types of sorting, and it is necessary to use them properly according to the purpose while considering the number of comparisons, order notation, etc. ""","""I was surprised that there are various ways to sort numbers, but each method is different, and it is difficult but interesting to think about which one to use according to the speed and safety required for sorting. thought.""","""Practice question 2 about heapsort is vague because I couldn't fully understand it just by listening to the explanation once, so I think I'll review it myself.""",,,-1
C-2021-1_U33,,,"""I didn't quite understand the order.""",,"""I wanted to be able to remember the types of sorting and think about the number of comparisons for each.""",-1
C-2021-1_U34,"""This time, we learned about three types of sorting. Bubble sorting swaps numbers in a row next to each other, selection sorting swaps two numbers, and heap sorting connects numbers like branches and moves large ones. It was something that let you.""","""I was able to understand the characteristics and drawbacks of different types of sorting.""",,,"""Understood very well.""",-1
C-2021-1_U35,"""I learned about bubble sort, selection sort, and heap sort. I learned about the concepts, advantages, and disadvantages of each.""","""I learned that there are many different kinds of sorting, and I was able to get a general idea of ​​how to think about it.""",,,"""I used to use sorting when sorting numbers, but I didn't know how to do it. Or rather, I didn't even care. bottom. """,-1
C-2021-1_U36,"""How to find the greatest common divisor faster?
・Various sorts: bubble sort, selection sort, binary tree","""・Using Euclid's Algorithm
　The number of calculation steps was exhaustively reduced from 2n at most to 2log_2(n) at most → Speeding up
・Bubble sort: Arrange while comparing the size of adjacent elements, exchange if the order is different
The number of comparisons is always n(n-1)/2, and the number of exchanges is at most n(n-1)/2 (because it decreases when exchanges are not required)
Selection sort: Find the largest element and replace it with the last element
The number of comparisons is always n(n-1)/2, the number of maximum value updates is at most n(n-1)/2, and the number of exchanges is at most n-1
・Binary tree: The drawback is that the number of comparisons varies depending on the arrangement.The worst number of comparisons is n(n-1)/2.
・Heapsort: Binary tree that satisfies the conditions, an improved version of the binary tree
·the term
　Sorting (sorting): rearranging n items according to a certain order
Ascending order: small value → large value ↔ descending order
Worst-case complexity: Computational complexity for the most time-consuming input of length n
　T(n) is of the order of f(n) = T(n)=O(f(n))""","""I didn't quite understand how to read the finished binary tree.""","""Nothing in particular. I'll review it.""","""The sorting system was easy to understand because you clicked on the algorithm slides and it looked like an animation. As I wrote above, I still don't have a good understanding of binary trees and heap soaps, so I thought I'd review them thoroughly. think.""",-2
C-2021-1_U37,,"""Even calculations that would take an enormous amount of time if simply calculated can be greatly reduced by using the bubble algorithm.""","""The calculation method is still vague, so I want to review it.""",,,-2
C-2021-1_U38,,,"""I don't know the difference between heap sort and binary tree sort, except that the number of worst-case comparisons varies depending on the number of input integers.""",,"""I was interested in the fact that the seemingly simple operation of correcting ascending/descending order is performed by an algorithm, and there are many ways to do it.""",0
C-2021-1_U39,,"""I was able to understand how bubble sort and heap sort work.""","""I didn't quite understand the order notation.""","""I would like you to explain the order notation in more detail.""",,-1
C-2021-1_U44,"""How to sort numbers""",,,,,0
C-2021-1_U45,"""Heapsort can compensate for the shortcomings of binary trees.""","""I know how to make a bubble sort and a heap sort.""","""I understand most of it.""",,"""Now that I have a general idea, I want to try things like heapsort myself.""",-1
C-2021-1_U46,,,"""I didn't understand the order notation well. It's hard to remember unfamiliar words like sort and heap.""",,"""It's the first time I've learned so much that I can't keep up with it, so I wanted to prepare more thoroughly.""",-2
C-2021-1_U47,"""I learned three sorting procedures: bubble sort, selection sort, and heap sort, and the number of exchanges for each.""","""I was able to see the advantages and disadvantages of three methods: bubble sort, selection sort, and heap sort, and know which method is best to use accordingly.""","""I didn't know how to do order bubbles.""",,"""There are various systems for computer processing, and I could feel that the field of information science is developing day by day.""",-2
C-2021-1_U48,"""In Euclid's algorithm, the remainder obtained by dividing a by b is r. If r is 0, then b is the greatest common divisor. If r is not 0, set a←b, r←b, and return to a. is an algorithm that",,"""I didn't quite understand the concept of time complexity.""",,,-3
C-2021-1_U49,"""Euclidean Algorithm is a simple and fast method from a mathematical point of view, but it is a good algorithm from the aspect of computer calculation.
Sorting/arranging the given items (generally in ascending order)
・Bubble sort/Sort the given items by comparing the sizes of two items in order, and then sort them repeatedly.
・Selective sort/find the maximum number, bring it to the end, and repeat this for sorting
・Binary tree/comparing the size relationship with the nodes and arranging them while moving to either the left or right
・Heat sort/depth x 2 nodes, and nodes exist from the left only at the deepest point. And the value of any node must be less than or equal to its parent. A binary tree that satisfies the two conditions ""","""Euclidean Algorithm is a simple and fast method from a mathematical point of view, but it is a good algorithm from the aspect of computer calculation.
・If the input information is in descending order, it will be slow in general.
・In heap sort, the top is the maximum value""","""I didn't understand the log that suddenly appeared in the first half of the discussion of the mutual division method
・In the first place, I didn't understand how the greatest common divisor was involved on a computer.
""",,"""I thought it was cumbersome to have a log appear one by one, but when I drew a graph, I could compare the amount of calculation in an easy-to-understand manner, so I felt the importance.""",-2
C-2021-1_U50,"""Learn about sorting algorithms. Understand how to find the correct amount of computation while looking at specific examples of bubble sort, selection sort, binary tree sort, and heap sort.""",,,,,0
C-2021-1_U51,"""I learned the procedures for the three sorting methods, bubble sort, selection sort, and heap sort, as well as the number of comparisons, at most exchanges, and updates for each.
""","""I learned the advantages and disadvantages of each of the three methods, and along with that, I have a vague idea of ​​when to use which method.""","""I didn't really understand how to use the order notation, so I wanted to review it again.""",,"""I thought it would be fun to know that there is a system like this to use a computer to speed things up in a very short amount of time.
I was wondering what kind of method the next merge sort would be. """,-2
C-2021-1_U52,"""How to sort data according to certain criteria""","""Disadvantages and advantages of various sorts such as bubble sort, selection sort, and heap sort""",,,"""This time it was a little difficult and I thought I understood it somehow, but I made a mistake in the quiz, so I'd like to review it.""",0
C-2021-1_U53,"Sorting is the act of rearranging certain items in a certain order, and can be divided into replacement, selection, and divide-and-conquer types. Bubble sorting compares adjacent elements, and selection sorting replaces the largest element. , Heapsort compensates for the shortcomings of sorting using binary trees.""","""The Euclidean method of division greatly increased the speed of calculation. Sorting using a binary tree changes the calculation time and the number of comparisons depending on how the numbers are arranged. At N=38, the magnitude relationship is reversed.""","""I didn't understand how to read sorting using a binary tree because it was a little complicated. First of all, I didn't know how to determine the starting point.""",,"""In this class, we learned about sorting. There are various types of sorting, and I think I was able to grasp the characteristics of each. There was a lot of information, but I would like to review it thoroughly.""",-2
C-2021-1_U54,"""I learned some sorting as examples of algorithms. Bubble sort and selection sort sort by exchanging the size of adjacent elements. Heap sort sorts using a binary tree. These have a small number of comparisons. can shorten the computation time.""","""Various algorithms exist, and it turns out that what affects computation time here is the number of comparisons between elements.""",,,,-2
C-2021-1_U55,,"""Bubble sort and selection sort are well understood.""",,,"""I had a lot of fun thinking about the assignments I submitted this time.
I like Euclid's Algorithm.

Reply to last teacher's comment
About fake coin problem
Comparing {1,9} and {10,11}, you pointed out that if they don't balance, you won't be able to distinguish them one more time, but you can do it without problems.
Suppose {1,9}<{10,11} (the right side is heavy). There is no loss of generality.
At this time, {10} and {11} are compared in the third operation.
If balanced, 9 is confirmed as a fake (lighter than the real thing). If it is not balanced, the heavier one in 10 and 11 is confirmed to be fake (heavier than the real thing).
Because from the second operation 10,11 will be heavier than the real if fake. And when the third operation does not balance, either 10 or 11 is real, so the heavier one is fake.
Therefore, the fake is confirmed in all three times.

Considering this fake coin problem from last week, I was able to prove the general case (the maximum number of coins that can be found to be fake in n times of balance).
It was {3^(n)-1}/2 as expected. I might post it on LGC when I have time.



""",-1
C-2021-1_U56,"""There are different types of sorting that are important for learning algorithms, and each has its drawbacks.""","""The key to comparing sort efficiency is to consider the worst case.""",,,,-1
C-2021-1_U57,,,"""order notation""",,,0
C-2021-1_U58,"""I learned all kinds of algorithmic methods such as bubble sort, selection sort, binary tree sort and heap sort. Also, I was able to compare their computational processing speeds and their shortcomings.""",,,,,-3
C-2021-1_U59,,"""How to do bubble sort, binary tree sort and heap sort""","""order notation""",,"""When I learned that various sorts have been devised so far, I thought that the person who thought of it was really amazing. I'm still not comfortable with the order notation and the assignment report seems difficult, so I want to do my best to review it. think.""",-1
C-2021-1_U6,,,"""I didn't know how to actually use the order notation.""",,"""The content has become difficult, so I would like to review it.""",-3
C-2021-1_U60,"""There are various methods (sorting) for sorting numbers according to certain rules. In class, we studied the principles of bubble sorting, selection, binary trees, and heap sorting. Each sorting has advantages and disadvantages.""",,,,"""I learned something""",-1
C-2021-1_U61,"""Sorting means rearranging and sorting. There are aiming, descending order, etc.
Bubble sort is to compare the size of adjacent elements and exchange them. Selection sort is finding the largest element and replacing it with the last element.
""","""There is also a sort using a binary tree, but the number of comparisons, etc., changes depending on the order in which the elements are arranged. A sort that compensates for this is the heap sort.
Without branches in the binary tree, the number of comparisons increases. """,,,"""There were a lot of unfamiliar words, but I was able to understand them well because I thought carefully about the examples.""",-2
C-2021-1_U62,"""I learned how to sort a sequence in descending or ascending order.""",,,,"""I wanted to deepen my understanding of sorting through the assignments.""",-1
C-2021-1_U63,"""When finding the greatest common divisor, the Euclidean algorithm takes less time than the Euclidean algorithm and factorization.
There are exchange type including bubble sort, divide-and-conquer type, heap sort [worst number of comparisons 3nlogn] and selection type including binary tree [worst number of comparisons n(n-1)/2], etc. We need to estimate the computational complexity for the input that takes the longest time, such as the worst time evaluation. ""","""I was able to easily understand the bubble sort and binary tree method and solve the problem.""","""The specifics of how heapsort works is a bit confusing""",,"""Binary tree takes a long time for long input, so when the input integer value is 38 times or more in simple sorting, we found that heap sorting reduces the number of comparisons in the worst case. It was interesting to see such a difference, and I felt that it is okay to use them according to the application.""",-1
C-2021-1_U64,"""On Euclid's Algorithm, Three Sorting Methods, and Their Complexity.""","""Understanding bubble sort, selection sort, and heap sort.""",,,"""I learned about heapsort for the first time, but I thought it was a very clever method with a small amount of calculation. It was interesting.""",0
C-2021-1_U65,"""Various sorts, different speeds""","""There are bubbles, selections, binary trees, and heapsorts, all at different speeds.""",,,,-1
C-2021-1_U68,,"""Euclidean Algorithm is very useful when the object is a large value.
Bubble sort is a method of sorting numbers by comparing the size of two adjacent numbers. Heapsort compensates for the shortcomings of binary tree sort. ""","""I don't understand selection sort and order notation.""",,"""There are various kinds of sorting, but I was a little confused because the amount of calculation and the method changed slightly depending on the sorting.
I felt a little nostalgic because I hadn't touched Euclid's mutual division method since the exam period. """,-2
C-2021-1_U69,,"""I found out that there are various calculation methods for sorting items. The idea of ​​bubble sorting is relatively brute force and easy to understand.""","""I didn't understand how to count the number of comparisons in a binary tree.""","""is not""","""I think humans can sort things out intuitively, but in order for a computer to remember it, we have to teach it in a logical way, so I felt it was a little troublesome. But this method also works for the human mind. I thought that if I let them memorize this, they would be able to work more efficiently and accurately than if they did it by intuition.""",-3
C-2021-1_U7,"""Euclidean division can be used to speed up calculations.
Sorting is the act of rearranging n items, and includes bubble sort, selection sort, and heap sort. """,,,,"""I was very surprised at how fast the calculation was incomparably faster when I used Euclid's method of division. Also, since the rooted tree that I learned last time came out again, I could master the way of thinking from the previous time and this time and apply it. I want to be able to think.
""",0
C-2021-1_U71,"""As an algorithm to find the greatest common divisor, I learned the Eugrid's method of mutual division, and compared the computational complexity with the method of finding by crushing.
We learned bubble sort, selection sort, binary tree sort, and heap sort as algorithms for sorting numbers.
Worst-case complexity is used as one of the indices to compare the performance of algorithms. In order to compare computational complexity, we learned order notation. ""","""I was able to learn how to make the algorithm ""better"".
It was found that the difference in order greatly affects the computation speed when the object to be treated becomes large. ""","""Nothing in particular.""","""In binary tree sorting and heap sorting, how do computers handle and store tree information?
For sorting using trees, when choosing numbers in order of passing,
Isn't the amount of computation consumed when arranging numbers so as to form a binary tree or heap? ""","""Not by speeding up the computer, but by making the algorithm more efficient
It was very interesting to be able to increase the speed explosively.
When I saw the efficient algorithm, I was impressed that it was well done.
thank you very much. """,-2
C-2021-1_U72,,,,"""Any questions!!""","""I thought it would be easier to follow PowerPoint by myself.""",-3
C-2021-1_U73,"""The amount of time required for calculation changes depending on the ingenuity of the algorithm. There are many methods for rearranging a sequence of numbers, and each method has advantages and disadvantages.""",,,,,0
C-2021-1_U74,,"""I was able to sort easily using sort.""","""I still don't understand heapsort.""",,"""It was a little difficult in the second half.""",-1
C-2021-1_U75,"""As examples of sorting items, there are bubble sort, selection sort, binary tree sort, heap sort, etc. As a performance evaluation of these algorithms, we use the time complexity. Even with the same input length, the computational complexity depends on the content. In fact, the evaluation is based on the worst-case computational complexity, that is, the computational complexity for the input that takes the longest time for that input length. Depending on the input, which sort can be computed quickly changes.""","""I learned about sort types, how to calculate them, and their evaluation.""",,,,-1
C-2021-1_U76,"""About bubble sort, selection sort, binary tree sort, and heap sort""","""I found that the longer the input length, the more time it took depending on how the sorting was done.""","""The way the order was estimated was a bit confusing.""",,"""It was interesting to see that there are various ways to sort things, and that each method has different efficiencies.""",-2
C-2021-1_U77,"""I learned about computing time, multiple sorting methods.""",,,,,-1
C-2021-1_U79,"""There are various methods to solve the problem of sorting. Bubble sort, which sorts by comparing adjacent numbers, selection sort, which repeatedly finds the largest element and puts it at the end, and bifurcation technique. The main types are binary sorting to be used, heap sorting that compensates for the shortcomings of binary sorting, etc. Any method can solve the sorting problem, but the one with the shortest calculation time is useful.Also, calculation time is the one that has the shortest calculation when the input becomes long, and the one that does not have an extremely long calculation.""",,"""How to read the numbers in Binary Sort and the second stage of Heapsort were a little difficult.""",,,-2
C-2021-1_U8,"""Sorting methods, their speed and convenience""",,,,,-3
C-2021-1_U80,"""This time, we learned the algorithm for finding the greatest common divisor and the sorting algorithm for alignment problems. There are three types of sort l: bubble sort, selection sort, and heap sort. Bubble sort compares the size of adjacent elements. Therefore, the computation time is long.""","""After taking this lecture, I learned about the alignment problem and the amount of calculation. When arranging elements, the bubble sort, which compares elements in order from the front, has a disadvantage that it requires a lot of calculation and takes a lot of time. To do so, like selection sorting, finding the largest element and replacing it with it eliminates the need for each comparison, reducing the amount of computation.""",,,,-2
C-2021-1_U82,"""On Euclid's Algorithm
About the sorting problem""","""Sorting is the act of rearranging items in a certain order. There are various types of sorting algorithms. When rearranging, the sizes of adjacent elements are compared.
A binary tree that satisfies two conditions is called a heap.

""",,,"""Today, the Euclidean method of mutual division came out, but I thought it was difficult to get used to because it was written more complicated than when I learned it in high school.
Also, new words such as sort and heap have appeared, so I want to review them so that I don't forget their meanings. """,-1
C-2021-1_U83,,"""I understood enough to distinguish between each sort. Heapsort was the most complicated for me, but the examples and explanations made it possible to do it.""",,,"""I was surprised to see such a variety of procedures established.""",-2
C-2021-1_U84,"""Various kinds of ways to sort numbers""",,,,"""I was able to focus on my classes. I want to do the same next week.""",-2
C-2021-1_U85,"Sorting is the act of arranging and rearranging multiple values ​​according to their size, etc. Arrange the given numerical values ​​in a row, compare the size from the left end to the right side, and if it is the opposite, replace it. Binary tree sorting is to write in the order of the columns, branching to the right for larger ones and left for smaller ones. A short and straightforward version is called heapsort.""","""Even if it's just rearranging, depending on your ingenuity, the time to do it can be shortened or made easier to understand.""",,,"""Continuing from the last time, it was like mathematics, and it was interesting. Euclid's method of mutual division reminded me of my examination period. I thought that there are various methods even if it's just sorting.""",-1
C-2021-1_U86,"""I learned about different sorts.""","""Even if you try to find fake coins using the same method, it turns out that the calculation time varies greatly depending on your luck.""","""I was confused when I heard something called sort for the first time.
""",,"""It seems that there was a problem with the electronic textbook today, so I want to be able to deal with it properly when that problem occurs.""",-1
C-2021-1_U87,"""I learned four methods of sorting and rearranging numbers. The amount of computation changes depending on the input, so I try to think about the worst case length.""",,"""I kind of understood the idea of ​​binary tree sorting, but I didn't really understand how heap sorting compensated for the shortcomings of binary tree sorting.""",,,-1
C-2021-1_U88,"""Sort → Arranging according to a certain order. Ascending order unless otherwise specified.
Bubble sort → Sort by comparing the size of adjacent ones.
　　　　　　　　Comparison times...always n(n-1)/2
                        Number of exchanges ‥N(n-1)/2 at most
Selection Sort → Swap the largest element with the last element.
　　　　　　Comparison times...always n(n-1)/2
                     Number of comparisons of the maximum value: at most n (n -1)/2
                    Number of exchanges: at most n-1
Binary tree sort → Compare with nodes, if larger, proceed to the right, if smaller, move to the left.
　　　　　　Requires n(n-1)/2 comparisons in the worst case
Heapsort → Binary tree with node n and height h that satisfies the following two conditions.
　　　　　　　　1, the node of depth d exists exactly to the dth power of 2, and the node of depth h exists in order from the left.
2, No node's value is less than or equal to the value stored in its parent.
""","""I figured out how to permute each sort.""","""I didn't understand the difference between heapsort depth and height. I didn't understand the log of the number of heapsort comparisons.""",,,-3
C-2021-1_U89,,,,,"""I thought I understood the content of the class, but I did poorly on the quiz, so I realized I didn't.""",-2
C-2021-1_U9,,"""same as above""","""Worst Execution Case""",,,-1
C-2021-1_U90,"""I felt that terms and theorems were more difficult than last time.""","""Understood the various sorting methods and their characteristics""",,,,-2
C-2021-1_U91,"""Many new computational metrics have emerged as a way of thinking numerically.""","""I found that the number of updates and the number of replacements did not always match, which left an impression on me.""","""How to think numerically is confusing and difficult.""",,"""It's getting harder and harder, so I need to set aside time to study computer science.""",-3
C-2021-1_U92,,"""I understand the difference between factorization and Euclidean division.""",,,"""The heap sort conditions, the first stage, the second stage, etc. were difficult.""",-1
C-2021-1_U93,"""Sorts such as bubble sort, selection sort, heap sort, and binary tree sort""","""I understand roughly how each sort works.""","""I wasn't sure what the complexity of each sorting algorithm was.""",,"""My score on the quiz was low, so I thought I'd try again tonight.""",-3
C-2021-1_U94,"""Factorization of large numbers can be done in a short time by using Euclidean division method.
Bubble sort, one of the sorting algorithms, sorts by comparing the size of adjacent elements.
Selection sort finds and sorts the largest element.
Heapsort replaces and rearranges branching elements. It compensates for the shortcomings of binary tree sorting. """,,,,,-2
C-2021-1_U96,"""Bubble/selection sort is horizontal. Binary tree/heap sort is a tree.""","""Bubbles, selections, binary trees, and heapsorts are easy to digest if you imagine a history that has been devised for easy arranging.""","""Worst-case thinking for heapsort.""","""How can I think of a worst case execution case for heapsort?""","""I should have reduced the things I didn't understand in my preparation.""",0
C-2021-1_U97,"""Mechanism of Information Alignment Problem""",,,,"""Including what I have learned so far, I thought that if I didn't review it again, I wouldn't be able to understand it.""",-1
C-2021-1_U98,"""When you want to arrange data according to certain conditions (ascending or descending order), there are bubble sort, selection sort, binary tree sort, and heap sort as calculation methods, and it is necessary to select the optimum calculation method according to the situation.""","""I learned that there are various calculation methods for sorting data such as rankings, which we often see, according to conditions.
I was also able to understand the characteristics of each cheek. ""","""It is still difficult to choose the best calculation method.""",,,0
C-2021-1_U99,"""Calculation methods on computers include bubble sort, selection sort, binary tree sort, and heap sort, and the efficiency varies depending on the conditions.
The important thing is to be able to calculate in a short time when the size becomes large. ""","""Computation time is not a big deal when the size is small, so the important thing is how quickly it can be computed when the size becomes huge.""","""The heapsort calculation process was a little complicated, so I want to thoroughly review and deepen my understanding.""",,"""I was able to learn about various calculations on a computer, and it was interesting to rearrange them in a calculation process that I don't usually do. Conditions such as efficiency and worst case calculation time differ depending on the calculation method, so I would like to understand them. .""",-3
C-2021-2_U10,"""By using Euclidean division method, it is possible to find the greatest common divisor faster than factorization. With bubble sort, by comparing the size of adjacent elements and sorting them, n(n-1 )/2 comparisons and at most n(n-1)/2 swaps, the whole can be sorted.In selection sorting, iteratively finds the largest element and swaps the last with it, always It can be aligned by comparing n(n-1)/2 times, updating the max value at most n(n-1)/2 times, and swapping elements at most n-1 times.""","""I was able to understand Euclid's method of mutual division and sorting. Also, I learned that even a computer would take an enormous amount of time if the calculations were not made easier.""",,,"""I was surprised to find that Euclid's Algorithm, which I learned in high school, is a very useful method.""",0
C-2021-2_U100,"""Algorithm is the process of calculation, and the number of calculation steps is the number of basic operations that are performed until the algorithm ends. One type of algorithm is Euclid's Algorithm. Arranging according to the order is called sorting, and there are various sorting methods such as bubble sort and heap sort. ""","""As I understood what an algorithm is in computation, I was able to see a concrete example of an algorithm, which made it easier for me to imagine. I was able to understand the meaning and usage of representative examples of law.""",,,"""I was able to understand the basics, but the heapsort part was a little difficult, and it took me a while to understand, but I'm glad I was able to understand it because I got a concrete example.""",-1
C-2021-2_U101,"""When looking for the greatest common divisor of two numbers, the number of calculation steps increases to 2n and the execution time of the algorithm becomes long if the method is to check each one thoroughly. Solve that problem. is an algorithm that uses the Euclidean algorithm, and the number of calculation steps is 2log_2(n), and the execution time can be greatly shortened.Therefore, the algorithm is a smart method from the viewpoint of execution time It can be said that there is another way.

I learned more about bubble sort and selection sort among the sorts that sort. Bubble sort is a method of sorting by comparing the size of adjacent elements, and selection sort is a method of sorting by searching for the largest element and replacing it with the last element. The factors for estimating the time complexity are the number of comparisons and the number of exchanges for bubble sorting, and the number of updates of the maximum value in addition to the above two for selection sorting.
Time complexity, the sum of the time it takes to perform each step on an input, is important when evaluating the performance of an algorithm. This varies depending on the input, so rather than thinking about each one, we often think about it for a certain length of input. In particular, the computational complexity that takes the longest time is called the worst computational complexity. Since it is necessary to know how fast the function can be executed for a long input, we consider the upper bound of the function when the input is large. There is an order notation as this notation, and the worst state is expressed by a function that is just above the upper bound of the function. In the order notation, it is meaningful to show the upper limit, and it is possible to understand the judgment of the speed and which elements should be considered.
Sorting using a binary tree was also mentioned as an introduction to heapsort. In this sorting, the sorting ends when the tree is completed, but it is necessary to read it correctly in passing order. Binary tree sorting has the drawback that the computation time varies because the depth of the binary tree changes depending on the input. ""","""I learned how Euclidean algorithm can efficiently find the greatest common divisor. Also, when considering algorithms, the number of calculation steps, which is how many times similar operations are repeated, becomes important. I was able to understand that it was possible to judge whether the algorithm was smart or not.
As for the contents of the sorting, I was able to know what kind of procedure I should take to ensure the sorting, and the name of the sorting. I felt that the characteristics of each sort appeared in the elements when estimating the time complexity. Furthermore, it was found that knowing the worst case computational complexity, which is the computational complexity in the case where it took the longest time, is to evaluate the performance of the algorithm used. I was able to understand that understanding the functions suppressed from above by the order notation leads to knowing the limits of the algorithm. ""","""I understood the meaning of order notation and the benefits of doing it, but I didn't quite understand how to find the positive constants c,n(0).""","""All of the positive constants shown as examples of order notation are integers, but if the constants are set to numbers that are positive and represent the upper bound, can they be non-integer numbers? ?
I would appreciate it if you could explain the exercise 3.
Also, I can only vaguely understand the number of calculation steps in Euclid's mutual division method, so please explain in detail. ""","""Since the sorting procedure was explained with specific examples, it was easy to understand. Also, I used to think that Euclid's mutual division method was like that, but I was able to know the proof. It was very interesting that finding the greatest common divisor quickly led to the story of encryption keys.
Regarding the second half of the order notation, even though I was preparing for the first lesson, I could not catch up with my understanding immediately. I would like to cherish the review to break down and understand in my own words. """,-1
C-2021-2_U102,"""In this lecture, we learned about Euclid's algorithm of division and sorting. In Euclid's algorithm of division, we learned that the length of the side of the largest square that fills a rectangle is the greatest common divisor of the two sides of the rectangle.""","""I found it easier to understand when I used a rectangular explanation of how to prove Euclid's Algorithm.""","""I couldn't understand the sorting part very well. I would like to review it and understand it properly.""",,"""I was very impressed by Euclid's method of proving the mutual division method. It was very easy to understand and I could clearly understand that I should think about it that way. I could not understand the sorting part so much, so I would like to review it and understand it. .""",0
C-2021-2_U103,"""For the greatest common divisor problem, it is possible to solve the problem at high speed by using the Euclidean division method. For the sorting problem, there are methods such as bubble sort, selection sort, and heap sort, and each algorithm has its own characteristics. Order notation is used when comparing computational complexity.""","""For the greatest common divisor problem and the sorting problem, I learned various approaches to solve the problem, and found that they were cleverly devised. Also, I was able to learn about the order, which is a new index.""","""I'm not confident in my understanding of order notation.""",,"""I learned about Euclid's method of mutual division in high school, but I thought it was really amazing to come up with the idea of ​​laying out the largest squares. I'm not confident in my understanding of order notation, so I'll do my best to review it. .""",-1
C-2021-2_U104,"""The number of calculation steps is the number of basic operations performed until the algorithm ends. In the problem of the greatest common divisor, the remainder is the basic operation, and it can be obtained at high speed by using the Euclidean division method. , sorting along a certain order is called sorting, and the typical ones are bubble sort and selection sort.Algorithm computational complexity is considered in terms of order notation.""",,"""The order notation was hard to understand.""",,"""The number of mathematical elements has increased, and half of the fun has become more difficult.""",0
C-2021-2_U105,"""I learned about the greatest common divisor problem, the principle of division, and exhaustive solutions, where the remainder is regarded as the basic operation. We also dealt with the problem of sorting, which is to rearrange some things in a certain order.This is one of the most basic problems in computer science.In particular, we dealt with the problem of sorting by comparing the size of adjacent elements. We focused on bubble sort and selection sort, which finds the largest element and swaps the last element with it.""","""I was able to estimate the sorting procedure and time complexity for both bubble sort and selection sort. I was able to understand the greatest common divisor problem after reading the slides again, albeit vaguely."" ""","""Calculation formulas and mods were mathematical and felt difficult. My head felt confused.""",,,-1
C-2021-2_U106,"""Relationship between greatest common divisor problem and Euclidean division method and its validity, sorting problem and methods of bubble sort and selection sort which are some calculation methods of sort problems, method of evaluation of time complexity, order notation, 2 I learned how to read sorting using Shinki.""","""I was able to learn about the relationship between Euclidean algorithm and information, and how to solve two types of sorting problems.""","""I didn't really understand why the order evaluation of bubble sort and selection sort is the same n^2, and what the background is for n^2.""",,"""Euclidean's Algorithm, which I learned in high school, came up again in a class other than mathematics, so it was quite surprising. I also thought that the idea of ​​comparing the amount of calculation by the length of the input was very novel. """,-1
C-2021-2_U107,"""Evaluation method of computation time, usefulness of Euclidean algorithm in computation, explanation of bubble sort, selection sort and sorting using binary tree""",,,,"""It was a little difficult to understand the difference between the sorting methods. I still don't understand the difference between the other methods, so I will try to learn more.""",-1
C-2021-2_U108,"""The naive_gcd exhaustive method takes too much time, but if you use Euclid's method of division, the calculation steps will be much smaller. For example, when sorting various numbers, sorting according to a certain standard , I considered how much the computational complexity of the algorithm at that time could be simplified by each method.""","""The number of calculation steps is the basic operation that is performed until the algorithm ends. The more complex the algorithm or the higher the number of basic operations, the slower the processing speed. When n something is given, Sorting according to a certain rule is called sorting.In particular, sorting by exchanging some elements out of n is called ""bubble sorting"", searching for the largest element and the last element The permutation is called ""selective sort"", and the sorting of elements according to a certain criterion from smallest to largest is called ""heap sort"". In particular, a binary tree is called a ""heap"" when there are exactly 2^d nodes with a depth of d, existing sequentially from the left, and the value of any node is less than or equal to the value stored in its parent. Also, if the condition 2 of the heap is not satisfied, it may be replaced with the parent appropriately. ""","""I don't quite understand that 6 and 7 are at the same depth in the '6th time' on page 19 of Heapsort. Since 6 is smaller than 7, it may line up in the order of 9-7-6 towards the bottom left. ""","""I don't quite understand that 6 and 7 are at the same depth in the ""6th time"" on page 19 of the heap sort described in (3). """,,0
C-2021-2_U109,"""Euclidean Algorithm, Computational Complexity Evaluation, Bubble Sort, Selection Sort, Order Notation""","""We found that even for operations that produce the same output, there is a large difference in computational complexity depending on the algorithm.
I also understood how to evaluate the computational complexity using the order notation. """,,,,-1
C-2021-2_U11,"""On the usefulness of Euclid's algorithm and its mechanism
What sort is (bubble sort, selection sort)
About order notation
""","""Using Euclid's Algorithm Reduces Computation Time Extremely
How to use bubble sort and selection sort
How to use order notation""",,,"""I was surprised to find out how great Euclid's Algorithm is.
I found the sorting mechanism that I always use interesting.""",-1
C-2021-2_U110,"""This time, we learned about Euclidean mutual division, which finds the greatest common divisor of two natural numbers, and bubble sort, which sorts the whole in ascending/descending order while comparing the size with neighboring elements.""","""I was able to understand the Euclidean algorithm and the sorting method.""",,,,-1
C-2021-2_U111,,,,,"""I feel like I was able to understand the convenience of Euclid's division method for the first time. I didn't understand the order notation well, so I would like to review the examples and practice problems and do my best to understand it.""",-1
C-2021-2_U112,"""The number of calculation steps is the number of basic operations performed until the algorithm ends, and the smaller the number of calculation steps, the shorter the execution time of the algorithm. The greatest common divisor problem considers the remainder as the basic operation. However, since the exhaustive solution method takes too much time, it is better to replace it with the problem of filling rectangles with as large squares as possible.This algorithm is called the Eugrid's Algorithm.Sorting items according to a certain order is called sorting. For example, bubble sort is a method of sorting while comparing the size of adjacent elements.Also, selection sort is a method of searching for the largest element and replacing the last element.Computational complexity is the amount of input It is a function of length, the sum of the times it takes to perform a procedure on an input.""","""Regarding the greatest common divisor problem, I was able to understand the relationship between the Eugrid algorithm and the problem of replacing rectangles with squares as large as possible. I was also able to understand the proof that the Eugrid algorithm is correct. I was able to sort items by understanding and learning the methods of bubble sort and selection sort.In addition, I was able to understand the procedure of binary tree sort.""","""Regarding the problem of finding the greatest common divisor using Eugrid's mutual division method, I felt that I should actually try to fill the rectangles with as large squares as possible. Also, there were some parts that I didn't understand well about the order notation, so I firmly I would like to review and deepen my understanding.""","""Nothing in particular.""","""When thinking about the greatest common divisor, it was interesting to think about how to replace the problem of filling a rectangle with two numbers as the length of one side with as large a square as possible. I was surprised when I learned that it was just division, but I also found it interesting. I thought it would be interesting to decide on a procedure for rearranging the numbers and decide on the order.""",-1
C-2021-2_U113,"""There are various types of sorts for sorting items, such as bubble sort and selection sort.""","""There are various sorting methods, such as bubble sorting, which compares the sizes of adjacent elements and sorting them, and selection sorting, which searches for the largest element and replaces it with the last element.""","""I found the order notation difficult because I had to compare functions.""","""Nothing in particular.""","""For relatively short inputs, it doesn't take much time, so it doesn't matter, but it was interesting to worry about the amount of computation at worst.""",-2
C-2021-2_U114,"""The number of calculation steps is the number of calculations until the algorithm ends, and the fewer the calculation steps, the shorter the calculation time. It takes time, so we need a more efficient algorithm.Sorting in a certain order is called sorting, and there are various sorting algorithms such as bubble sort and selection sort.For input a, execute each procedure The time required for is called the time complexity, and a function that expresses this as the length of the input n is often used.In addition, by obtaining the worst case complexity, we consider the upper limit of the function when the input is large.""","""Since I learned Euclid's mutual division method in high school, I only had an image of origami, but in this lecture, I was able to understand the validity of it because it was proved. Greatest common divisor It turns out that Euclidean division is very efficient in the algorithm for finding .""","""I feel like I didn't really deepen my understanding of the order part.""","""I would like you to explain the report assignment.""","""I didn't quite understand how to calculate the order, so I struggled with the exercises and assignments. I hope I will be able to understand it properly if you explain it again next time. There are a huge number of algorithms these days, and they are all When I thought that humans programmed this, I was reminded of how amazing our predecessors were.""",-2
C-2021-2_U115,"● Algorithm using division ● Calculation speed ● Bubble sort ● Selection sort ● Algorithm and amount of calculation ● Worst case amount ● Order notation ● Introduction of heap sort
●The feeling that the numbers are going up is the reason for the bubble""","""● The number of exchanges and comparisons of bubble sort and selection sort ● Concept of order notation""","""Origami""",,"""I felt that it became difficult in B. I'm busy with club activities, so I want to keep working hard.""",-1
C-2021-2_U116,"""There are bubble sort, selection sort, and binary tree sort, and although these algorithms are somewhat similar, their basic search methods are different. In addition, the definition of order is given as an indication of the computational complexity of these algorithms. ing.""","""I was able to understand the mechanism of bubble sort, selection sort and binary tree sort.""","""Heapsort is too complex for me and I'm having a hard time understanding it.""",,"""I learned about four algorithms in this lecture, but since which one is the fastest depends on the input, I felt it necessary to think about which one to use.""",-1
C-2021-2_U117,"""One of the algorithms is Euclid's Algorithm. The number of basic operations until the end of the algorithm is called the number of calculation steps, and it is necessary to make this number as small as possible. However, Euclid's Algorithm was devised to improve the speed.Using this method, the number of calculation steps is at most 2log2n when n=min(x,y).In addition, an algorithm for sorting problems There are also bubble sorts and selection sorts.The performance of an algorithm can be seen from the worst-case complexity, which can be seen from the order notation.""",,,,,-2
C-2021-2_U118,"""Sort problems include bubble sort and selection sort. Bubble sort sorts by comparing adjacent elements, and selection sort finds the largest element and replaces it with the last element.""","""I learned how to do bubble sort and selection sort.""","""The order notation was difficult and I didn't understand it well. I would like to review it thoroughly.""","""Nothing in particular.""","""I didn't really understand the order notation, so I would like to reread the material and solve the exercises until I understand it.""",0
C-2021-2_U119,"""I learned how bubble sort works and how selection sort works""","""I was able to get a good understanding of what bubble sort is, what selection sort is, and the difference between bubble sort and selection sort.
I was able to understand the calculation part of the order notation.""",,,,-1
C-2021-2_U120,"""Euclidean algorithm is fast and effective as a method to stop the greatest common divisor. Euclidean algorithm can be explained using rectangles. Bubble sort compares adjacent ones. Selection sort selects the maximum value and puts it on the right end. Order notation. finds an upper bound.""","""Origin of Euclid's Algorithm. Bubble sort, selection sort.""","""I didn't quite understand the calculation formula of the order notation.""",,"""It was difficult to understand the number of comparisons for various sorts, the number of exchanges, and the number of updates for selection sorting using formulas, and it seemed difficult to actually think about the sequence.""",0
C-2021-2_U121,"""I was able to solve problems using various algorithms, such as Euclidean and sorting problems, and learn how to construct smart algorithms.""","""Euclidean was easy to understand because I had learned about Euclid until high school.""","""It was difficult to explain the calculation time estimation of naive gcd""",,,-2
C-2021-2_U122,"""The smaller the number of calculation steps, which is the number of basic operations performed until the algorithm ends, the shorter the execution time of the algorithm. This is related to the remainder and Euclidean division method. The computational complexity of bubble sort and selection sort ""","""The meaning and method of bubble sort and selection sort
Complexity of Sorting Algorithm""",,,"""It was interesting to replace the greatest common divisor problem with the problem of filling rectangles with as large squares as possible.""",-3
C-2021-2_U124,"""Heapsort comparison count
Complexity of bubble sort and selection sort
order notation""","""I was able to understand the complexity of each sorting algorithm.""","""Binary tree sorting was complicated and I couldn't understand it in one shot.""",,"""I learned that there are many types of sorting. I would like to understand and use them more deeply.""",-3
C-2021-2_U125,"""About computation time evaluation of algorithms such as factorization and Euclidean division method. About sorting in a certain order (mainly bubble sort and selection sort).""","""When factoring large numbers, it can take a tremendous amount of time, but using the Euclidean algorithm can find the greatest common divisor very quickly. It turns out that they are very different: bubble sort basically compares the size of adjacent items and sorts them, while selection sort finds the largest element and sorts the last element. Also, how to read sorting using a binary tree.""","""Regarding the number of comparisons of elements and the number of exchanges of the maximum value. When the length of the sequence to be sorted is n, the number of comparisons is (n-1) + (n-2) + ..., adding from n-1. Also, regarding the number of exchanges of the maximum value, I did not understand the point that the number of exchanges is n + (n-1) + ... and that it is added starting from n.""","""Please explain again about (3).""","""I was surprised at the huge difference in computation time when using the Euclidean algorithm compared to factorization. Every time I take this class, I realize that sorting and comparison are things I do a lot in my daily life. , It's fun because it gives me new realizations about how to do things that are complicated and troublesome if I repeat them more efficiently and smarter.""",-2
C-2021-2_U126,,,,"""I couldn't understand the meaning of ``n=O(n^3) is not wrong according to the definition, but it is not strict in terms of evaluating the amount of calculation,'' so I would like you to explain it in a little more detail. """,,-1
C-2021-2_U127,,,"""I don't quite understand how the order notation introduced in the second half of the class works.""",,,-2
C-2021-2_U128,,,,"1. How is the calculation method used this time, especially the problem of the greatest common divisor, when you use the Internet?
2. What do you think of my method for this assignment?
""","""I felt that the lecture had a very strong connection between information science and mathematics. Also, I feel that it is getting harder and harder, so I would like to review the lecture video and work on reviewing properly. """,-1
C-2021-2_U129,,,"""I know what order notation looks like, but I don't really know what c and n₀ look like.""",,"""In the order notation, I can understand the theory that you don't have to consider the part where n is small, but I thought it was difficult to understand intuitively.""",0
C-2021-2_U13,,"""I know what bubble sort and selection sort are doing and how many operations it takes.""","""I didn't understand the order notation at all, so I looked at the archive and learned it twice.""",,,-3
C-2021-2_U130,"""I learned about computational complexity, computational time, sorting, and order notation for roughly evaluating them.""","""Seeing concrete examples of different ways of Euclidean division and sorting gave me a better idea of ​​what the efficiency and value of each would be.""","""I don't have a concrete understanding of the order notation yet, so I'd like to review it while looking at actual examples.""",,"""Knowing that the basics and applications that I learned in junior high and high school are used in information algorithms, I was able to make use of my previous knowledge and feel familiar with it, so it was very interesting.""",0
C-2021-2_U131,,"""For Euclid's Algorithm, I was able to understand not only the calculation method but also the mechanism of why the calculation method can find the greatest common divisor. Also, the number of comparisons and the number of exchanges of bubble sort and selection sort are written on the slide. I was able to understand by calculating by myself whether it would be a formula.
""",,,,-2
C-2021-2_U133,"""I learned about the correctness of Euclidean division and about sorting according to order, because I learned that using Euclidean division allows us to find the greatest common divisor.""","""I was able to understand the methods of selection sort and bubble sort. I was also able to understand the concept of Euclid's algorithm.""","""I didn't really understand the relationship between algorithms and orders. I couldn't keep up with the end of the class, and I had a vague understanding, so I couldn't organize the relationship properly.""",,"""I was able to focus on the new things I learned, such as the Euclidean algorithm and sorting. I learned the Euclidean algorithm in high school mathematics, so I think I was able to understand it again as a review. The last order was ambiguous. However, I want to study hard because there is.""",-2
C-2021-2_U136,"""Computation using Euclid's Algorithm. Sorting means arranging in order. Bubble sort. Selection sort. Time complexity is sum of time. Order notation""","""The way each sort is done is different.""",,,"""It was a little confusing and difficult.""",-1
C-2021-2_U137,"""When creating an algorithm, it is important not to spend too much time on calculations. The sorting procedure includes bubble sort, selection sort, binary tree sort, and heap sort. Also, the amount of computation time is sometimes used as a method of evaluating the performance of an algorithm.""","""Algorithms also have superiority and inferiority, and I found that the calculation time for superior algorithms and inferior algorithms differed greatly. I was also able to understand the mechanism of order notation.""","""I was not able to understand heapsort during class, but I was able to understand it through review.""",,"""I studied Euclid's method of mutual division during the exam period, so now that I'm a university student, I'm happy to be able to use it outside of the exam. The content of this lesson is difficult to understand and takes time, so I'll review it thoroughly. I would like to increase the resolution of the content.""",-2
C-2021-2_U138,"""First, we did the fifth quiz. Then we learned about algorithms and the validity of Euclid's Algorithm. Then we learned about bubble sort among sorting algorithms. Then we learned about selection sort. Then we learned some examples of binary trees and how to read them, and finally we learned about heapsort.""","""The quiz helped me understand the problem of how many times it takes to distinguish between real and fake coins.""","""I'm a little worried about my understanding because the class speed was generally fast.""",,,-1
C-2021-2_U139,"""There are various forms of output for input, such as bubble sort and selective sort. Also, there is the concept of order.""","""I was able to understand the definition of order and its formula.""",,,"""It was all the theories and concepts I heard for the first time, but I think I was able to understand it well.""",-1
C-2021-2_U14,"""There are naive_gcd and euclid_gcd as algorithms used to find the greatest common divisor, but the latter requires fewer calculation steps and a shorter calculation time estimate.
Sorting, which means rearranging elements according to a certain order, is one of the fundamental problems in computer science. Among them are bubble sort and selection sort, which can be evaluated by time complexity. ""","""We found that it is wise to use Eugrid's Algorithm when finding the greatest common divisor, which can be supported by calculation steps and calculation time estimates. We also found that sorting is important in information science. Do you get it.""","""I didn't quite understand the need to indicate an order.""","""Nothing in particular""","""I learned a lot about Eugrid's algorithm of division and sorting. Order notation was difficult, so I want to review it.""",-1
C-2021-2_U140,"""Algorithm using the Euclidean algorithm. Bubble sort means sorting in ascending order. Selection sort means swapping the largest element with the last element. Order notation for thinking in terms of much larger numbers.""","""Method of Euclidean Algorithm. Meaning of bubble sort and selection sort.""","""I didn't understand why it's better to use an upper bound for order evaluation.""","""Nothing in particular.""","""It was a meaningful lecture because I was able to understand why the Euclidean method of mutual division, which I learned in high school, holds true.""",-3
C-2021-2_U141,"""Algorithm examples and applications, introduction of sorting problems (bubble sort, heap sort), calculation method, computational complexity and definition of binary tree were introduced.""","""Judge good and bad algorithms from the significance of algorithms and their efficiency. I understood the types and methods of sorting and how to use binary trees.""","""You can understand what you're doing in mathematical terms, but it's hard to understand when it comes to programming terms.""","""Nothing in particular.""","""There were more things I didn't understand in this class than before, so I spent a lot of time reviewing them. I felt that how to use the binary tree was a little different from the previous coin-dividing problem, so it took me a while to understand, but it was fun. It's just.""",-1
C-2021-2_U142,"""Sorting is the process of arranging n items in a certain order, and this is one of the most basic problems in computer science. There are several types of sorting algorithms. Bubble sorting is based on the size of adjacent elements. The idea is to sort while comparing .Also, selection sort is the idea of ​​finding the largest element and replacing it with the last element.In these two, the number of times the elements are compared is always n(n- 1)/2 times, and the number of updates of the maximum value is at most n(n-1)/2 times, but the number of exchanges of elements is different.
Calculations take more time when the input is large, so it is better to consider the upper bound of the function when the input is large. This is where order notation comes into play. The order notation allows us to consider the upper bound of a function, and the complexity of an algorithm is often thought of in the order notation. ""","""I was able to understand the concept of bubble sort and selection sort, and the sorting of numbers as a specific example.""","""I understood the reasoning that it is better to consider the upper bound of the function when the input is large when calculating, but I didn't quite understand the order notation.""",,"""The talk about calculation is gradually becoming more serious, and there are parts that I can't understand just by listening to the lectures, so I decided to do the preparation that I haven't been able to do recently.""",-1
C-2021-2_U143,,,,,"""I couldn't understand the concept of order notation, so I would like to read the slides again and try to work on the problems that were given. It would be great if you could explain it again.""",-2
C-2021-2_U144,,,"""I couldn't understand the worst case calculations and proof problems by myself. I was able to understand it somehow after asking my friends.""",,,0
C-2021-2_U145,"""About bubble sort and selection sort""","""Basic idea of ​​bubble sort and selection sort
Bubble sort compares the size of adjacent elements and arranges them, while selection sort finds the largest element and replaces it with the last element. """,,,"""I had a poor understanding of heapsort touches.
I understand the order notation. """,0
C-2021-2_U146,,"""Alignment using two types is now possible""","""I didn't understand the order part""",,"""I started to dislike it when the elements of mathematics became strong, but I decided to review and deepen my understanding.""",0
C-2021-2_U147,"""Using the Euclidean Algorithm will shorten the calculation time. Today we learned about bubble sort and heap sort among the sorting algorithms. Bubble sort compares the size of adjacent elements and arranges them. Heapsort uses a binary tree to sort.""","""I was able to learn about sorting algorithms. There are so many things I don't know, so I will review them thoroughly.""",,,"""There are so many different algorithms that you may not be able to memorize them. I found them difficult.""",-2
C-2021-2_U148,"""Sorting is the act of rearranging items according to a certain rule, and it basically means sorting them in ascending order. Bubble sorting is a method of sorting items in ascending order by comparing adjacent items and replacing them if the number is large. Also called maximum sorting. Selection sort is a method of repeating the operation of searching for an element of and replacing it with the last element. To estimate the behavior for long operations, ""","""I figured out how to do two sorts.""","""What is an order?""",,"""I didn't really understand the order notation at the end, so I want to review it thoroughly.""",-1
C-2021-2_U149,"""The number of calculation steps is the number of times a series of operations (algorithm) has been repeated, and the smaller the number, the smaller the number of operations executed.
Sorting is an important operation when using a personal computer. """,,,,,-1
C-2021-2_U151,"""I mainly learned exchange type bubble sort and selection sort among typical sorting algorithms. In the algorithm, if the input is large, it will take time. Second, consider the upper bound of the function when the input is large. This is the order notation.""",,"""There are various ways to express order notation, but I felt it was a little difficult to decide which one was the most desirable.""",,,-3
C-2021-2_U152,,"""I understand about order notation.""",,,,-1
C-2021-2_U153,"""I learned about Euclidean algorithm using rectangles, bubble sort, selection sort, sort using binary tree, time complexity, order notation, etc.""","""I learned the concept of Euclidean mutual division using rectangles in high school, so I was able to easily understand it. I also learned about bubble sort, selection sort, and sort using binary trees by referring to examples. I was able to understand the time complexity and the order notation by confirming the role of the order notation and solving the exercises.""",,,"""I learned about Euclid's Algorithm as revenge in high school. I think I was able to understand the content of each sort. I think I will learn about other sorts next time, so I prepared well. I want to.""",-3
C-2021-2_U154,,,,"""Nothing in particular.""","""I forgot to practice for the quiz, and it was a pity that I didn't get a perfect score on the quiz. From next time onwards, I will make a habit of reviewing the quiz after class so that I can do my best to get a perfect score. Next time, I'd like to prepare for the next class so that I can properly understand the concept of heapsort.""",-1
C-2021-2_U156,"""represents the greatest common divisor""","""can represent the greatest common divisor""","""Bubble Sort/Selection Sort""","""Please explain again the difference between bubble sort and selection sort""","""Thank you for your lecture""",-3
C-2021-2_U157,,"""I had studied Euclid's algorithm in mathematics, so I understood it easily. I learned that there are several variations in the comparison method for sorting problems. When evaluating the performance of an algorithm, the length of the input It made a lot of sense to think about what would take the most time in.""",,"""Regarding the order notation, do you understand that the highest degree of the worst complexity is related to the order?""",,-2
C-2021-2_U158,"""Sorting types and calculation methods""","""For sorting, the sort that should be used changes depending on the element""","""How to calculate the order method""",,"""There are some things I didn't understand in this class alone, so I want to review them properly.""",-1
C-2021-2_U159,"""A high-level overview of sorting""","""A rough overview of sorting, specific examples, and how to use it""",,,"""I wouldn't know anything without specific examples""",-1
C-2021-2_U16,,,"""I understood the meaning of the order notation itself, but I felt that I was stuck in the calculation because I had to find the formula of what I wanted to find as a sequence of numbers.""","""Can the order notation be T(n) < O(n)?
I thought that T(n) ≤ O(n) is not necessarily true when there is an intersection in the negative part of the horizontal axis of the graph, because it does not overlap in the positive part of the horizontal axis. ""","""I was surprised to learn that by using Euclid's method of mutual division, it is possible to reduce the computation time of 1 quintillion and tens of powers of 10 by an order of magnitude.
I don't know how fast 10 to the power of 10 is, but I felt that the reason why things in units of years are so fast is because the algorithm is used well.
""",-2
C-2021-2_U160,"""The smaller the number of calculation steps, the shorter the execution time of the algorithm. Therefore, it is important to think about how to finish with as few calculation steps as possible.""","""I understand what a smart algorithm is. Sort Sort
Bubble sort Arrange while comparing the size of adjacent elements
Computational complexity of bubble sort The number of comparisons when the length of the sequence is n, always n(n-1)/2
number of exchanges, at most n(n-1)/2
selection sort Find the largest element and swap it with the last element
Computational complexity of selection sort Let the length of the sequence be n
number of comparisons, always n(n-1)/2
The number of updates of the maximum value, at most n(n-1)/2
number of element exchanges, at most n-1
Heapsort comparison count
not more than 3nlog2n""","""I forgot what Euclid's Algorithm is.
Order Evaluation""",,"""I was surprised that Euclid's algorithm was used for such a thing.""",-3
C-2021-2_U161,,"""We found that the number of comparisons of elements, the number of updates of maxima, and the number of updates of elements can be used to estimate the time complexity.""",,,"""The order notation was difficult and I didn't understand it very well.""",-1
C-2021-2_U162,,,"""I didn't understand what the explanation for Euclid's Algorithm was doing.""","""What do you want to do with Euclid's Algorithm?""",,-2
C-2021-2_U163,"""Bubble sort: compare two adjacent ones from either one, repeat sorting and sort
Selection sort: find the maximum value and align it repeatedly
""","""Understanding Two Sorting Mechanisms""","""What is Order Notation?""",,"""The order notation was very difficult
""",-1
C-2021-2_U164,,,"""Why heapsort is O(nlogn)""",,"""It was a bit difficult. It will take some time to fully understand.""",-2
C-2021-2_U167,"""・ How to find the greatest common divisor (linear function)
・How to find the greatest common divisor (rectangle)
・Bubble sort
・Selective sort
・Order notation
・Binary Tree Sorting""","""The method of creating a square in a rectangle has fewer calculation steps than a linear function, and Euclid's method of division is a formula based on that idea.
・Bubble sort, selection sort ・Definition and drawbacks of binary tree sorting
""","""I have a vague understanding of the order notation, but I have no idea about the content of the report assignment. I didn't want it to be a report.""","""・Contents of report assignment""","""It seems surprising to humans that the method of creating a square within a rectangle has fewer calculation steps than the linear function, but I was convinced by the explanation. The amount of calculations has become ridiculously large, so if there is a practice problem, please show me how to solve the example problem.""",-2
C-2021-2_U169,"""An example of a clever algorithm is Ugrid's Algorithm. When there is a certain number of items, sorting them according to a certain order is called sorting. This time, bubble sort, selection sort, and heap sort""","""Bubble sort sorts by comparing the size of adjacent elements, and selection sort finds the largest element and replaces it with the last element. The binary tree is constructed so that it is always a heap. is a heapsort.""","""I wanted Heapsort to do some more exercise.""",,,-1
C-2021-2_U17,"""Computation time evaluation (greatest common divisor, division principle → each solution, Euclidean mutual division method)
Bubble sort (sorting problem, etc.), selection sort, time complexity
Heapsort (introduction only)""","""I was able to understand the theorem and concept of the Euclidean mutual division method.
I understood how to rearrange each number in the number sequence in order for bubble sort and selection sort. ""","""I didn't really understand the time complexity of bubble sort, and I tried to review the assignment report and think about it on my own, but I didn't really understand it.""","""I would like you to explain slowly again about ""algorithm and computational complexity"". ""","""As soon as I entered 'algorithm and computational complexity' in the explanation of sorting, it suddenly became difficult, so I couldn't keep up at all. Considering that computers are made to be able to do this kind of thing quickly, I thought that computers were really amazing. I once again felt that I had to treat it with care. """,-1
C-2021-2_U170,"""There are two types of computational methods: the physical approach, in which phenomena are made into laws based on observations, and the laws are immediately discarded when precedents are discovered, and the cs-like approach, which formalizes and solves computational problems of functions. Humans are machines."" It is also called an algorithm to question the calculation by modifying the",,"""Think about algorithms.""",,,-2
C-2021-2_U171,,"""I found the order notation to be the best way to calculate the complexity of algorithms.""",,,"""The content of this lesson, especially the order notation, seemed to me to be completely unillustrated, so I would like to review it more carefully than usual.""",-3
C-2021-2_U174,"""Let's see concrete examples of some algorithms.""",,,,"""It was refreshing and interesting to learn about Euclid's method of division, which is different from what I learned in high school.""",-3
C-2021-2_U18,"""Euclidean method of mutual division is effective for calculating the greatest common divisor. This is the same as dividing rectangles into squares. There are bubble sort and selection sort for arranging numbers in ascending order. Priority is given to the smaller quantity.""","""I understand the meaning of calculations such as Euclidean division and sorting.""","""I'm not sure about order notation.""",,"""There were many things I learned for the first time, such as the order notation, and it was interesting. There are many things I still don't understand, so I want to review them thoroughly.""",-1
C-2021-2_U19,"""The amount of calculation is determined by the calculation method, and the order is set for it.""","""I understood the principles of bubble sort and selection sort.""","""About orders""",,"""Your understanding of orders is ambiguous.""",-2
C-2021-2_U20,"""Significance and usage examples of sorting as an operation.
Learned specifically about bubble sort and selection sort.
In addition, I learned about the method of computational complexity evaluation, and learned the methodology of order notation. """,,,"""9mod6 is 3 (9=6*1+3)? [B-05 Computation time evaluation p.p.11]""","""As always, it's time to improve the fact that we weren't able to try to understand the theorem while moving our hands.""",-2
C-2021-2_U21,"""I learned that Euclid's Algorithm can be used to find the greatest common divisor very quickly. I also learned about sorting, focusing on bubble sort and selection sort.""",,"""I didn't understand the order notation very well.""",,,-3
C-2021-2_U23,,"""How to do bubble sort and selection sort""",,,,-3
C-2021-2_U24,"""Bubble sort and selection sort, content and relation of complexity of sorting algorithms""","""Understanding the Time Complexity of Bubble Sort and Selection Sort""","""Understanding order notation""",,"""I'm so stuck, so I'm going to do a thorough review.""",-2
C-2021-2_U25,"""Algorithm and Euclidean Algorithm, Bubble Sort""","""I was able to understand the legitimacy of Euclid's method of division""","""Understanding Order Notation""",,"""It was nice to see the relationship between algorithms and Euclidean Algorithms.""",-3
C-2021-2_U26,"""The greatest common divisor problem can be shortened by replacing it with the problem of filling rectangles with as large squares as possible. At this time, Euclidean division method is used.
Also, sorting means rearranging given things according to a certain order, and sorting algorithms include bubble sort, heap sort, and merge sort.
We consider the complexity as a function of the length of the input. At this time, the computational complexity can be evaluated by considering the upper bound of the function when the input is large. ""","""I understood that the greatest common divisor problem can be solved relatively easily by using Euclidean division method.
In addition, there are various algorithms for sorting, and it was found that the computational complexity can be evaluated by considering the function of the input length. ""","""Nothing in particular.""","""Nothing in particular.""","""I was able to learn that algorithms that can factorize large numbers at high speed are not known, and that they are used in cryptography. I would like to concentrate on my next class.""",-2
C-2021-2_U27,,,,"""Nothing in particular.""",,-3
C-2021-2_U28,,,,"""Nothing in particular.""",,-1
C-2021-2_U29,"""Eugrid Algorithm""
Number of calculation steps and execution time
bubble sort, selection sort, complexity, order notation (Landau)""","""According to the definition of bubble sort, selection sort and order notation, the time complexity of these is O(n^2) (also proof)""","""I understand what you want to say using Eugrid's mutual division method as an example (temporal evaluation),
I had a little trouble understanding the details.""",,"""Since I had learned python in the previous term, it was easy to talk about algorithms and understand sorting.
I'm looking forward to the next log coming out
""",-3
C-2021-2_U3,"""Bubble sort: Sort by comparing the size of adjacent elements (compare the 1st and 2nd elements and if the order is reversed, replace them, repeat until the end and move the largest element to the end do)
Sorting example: Aggregating golf scores
Computational complexity of bubble sort: Let the length of the sequence to be sorted be n, and estimate the time complexity based on the number of element comparisons and the number of exchanges.
　　　　　　　　　　　　The number of comparisons of elements - ""always"" n(n-1)/2 times (n-1)+(n-2)+ …+1=n(n-1)/2
　　　　　　　　　　　　Number of element exchanges - ""at most"" n(n-1)/2 times
selection sort (find the largest element, replace it with the last urea, repeat the same operation for the remaining sequences)
Computational complexity of selection sorting: The length of the sequence to be sorted is n, and the time complexity is estimated from the number of comparisons of elements, the number of updates of the maximum value, and the number of exchanges of elements.
　　　　　　　　　　　　Comparison times of elements: ""Always"" n(n-1)/2 times
　　　　　　　　　　(n-1)+(n-2)+…+1=n(n-1)/2 times
　　　　　　　　　　　　Maximum number of updates: ""at most"" n(n-1)/2 times
　　　　　　　　　　　　n+(n-1)+(n-2)+…+1=n(n-1)/2 times
　　　　　　　　　　　Number of element exchanges: ""at most"" n-1 times
Algorithm and computational complexity Time complexity T(a) Sum of time required to execute each procedure for input
　　　　　　　　　　　　The execution order changes depending on the input
　　　　　　　　　　　There is a function that depends on the input
　　　　　　　　　　　It is difficult to consider the computational complexity for each input individually
→ Think of it as a function of the input length n
　T(a)→T(n)
Order evaluation of complexity
Time complexity: Estimated by the number of basic operations such as size comparison, market operation, and assignment
complexity of algorithm = order notation (T(n)=O(f(x)) where function T(n) is of order f(n)
T(n)<=cf(n)
Summary: The time complexity of bubble sort and selection sort is o(n**)


""","""I found that numbers can be arranged in ascending order by bubble sort and selection sort, and that they can be expressed in algorithms using order notation. Although it was a difficult content, I learned about the mechanism of bubble sort and selection sort, and the procedure. I understood clearly.""","""It was difficult to understand the computational mechanism of bubble sort and selection sort. I understood the mechanism, but the characters were quite difficult and confusing.""",,"""It was easy to understand with many concrete examples on the slides.""",-3
C-2021-2_U30,"""The mechanics of each sort and the number of trials required""",,,,,-1
C-2021-2_U31,"""It is possible to shorten the calculation time by considering algorithms with fewer steps for various calculations.
An upper bound on the time taken by the algorithm can be evaluated by the order notation.
Arranging data according to a certain order is called sorting, and there are various types such as bubble sort and selection sort. ""","""I was able to understand that Euclid's Algorithm is useful because the calculation time is very short.
I understood the procedures of bubble sort, selection sort, and heap sort, which were picked up in this class, and when comparing them, I was able to understand that heap sort is useful when the input integer is 38 or more. ""","""I didn't quite understand how to find the exact value of the order notation.""",,"""It was interesting to see for the first time the true strength of Euclid's Algorithm, which I learned in high school mathematics.
I felt it was difficult because it required a complicated algorithm to simply rearrange numbers. """,-2
C-2021-2_U33,"""I learned the mechanics of an algorithm for finding the greatest common divisor. Divide the largest possible number of two numbers up to 1. Then, solve the greatest common divisor problem by dividing a rectangle as much as possible.
I learned the idea of ​​​​solving by laying a large square. I also learned how to do bubble sort and selection sort. ""","""I got the idea for the euclid_gcd algorithm. Now I can find the greatest common divisor using Euclid's Algorithm.
In addition, I understood the sorting algorithm and the order notation for estimating the computational complexity when there are many inputs. ""","""It took me a while to understand the proof of Euclid's Algorithm.

""",,"""I had a hard time understanding Euclid's Algorithm, but once I understood it, I found it interesting. I knew that factoring large numbers was particularly difficult, and I was able to realize the power of Euclid's Algorithm. I felt that a small difference could make a big difference in the efficiency of the algorithm.""",-2
C-2021-2_U34,,"""I was able to understand the idea of ​​bubble sort and selection sort.""",,,"""I've done a little bit of the idea of ​​order notation in calculus, so it was relatively easy to understand.""",-1
C-2021-2_U35,,"""Through specific examples of bubble sort and selection sort, I was able to understand how to operate.""",,,,-1
C-2021-2_U36,"""In the greatest common divisor problem, the exhaustive solution method slows down the number of calculation steps, but Euclid's method of division can be used to quickly find the greatest common divisor. Bubble sorting compares the size of adjacent elements. Selection sort is an algorithm that repeatedly finds the largest element and replaces it with the last element.Considering the time complexity as a function of the input length n, We use order notation because we want to determine the upper bound of the function when the input is large.""","""The usefulness of Euclid's Algorithm for Greatest Common Divisor Problems, and an overview of two algorithms, bubble sort and selection sort, are presented, and consideration is given to cases in which the number of exchanges of elements and the sorting procedure is maximized through practically simple problems. We were able to.""","""I didn't quite understand how to determine the specific function that determines the upper limit of T(n) in the order notation.""",,"""I was able to understand the bubble sort and selection sort algorithms well. I don't really understand how to determine n₀ and c in the order notation, so I need to find out by myself.""",-1
C-2021-2_U37,"""Various sorts and their evaluation methods""","""Reason why Euclid's mutual division holds""",,,"""I forgot to write the journal and I don't remember much, so I want to write it as soon as possible next time.""",0
C-2021-2_U38,,,"""Even though I learned about Euclidean Algorithm in high school, I stumbled on the proof.""",,,-2
C-2021-2_U39,"""First, we learned about Euclid's Algorithm. Algorithm is a method of finding the greatest common divisor by subtracting squares from rectangles. The time it takes can be greatly reduced.In addition, when using the Euclidean algorithm, the number of calculation steps is at most Log2N.Also, sorting means sorting, and in this class we will use bubble sort I learned about , selection sort, and heap sort.Bubble sort is a series of integers that are arranged in ascending order, and are arranged by comparing the size relationship of adjacent numbers.Also, this state is how bubbles float on the surface of the water It is similar and is also called bubble sort.In bubble sort, the number of calculations for elements is always n(n-1)/2 times, and the number of element exchanges is at most n(n-1)/2 times. Sorting is a sorting that changes to ascending order by repeating the operation of searching for the largest number in an integer sequence and replacing it with the last number.The number of comparisons of elements in selection sort is always n(n-1)/ 2, the maximum number of updates is n(n-1)/2, and the number of element exchanges is n-1.The time complexity is defined as T(a). is the sum of the times it takes to perform each step for a given input, but as a function of the input length n, not T(a) but T(n), the worst case complexity of the algorithm is Computational complexity.The worst computational complexity is the computational complexity for the input that takes the most time among the inputs of length n.In addition, the order notation is cf over T(n) for any N0 Since the function (n) holds, we write T(n)=O(f(n)).The meaning of the order notation is that as n goes to infinity, the constant can be ignored.For example, Expressing 3n+5 using order notation results in O(n). Such a notation is called order notation.""","""I learned about Euclidean Algorithm Principle, Bubble Sort, and Selection Sort.""","""is not.""","""is not.""",,-1
C-2021-2_U40,"""The method of calculation using Euclid's Algorithm, which is one of the algorithms, is shown in a chart. We also showed the usefulness of euclid_gcd compared to naive_gcd from the viewpoint of calculation time. Among sorting problems, bubble sort and selection sort are useful. The focus was on explanations.Bubble sort is a sorting method that compares the size of adjacent elements, and selection sort is a sorting method that searches for the largest element and replaces it with the last element.These performance evaluations are time-consuming. It can be considered using the order notation from the worst computational complexity.""",,,,,-1
C-2021-2_U41,,"""I didn't understand the problem of sorting using binary trees, but after listening to the lecture and reviewing it later, I understood the rules and drawbacks of the problem. It's well established that using Recombinant Euclidean Algorithm for the rectangular problem greatly reduces the time to find the output, and what bubble sort, selection sort, and the number of exchanges And I understand the difference between when ``at most'' is attached to the number of comparisons and when ``always'' is attached.""","""I didn't quite understand the order notation.""","""When thinking about order notation, is it better to find the upper bound as close as possible?",,-1
C-2021-2_U42,"""Bubble sorting is based on the basic idea of ​​comparing the size of adjacent elements and arranging them, and finally the randomly arranged elements can be rearranged in order of size. Selection sort works on the basic idea of ​​finding the largest element and swapping it with the last element.""","""I was able to consider the computational complexity of the algorithm using the order notation. Also, the time complexity of bubble sort and selection sort is O(n^2).""",,,"""It was very interesting to learn about the sorting and calculation algorithms that computers do.""",-1
C-2021-2_U43,"""I picked up Euclid's algorithm. There are exhaustive methods and Euclid's algorithms for solving the greatest common divisor problem. The number of calculation steps is the number of basic operations performed until the algorithm finishes. , which is at most 2n for the exhaustive method, and at most 2log2n for the Euclidean algorithm, which is much faster.
When n items are given, rearranging them according to a certain order is called sorting. The basic idea of ​​bubble sort is to sort by comparing the sizes of adjacent elements, while selection sort finds the largest element and replaces it with the last element. The number of element comparisons in bubble sort is always n(n-1)/2 times, and the number of element exchanges is at most n(n-1)/2 times, whereas the number of element comparisons in selection sort is always n. (n-1)/2 times, the number of exchanges of the maximum value is at most n(n-1)/2 times, and the number of exchanges of elements is at most n-1 times.
Now consider the complexity as a function of the input length n. Also, for a function T(n), ``T(n) is of the order of f(n)'' means that there exist certain positive constants c and n0, and for any n>n0, T(n)<cf(n). ) holds, and this is called the order notation. ""","""I was able to understand the usefulness of Euclid's algorithm and sorting.""",,,"""The order notation was difficult. I want to review properly.""",-1
C-2021-2_U44,,"""From the idea of ​​rectangles, I could understand why Euclid's method of division is such a calculation method.""","""I'm not sure how finding the worst-case complexity is useful.""",,"""I was surprised to find that even if I used a computer to calculate it, it would take an enormous amount of time when the number of inputs was extremely large. I understood the importance of algorithms.""",-1
C-2021-2_U46,"""Bubble sort: Sort by comparison of size one by one
Selection Sort: Find the largest element and sort it in order.""","""I learned how to programmatically sort""",,,"""It was interesting to learn a sorting method that can handle any number sequence in a program that is difficult to adapt to.""",-3
C-2021-2_U47,"""Algorithms come in many varieties.
Decrease the number of computational steps to shorten the execution time of the algorithm. ""","""The Eugrid Algorithm and factorization, which we have touched on so far, are also algorithms.""","""It was difficult to get an image of Heapsort at first, but I feel like I've gradually come to understand it.""",,"""My previous knowledge was combined with a new and different perspective, and a new way of thinking was born.""",-3
C-2021-2_U48,"""Using Euclid's Algorithm to find the greatest common divisor is more efficient and quicker to find than brute force. Bubble sorting compares the numbers in a series of numbers next to each other. By sorting the numbers in ascending order, selection sort finds the largest element and replaces the last number with it to sort the numbers.Bubble sort and selection sort are slightly different.The computational complexity of the algorithm is Determined by the length of the input. Since I want to know the worst case computational complexity, I don't care about relatively short inputs.The computational complexity of the algorithm is considered in order notation.You can also sort with a binary tree.""","""I found that using Euclid's Algorithm can find the greatest common divisor very efficiently and quickly. Using bubble sort and selection sort, I found that numbers in a sequence can be arranged in ascending order. It turns out that you can also use rooted trees to sort them.""",,,,-3
C-2021-2_U5,"""There are many algorithms that can solve a problem, but the time required for them varies greatly. A good algorithm is one that can handle even the scale of the problem you want to solve grows.""","""I was able to understand the mechanism of bubble sort and selection sort.""","""I don't really understand the mathematical reason why we can ignore the coefficients and terms of T(n) in the complexity order part. Is it related to the limit?""",,"""The name alone sounds difficult, but I'm glad I was able to understand the mechanism of bubble sort/selection sort and the basic concept of order notation.""",-3
C-2021-2_U50,,,"""fine.""",,,-3
C-2021-2_U51,"""Learn about bubble sort""","""I understood how bubble sort works""","""I didn't quite understand the content of selection sort""",,"""There was something I didn't understand well, so I want to review it properly.
""",-2
C-2021-2_U53,"""I learned a lot this time, bubble sort, selection sort, heap sort, order notation, time complexity, etc.""","""I didn't really understand the order of bubble sort and selection sort, but after looking it up myself, I was finally able to understand it.""","""Nothing in particular.""",,"""Today's class was very difficult because I used my head all the time, but I managed to keep up.
I was satisfied with the PDF version of the assignment given this time and forgot to submit it, so if it is possible to submit it later, I would like to submit it. """,-3
C-2021-2_U54,"""In the greatest common divisor problem, use the modulus (mod). In the sorting problem, arrange in ascending order. The number of element comparisons is always n(n-1)/2, and the number of exchanges is at most n(n-1). /2. If you use a binary tree, the number of times depends on how it is arranged.""",,,,"""I made a mistake in the quiz for the first time today and it was very frustrating, so next time I will review it thoroughly before I face it. Expressing Eugrid's mutual division method with origami was easy to understand.""",-1
C-2021-2_U55,"""One of the algorithms is the Euclidean mutual division method. Sorting is sorting, sorting from small to large values ​​in ascending order, and from large to small values ​​in descending order. Bubble sort compares the size of adjacent elements. Selection sorting finds the largest element and swaps the last element with it. The time complexity considers the most expensive upper bound.""","""I was able to learn more about algorithms such as Euclidean mutual division, bubble sort, and selection sort.""","""I was able to understand it in class.""",,"""At first glance, it seems like you're dealing with something that seems difficult, but when you think about it, you'll understand what I mean.""",-1
C-2021-2_U56,"""The number of calculation steps is the number of basic operations performed before the algorithm finishes. The fewer the number of calculation steps, the shorter the execution time of the algorithm. In the greatest common divisor problem, mod is considered to be the basic operation. The greatest common denominator It can be speeded up by replacing the number problem with the problem of filling rectangles with as large squares as possible. Such an algorithm is called Euclidean division method. When n=min(x,y), the number of calculation steps of Euclid's algorithm is at most log₂n. Using Euclidean division, gcd(x,y) can be obtained very quickly. Bubble sort is to sort by comparing the size of adjacent elements. In the computational complexity of bubble sort, when the length of the sequence to be sorted is n and the time complexity is estimated by the number of element comparisons and the number of exchanges, the number of element comparisons is always n(n-1)/2 times, and the element is exchanged at most n(n-1)/2 times. Selection sort finds the largest element and replaces it with the last element. In terms of computational complexity of selection sort, like bubble sort, the number of element comparisons is always n(n-1)/2 times, and the maximum number of updates is n(n-1)/2 times. , the number of element exchanges is at most n-1. The worst-case complexity is the complexity for length n fields, the most time-consuming input. Consider the upper bound of the function when the input is large. We say that T(n) is of the order of f(n) if there exists a certain positive constant c,n₀ and T(n)<=cf(n) for any n>n₀. Then write T(n)=O(f(n)). A disadvantage of naive sorting using binary trees is that the computation time varies depending on how the input sequence is arranged. A binary tree with n nodes and height h is called a heap if it satisfies the following two conditions. 1, Exactly 2^d nodes of depth d (0<=d<=h-1) exist, and nodes of depth h exist in order from the left. 2, The value of the node is also less than or equal to the value stored in its parent. When the input sequence size is n, the number of heapsort comparisons does not exceed 3nlog₂n. ""","""I learned how to estimate the time complexity by Euclidean algorithm, bubble sort, and heap sort.""","""I'm not used to calculating yet, so when it comes to actual calculations, I can't solve without looking at the materials. Also, there was too much knowledge and there were parts that I couldn't handle.""","""Nothing in particular""",,-2
C-2021-2_U57,"""Smart algorithms have a common method, one of which is Euclid's Algorithm, which tries to find the optimal solution by making full use of division. In addition, there are algorithms called bubble sort and heap sort for sorting problems. learned it.Bubble sort sorts by comparing the size of adjacent elements, and heap sort constructs a binary tree.""","""By looking into clever algorithms, I was able to intuitively understand that formulas that are used to some extent are classified. Among them, using mods is widely used and easy to understand. It turned out to be a (easy to use) method.""","""It was difficult to understand the validity of Euclid's method of division, but I was able to understand it somewhat by using concrete numbers and trying to understand it mathematically.""",,"""I felt that the mathematics I learned in high school has become closer. However, the theorems and definitions have become difficult, so I want to prepare and review properly so that I won't be left behind in class.""",-2
C-2021-2_U58,"""When you want to find the greatest common divisor, it takes a huge amount of time to keep calculating until you find a number where both remainders are 0.
Therefore, the greatest common divisor of a large number can be obtained overwhelmingly quickly by using the Euclidean division method.
Also, rearranging some numbers according to a certain order is called sorting.
There are bubble sorting, which continuously compares the size of adjacent numbers and rearranges them, and selection sorting, which extracts one number and compares it with other numbers. ""","""I was able to grasp the image of Euclid's algorithm of division.
I found the definition of sort. ""","""The instructions regarding the order were confusing.""",,"""It's difficult for grammar.
""",-1
C-2021-2_U59,,"""I was able to understand the concept of using mods to some extent.""","""I didn't understand the amount of computation in bubble sort.""","""Nothing in particular.""",,-2
C-2021-2_U6,"""When calculating the greatest common divisor, the number of calculation steps increases, so it is necessary to think of a clever algorithm. In the case of the greatest common divisor, think of dividing rectangles into squares. This is similar to Euclid's division method. It can be used for fast calculations.
Algorithms include sorting that aligns numbers, and there are various types of sorting. Bubble sort compares the size of adjacent numbers and sorts them. ""","""It turns out that using the Euclid's algorithm is the fastest way to calculate.
There is something called sorting, and it turns out that there are various methods within it. ""","""I didn't quite understand why I thought of dividing rectangles into squares, and how that could lead to Euclid's algorithm of division.""",,"""There were some parts that I couldn't understand because I didn't prepare well. Also, there were some parts that I couldn't concentrate on in class this time, so I want to try not to lose my concentration.""",-2
C-2021-2_U60,"""When finding the greatest common divisor gcd(x,y) of two integers x,y, the division principle (for natural numbers x,y, there exists only one integer z,r that satisfies y=zx+r and 0≤r<x). do), rather than using
The number of calculation steps (the number of basic calculations performed until the algorithm ends) is smaller when using Euclidean mutual division (the number of calculation steps for the former and the latter is at most 2n, and at most 2logn, so it holds from n > 0 )
Arranging some elements according to ""a certain order"" is called sorting (ascending order unless otherwise specified).
In particular, arranging by comparing the sizes of adjacent elements is called bubble sorting, and searching for the largest element and arranging by comparing it with the last element is called selection sorting.
When n elements are used, the computational complexity of the former is at most n(n-1), and the computational complexity of the latter is at most (n+1)(n-1).
Also, for the function T(n), when T(n)≦cf(n)(n>n₀) (c,n₀ are positive constants), T(n) is of the order of f(n) Say there is, and write T(n)=O(f(n)).
This shows that the computational complexity of bubble sort and selection sort is on the order of n². ""","""Proof of Euclidean Algorithm, Methods of Bubble Sort and Selection Sort""","""The reason why the complexity of bubble sort and selection sort is on the order of n²""",,"""Because I forgot the existence of BR-Map, I would like to check this site frequently and try to confirm the content of the assignment one by one.""",0
C-2021-2_U61,"""A method of sorting that reduces computation time with an efficient algorithm""","""By devising the calculation method, the time required for it can be dramatically shortened.""",,,"""I thought there are many ways to sort.""",-1
C-2021-2_U64,"""There are many kinds of sorting algorithms, and I learned how to do each one. I learned about the relationship between algorithms and complexity, and about order notation for complexity. I also learned what a binary tree is and how it works. I learned about features and about heapsort.""","""Sorting is one of the most fundamental problems in computer science, and it turns out to be about arranging n items in some order when they are arranged. In addition, we found that sorting algorithms include exchange type, divide-and-conquer type, and selection type. I also learned how to do each sorting algorithm. I was able to understand how to read a binary tree. ""","""I had a hard time understanding heapsort, and I couldn't solve the heapsort problem.""","""Nothing in particular.""","""There are various kinds of sorting algorithms, and I felt that it was difficult because each one has a different method. Also, I couldn't solve the exercises, so I would like to review them again so that I can solve them.""",-2
C-2021-2_U65,"""Sorting = sorting
Ascending = Smallest to Largest
Bubble sort = Sort by comparing the size of adjacent elements
Bubble sort complexity
Comparison rank is always: n(n-1)/2

selection sort = find the largest element and swap it with the last element
Element comparison rank is always n(n-1)/2
The number of element exchanges is always n-1

Time complexity = total time required to perform each procedure on the input
→ Think of it as a function of input length n

〇Worst calculation amount
Computational complexity for the most time-consuming input of length n

〇 Order notation
For a function T(n) ""T(n) is of the order of f(n)"" = there exists some positive constant c,n0 and for any n > n0 T(n) ≤ cf(n ) holds

At this time, write T(n)=O(f(n))


""","""About sorting.""","""Order notation was difficult""",,"""I found it interesting that the sorting that I was doing in programming in the previous term was like this. The order notation is difficult. I want to practice.""",-1
C-2021-2_U66,"""Considering the principle of division in the greatest common divisor problem and Euclid's mutual division method in terms of the number of calculation steps and calculation time. The concept of bubble sort and selection sort. Algorithms and computational complexity.""","""I was able to understand Euclid's method of mutual division, bubble sort, and selection sort.""","""Algorithms and computational complexity (particularly how to express order notation) are incomplete combustion.""",,"""I was able to understand the problem of counterfeit coins that are not heavy or light from the opening page. Also, I was able to easily understand the story of Euclid's algorithm in the first half, but the bubble sort and selection in the second half were easy to understand. I felt that sorting and order notation were a little difficult. I haven't fully understood the order notation yet, so I'll review it.""",-2
C-2021-2_U67,"""The content of this time was a continuation of the last time, and it was an algorithm using the Euclidean mutual division method. The method used there was an exhaustive solution. Also, the number of calculations until the end of the algorithm is called a calculation step, and it is short. The algorithm time is shortened as much as Algorithms include selection sort and bubble sort, which are exchangeable types, and heap sort, which is a means using a binary tree and has two conditions. It was made with.""",,,,,-1
C-2021-2_U68,"""In an algorithm to find the greatest common divisor of two integers, an algorithm using Euclid's algorithm is more suitable than a method of factoring each of the two integers. This is because it is difficult to create an algorithm for sorting numbers by size.There are two ways to arrange binary trees, one for heapsorting and the other for heapsorting, but the function of time required for calculation differs depending on the number of numbers. , it is better to choose the method that is suitable for the number of numbers.""","""We found that the Euclidean algorithm can be used to factorize primes with a simple algorithm.""","""Nothing in particular.""","""Nothing in particular.""","""It was interesting to understand the idea of ​​binary trees for arranging numbers. It is easy for humans to rearrange numbers, but I realized that a strict algorithm must be given to a computer to process it. .""",-3
C-2021-2_U69,,,,,"""In this lecture, there were many things that I didn't fully understand, so I decided to review the lecture materials again and review them.""",-1
C-2021-2_U70,"""The main content of today's lecture is sorting data. Perform the operation of comparing the size of adjacent numbers from left to right, then repeat the operation again from left to right n-1 times, and complete by repeating this n(n-1)/2 times. is to organize the elements so that the tree is in the state of a heap when sorting by a binary tree.""","""What I learned from today's content is that there are various methods for sorting data, not just the methods we have known so far.""","""It took me a while to understand the definition of order notation.""",,"""The main theme of this class was about sorting data, but in a programming class I took in the past, I used the bubble sort method for sorting. Can I write a program using the heap sort method I learned this time?"" Please try it.""",-1
C-2021-2_U71,"""Represents the greatest common divisor.""","""Represents the greatest common divisor.""",,,"""Thank you for your lecture.""",-1
C-2021-2_U72,"""As a means to solve the greatest common divisor problem, there is an exhaustive method. Divide the smaller of the two characters as k and check if the remainders are equal. If the remainders are not equal, replace k with Change to k-1 and divide in the same way.This is continued until the remainder is equal.In addition, this series of flows is called the number of calculation steps.The smaller this is, the shorter the execution time.A maximum of 2k times This algorithm is slow.Try to think about this problem as [filling a rectangle with as large squares as possible].Let x and y be the lengths of the sides of the rectangle.Y is larger.r= As y(mod x), check whether r is 0. If it is not 0, replace y with x and x with r and repeat until r = 0. (Euclidean division method) This correctness x and r are divisible by their greatest common divisors, and y-r is divisible by x, so the greatest common divisor of x and y is greater, where x=gcd(x,y)*a, y=gcd (x,y)+b, y-zx=gcd(x,y)*(b-za)=r, r is divisible by gcd(x,y), so the gcd of x and r is Large.In order for these two to be compatible, it is premised that gcd(x,y)=gcd(x,r).The maximum number of calculation steps for Euclid's algorithm is 2log2n.This algorithm is finish early.
Assuming that there are n items, rearranging according to a certain rule is called sorting. In the case of only sorting, it is arranged in ascending order. Permute the sequence a[a1~an] of length n to a'[ai1~ain]. Bubble sort basically compares and organizes adjacent characters. Start from the left end, go to the right end, return to the left end, and repeat. This is done until sorting is completed. If the length of the sequence to be sorted is n, the number of element comparisons is always n(n-1)/2. The maximum number of element exchanges is n(n-1)/2. Selection sort swaps the largest element with the rightmost element. The computational complexity of this sort is equal to that of the bubble sort in terms of the number of element comparisons and element exchanges, where n is the length of the sequence. Also, the maximum number of updates is n(n-1)/2 times. Let the time complexity function be T(n) for sequence length n. Here, the worst computational complexity is the computational complexity that takes the most time in plots of length n. We say that T(n) is of order f(n) for a function T(n) if there exists some positive integers c,n0 and for any n,n0 cf(n) is T(n) means greater than At this time, it is written as T(n)=O(f(n)). The computational complexity of the algorithm is considered in order notation. ""","""I understand most of it.""","""I don't fully understand the order notation.""",,,-2
C-2021-2_U73,,"""Algorithms for finding ascending order in various ways have been found. Worst-case complexity notation.""","""Algorithms using binary trees""",,"""It was a little complicated, so I'd like to review it and clarify what I don't understand, and try not to miss anything as much as possible.""",-3
C-2021-2_U74,"""About bubble sort, selection sort, and calculation steps.""","""I learned about bubble sort and selection sort.""",,,,-2
C-2021-2_U75,"""The number of basic operations performed until the end of an algorithm is called the number of calculation steps. Methods for finding the greatest common divisor include factorization and Euclidean mutual division. Sorting means rearranging n items in a certain order. It is called, and there are types such as bubble sort and selection sort.The total time required to execute each procedure when inputting is called the time complexity, and the computational complexity varies depending on the input procedure.The most time consuming The computational complexity for the input is called the worst computational complexity.The order notation is used to find the upper limit of the function when the input is large.The computational complexity of the algorithm can be considered in the order notation.""","""I was able to understand sorting types and procedures. I was also able to understand the order notation and what it is used for.
""","""The order notation was a little difficult to understand and explain.""",,"""I was able to understand what sorting was like. The content of the order notation was difficult, so I would like to review it again.""",-2
C-2021-2_U76,"""Sorting is the act of rearranging items in a certain order when multiple items are given. Also, when calculating an algorithm, it is good to consider the upper bound of the function when the input is large.""","""I understood the bubble sort method and the order notation well.""","""I was curious about how bubble sort and selection sort are used differently.""",,"""As the lessons progressed, the contents became deeper and more difficult, so I wanted to do my best to review them.""",0
C-2021-2_U78,"""I learned about bubble sort, selection sort.""","""I learned that there are many types of sorting, their advantages and disadvantages.""","""It was difficult to prove the complexity of bubble sort.""",,"""I learned a lot and had fun.""",-3
C-2021-2_U79,"""I learned about the sorting problem, what the sorting problem is, and how to calculate the value of time complexity when the length of the number sequence to be sorted is n. I also learned about heap sorting.""","""I understood how to evaluate the time complexity of selection sort and bubble sort.""","""Heapsort is not well understood yet.""",,,-1
C-2021-2_U8,"""Consider the problem of finding the greatest common divisor. At this time, the principle of division can be said that there exists only one integer z and r that satisfies y = zy + r and 0 <= r < x for positive integers x and y. The problem of finding the greatest common divisor , there is an exhaustive solution method in which the numbers are reduced one by one, but this method is not efficient because the number of calculation steps increases as the number of integer digits increases. There is something to think about by replacing the common divisor problem with ""the problem of filling rectangles with as large squares as possible"". This is called Euclidean mutual division. By using Euclid's method of mutual division, when the calculation step is n=min(x,y), the calculation will be at most 2log2n and the calculation will end in Shuji.
When several items are given, rearranging them according to a certain order is called sorting. Typical sorting algorithms include exchange type, divide-and-conquer type, and selection type. Bubble sort, which is classified as an exchange type, is a method of sorting while comparing the size of adjacent elements. In this method, in a sequence of length n, the number of comparisons of elements is always n(n-1)/2 times, and the number of exchanges is at most n(n-1)/2 times. Another sort included in the exchange type is the selection sort. Selection sort finds the largest element and replaces it with the last element. At this time, the number of element comparisons is always n(n-1)/2, the number of updates is at most n(n-1)/2, and the number of exchanges is at most n-1. The complexity is considered as a function of the input length n. Among them, the calculation amount for the input that takes the longest time is called the worst calculation amount. The order notation is used when considering the upper bound of the function when the input is large.
A rooted tree in which each node has at most two children is called a binary tree. There is also a sort using a binary tree, and the completed binary tree uses the multiplication order by reading the node values ​​in the order (left child, self, right child). Disadvantages include that the calculation time varies depending on how the input sequence is arranged, and that in the worst case, if the input size is n, the number of comparisons will be n(n-1)/2. ""","""Bubble sort and selection sort were relatively easy to understand, and I was able to solve the practice problems without any problems. I also understood why the amount of computation for each was so.""","""I had a hard time understanding the order notation. I still can't say that I fully understand it, so I'd like to be able to explain it in my own words by the next class.""","""・I would like to know when bubble sort and selection sort are used.
・Does T(n) used in the order notation mean the worst case complexity?
・Why is n>5 in example 1 of order notation? I thought n≧5 (from 3*5+5=4*5).
""","""The order notation was difficult. I couldn't understand it during class, so I regretted that I had to prepare more thoroughly from the next time.""",-3
C-2021-2_U80,"""There was an explanation about Euclid's Algorithm, bubble sort, selection sort, time complexity, and order notation.""","""I was able to understand what bubble sort and selection sort are, and their time complexity and order. I was also able to deepen my understanding of Euclid's Algorithm.""","""I'm worried if my understanding of the order is really correct.""","""Nothing in particular.""","""I learned a little about sorting in the first semester's lecture, and it was interesting because it introduced a lot of knowledge that I hadn't come across at that time.Also, through algorithms, I was able to come into contact with ways of thinking that I would never have thought of on my own. is also interesting.""",-1
C-2021-2_U81,"""It is an important factor in computing computation time evaluation, and is closely related to the properties of integers.
""","""Algorithms have good ones and bad ones.""",,,"""It's too deep. I realized that computers are inextricably linked to mathematics.""",0
C-2021-2_U85,"""I learned about bubblesort and heapsort.""","""When n items are given, rearranging them according to a certain order is called sorting. Bubble sorting is an exchange type, heap sorting is a selection type. Bubble sorting determines the size of adjacent elements. The idea is to align while comparing.If you repeat this to the end, the largest element will be moved to the end.Selective sorting is the idea of ​​finding the largest element and replacing it with the last element. The time complexity is the sum of the times it takes to perform each step for input a. The worst-case complexity is the complexity for the most time-consuming input. In general, the larger the input, the more time it takes.""","""Overall it was difficult. I'll do my best to calculate.""",,"""It was difficult, but I did my best and followed the class.""",-3
C-2021-2_U86,"""You can get the complexity by looking at it as a function of the input length n.""","""I understand how bubble sort, selection sort, and heap sort work.""","""I didn't understand the order notation very well""",,"""Since there are more difficult parts to understand, I decided to prepare and review properly.""",-2
C-2021-2_U88,"""This time, I learned about bubble sort and selection sort, how to calculate their computational complexity, and order notation.""","""I understood the unit called the amount of computation that can be used to measure the time required for computation on a computer. The calculation method was not a special function, but a general expression for the sum of a sequence. I found something like that.""","""I know what order notation is, but I still don't know what the benefits of using it are.""",,"""I want to improve because my review has become slower than ever.""",-3
C-2021-2_U89,"""Exhaustive release requires a large number of calculation steps and a huge amount of calculation time. Therefore, it is important to find a smart algorithm. An algorithm that compares the size of adjacent elements and arranges them is called bubble sort. , the number of element comparisons is always n(n-1)/2.Selection sort is a sort that brings the largest element to the end, and the number of comparisons is the same as bubble sort.The order notation is , used to consider the upper bound of the function when the input is large.""","""When calculating large numbers of digits, we found that even a slight difference in algorithm can make a big difference in calculation time.""","""I didn't understand the part of the graphical proof of Euclid's algorithm.""",,"""I was impressed by the method of converting the problem of the greatest common divisor into the problem of laying squares on rectangles. At this stage, intelligent algorithms can only be thought by humans, so when programming, etc. I felt that I had to have a flexible mindset.""",-2
C-2021-2_U9,,,,"""Nothing in particular.""","""The order notation was a little difficult to understand, so I thought I'd review it regularly. I was also surprised to find that there were a wider variety of algorithms for the same sorting problem than I had expected.""",0
C-2021-2_U91,"""Consider the greatest common divisor of x and y. First, consider the exhaustive solution. Let k be min(x,y), r₁ be xmodx, r₂ be ymodx. If r₁ = 0 and r₂ = 0 prints ged(x,y)=k.
The number of calculation steps refers to the basic operations performed until the algorithm ends, and the fewer the calculation steps, the shorter the execution time of the algorithm. The remainder is the basic operation in the greatest common divisor problem. Replacing the greatest common divisor with ``the problem of filling a rectangle with as large squares as possible'', ``For positive integers x and y, when y=zx+r and 0<r<x, gcd(x,y)= gcd(r,x)”. ""","""Calculation of Greatest Common Divisor""",,,,-3
C-2021-2_U92,"""I learned algorithms through Euclidean division method, along with sorting methods such as bubble sort, selection sort, and heap sort, as well as complexity estimation by order notation.""","""We found that bubble sort, selection sort and heap sort have different time complexity.""",,"""I would like to know what methods are available to obtain n0,c.""",,-3
C-2021-2_U93,"""In the problem of finding the greatest common divisor, we compared how the number of calculation steps when considering the remainder as a basic operation differs depending on the solution method.In addition, we also studied Euclid's mutual division method that we learned in high school mathematics. I also learned about sorting concepts and techniques.""","""I learned the meaning of Euclid's Algorithm and that its use requires far fewer computational steps than an exhaustive search for the greatest common divisor.""","""I didn't fully understand the concept of order notation.""","""Nothing in particular.""",,-1
C-2021-2_U95,,"""I understand how the two sorting works.""","""I didn't really understand the calculation time that was my homework.""",,"""I didn't fully understand the calculation time.""",-3
C-2021-2_U96,,,,,"""I contacted you by email, but I was late to see it due to communication issues. Communication was unstable not only on Monday but also on Tuesday, so I checked it on Wednesday morning. Later, a contractor will come to inspect the router. became.

It took me longer than usual to understand a lot of unfamiliar words, but I'm glad I was able to figure it out after thinking about it. """,-3
C-2021-2_U97,"""・About Euclidean Algorithm ・About Bubble Sort ・About Heap Sort""",,"""About orders""",,"""In the past, I had the opportunity to discuss bubble sorting in another lecture, but I think my understanding has deepened significantly since that time. Also, since heap sorting was newly introduced this time, I was able to review it and deepen my understanding. want to go.""",-3
C-2021-2_U99,"""Algorithm mechanism using Euclid's method of division, algorithm mechanism called bubble sort that compares two adjacent elements, algorithm mechanism called selection sort that replaces the largest element and the last element, and heap sort using binary trees. I understand how the algorithm works.""","""By using this algorithm, it became possible to efficiently solve problems such as the greatest common divisor problem (the problem of filling rectangles with as large squares as possible) and rearranging cards with numbers on them. Performance evaluation can now be performed using formulas.""","""I didn't quite understand how to use heapsort.""",,"""There are so many algorithms out there that it's almost confusing me.""",-3
C-2022-1_U10,,,,,"""This time, it was easy to understand and solve the practice problems such as using high school mathematics and sorting.It was very easy to understand because each method such as binary tree and bubble sort was demonstrated one by one on the slide.
In the demonstration, it seems that the calculation time does not change much, but I realized that it is important to actually sort long inputs after calculating which method to use. """,-3
C-2022-1_U11,,,,,"""Euglitt's method of mutual division was known as a mathematical calculation method in high school, but it is said that it is used as an algorithm that can reduce the number of calculation steps in the field of information science by thinking of it as laying squares on a rectangle. It was interesting to see that the Eugrid mutual division method was actually used, although I hadn't felt much practicality until now.""",-3
C-2022-1_U12,"""There are various calculation methods depending on the application.""","""I learned the principles of various calculations.""",,,"""It was difficult to calculate.""",-3
C-2022-1_U13,"""Bubble sorting is a method of arranging elements while comparing the size of adjacent elements.
Selection sort is a method of finding the largest element and swapping that value with the last element.
The time complexity is the amount of time it takes to execute each procedure for an input, and the worst-case complexity is the time complexity for the input that takes the longest time.
If the time complexity is T(n), thinking about a function f(n) that is always smaller than c times a certain function f(n) when n0 or more is considered the upper bound of the function. We say that (n) is of the order of f(n). ""","""Sorting using a binary tree changes the calculation time greatly depending on the input number sequence. This is because every time the numbers were originally arranged in ascending order, it was necessary to compare all the elements already attached to the tree. Using the heap allows for more efficient computation.""",,,"""I didn't understand Eugrid's mutual division method properly until the last time, but I was able to understand it through today's class.
Sorting is used in many situations, and when you look at an example like today, it seems like a very simple task, but in reality there are a huge amount of elements that need to be arranged in an instant. So I felt that it was really important to do it in the most efficient way possible. """,-3
C-2022-1_U14,,,"""I don't know how to determine f(n) in order notation.""",,"""I learned that there are many ways to sort. I learned that Eugrid's mutual division method was very useful. The examples were easy to understand and the content was easy to understand. I'm glad I did.""",-3
C-2022-1_U15,"""There are factorization method and Euclid's Algorithm in calculation algorithms, but the former has not established a high-speed algorithm and the number of calculation steps is at most 2n, so the calculation speed is slow for large numbers, but the latter has the number of calculation steps. is at most 2log2(n), so the calculation ends instantly.Also, there are bubble sort and selection sort in sorting problems, in which bubble sort compares the costs of adjacent elements and sorts them, and in selection sort search for the largest element Swap that with the last element: In evaluating the performance of an algorithm, we want to denote the time complexity, which is the sum of the time it takes to execute each procedure for input a, by T(a), and estimate the behavior for long inputs. Considering the upper bound of the case function, it is called the worst case complexity.For a function T(n), ""T(n) is in the order of f(n)"" means that certain positive constants c and n0 exist. , T(n)<=cf(n) for any n>n0, then write T(n)=O(f(n)). In the ascending order of the sort problem, there is a binary tree, which is simple and easy to understand, but in the worst case the number of comparisons is n(n)/2, but if you add two conditions to the binary tree, it becomes a tree called heap. Times are improved. """,,,,,-3
C-2022-1_U17,"""Introduction and description of various kinds of sorting. Estimate behavior for long inputs.""","""Sorting means rearranging n items according to a certain order. There are various ways of rearranging. I understand binary trees.""",,,,-3
C-2022-1_U19,,"""When the number of input integers is large, we found that heap sort has a smaller number of worst-case comparisons than binary tree sort, and can be processed faster.""","""Since heap sort considers two conditions for sorting, I thought that the processing speed would drop slightly.""",,"""There were many times when I couldn't catch up with understanding just by listening to the completed formulas and results, so I wanted to deepen my understanding by actually working with my hands.""",-3
C-2022-1_U20,,"""Bubble sort requires a huge number of operations depending on the sequence of numbers to be sorted, so it is important to change the method depending on the situation.""",,,"""In today's class, we learned how to sort. I want to actually know the difference between the maximum time and the minimum time by myself, and I also want to remember the formula.""",-3
C-2022-1_U21,"""Unlike factorization, Euclidean division can be computed very quickly. Sorting is one of the most basic computational methods in computer science. It is the ordering of elements in order. Basically. A good idea is to sort by comparing sizes, find the largest element and sort it with the last element, etc. The computational complexity of the algorithm is considered in order notation.""","""I thought the calculation of Euclid's Algorithm would be a little complicated and difficult if it was expressed only by mathematical formulas, but I'm glad I was able to understand it after listening to the explanation. The calculation method using binary trees seems easy. However, it has a drawback, and I found that the calculation time varies depending on the input element column.""",,,,-2
C-2022-1_U22,"""nSorting is to arrange these items according to a certain order. From now on, when we say sorting, we mean basic ascending order. To compare two items next to each other from the left is called bubble sort.""","""I understand bubble sort. I understand selection sort.""","""I don't understand heapsort""",,"""Heap sort I didn't understand heap sort, so I'll review it""",-3
C-2022-1_U23,"""I learned about computation time evaluation and algorithms such as bubble sort, selection sort, and heap sort.""","""Even if the purpose is the same, such as 'find the greatest common divisor', we found that the calculation time varies greatly depending on the algorithm, such as using the Euclidean division method. ""","""I didn't understand the order notation very well.""",,"""I made a mistake in the binary tree problem in the quiz, so I need to review it
""",-3
C-2022-1_U24,,,"""I don't have much, but this time I was particularly keenly aware of my lack of preparation, so I'd like to do something better so that I can have a little more time.""",,,-3
C-2022-1_U25,"""When n items are given, rearranging them according to 'a certain order' {basically ascending order (smaller value→larger value)} is called sorting.
Bubble sort compares the size of adjacent elements from the first to arrange them. Let n be the length of the sequence to be sorted, and estimate the amount of time complexity based on the number of comparisons and the number of exchanges of elements. The number of element comparisons is always n(n-1)/2 times...(n-1)+(n-2)+...+1=n(n-1)/2. The number of element exchanges is at most n(n-1)/2 times
Selection sort finds the largest element and replaces it with the last element. Repeat the same action for the rest of the series. Let the length of the sequence to be sorted be n, and estimate the time complexity by the number of comparisons of elements, the number of updates of the maximum value, and the number of exchanges of elements. The number of element comparisons is always n(n-1)/2 times, the number of exchanges of the maximum value is at most n(n+1)/2 times, and the number of element exchanges is at most n-1 times.
Order notation, for a function T(n), ``T(n) is of the order of f(n)'' means that there exist certain positive constants c, n' and T (n)≦cf(n) holds. At this time, write T(n)=O(f(n)).
A binary tree is a rooted tree in which each node has at most two children.
Sorting using a binary tree consists of 1. First put a₁ on the root. 2. , i=2, 3, . . . , n. After reading a1, repeat the following actions from the root. Compare ai to the value of the current node, if ai is smaller then go to the left child else go to the right child. If there is no node at the advanced point, create a node there and store ai. Read the completed binary tree in order.
The passing order means that the node values ​​are read in the order of (left child, self, right child). If the node you are trying to read has children, first read the left child in passing order, then read your value, then read the right child in passing order.
The calculation time of a binary tree changes depending on how the input sequence is arranged. Depends on the depth of the completed binary tree. If the size of the input sequence is n, the number of comparisons is n(n-1)/2 in the worst case.
A binary tree with n nodes and height h is called a heap if it satisfies the following two conditions. There are exactly 2^d nodes with a depth of d, and there are n-2(h-1)↑+1 nodes with a depth of h from the left. Any node's value is less than or equal to the value stored in its parent.
When the input sequence size is n, the number of heapsort comparisons does not exceed 3nlog2n. Once for each parent in the first stage, and twice for each left and right child in the second stage. The height of a heap consisting of n nodes does not exceed log2n.
Heapsort takes nlogn hours, binary tree sort takes n² hours, bubble sort takes n² hours, selection sort takes n² hours.
""",,,,"""I decided to review the lecture videos because there were many things I didn't understand.""",-3
C-2022-1_U26,"""Bubble sort compares and aligns adjacent elements. It is said that bubbles separate and float upwards.
Selection sort finds the largest element, swaps it with the last one, and repeats it for all numbers.
Consider the time as a function of the length of the input, since the processing time varies depending on the input. (: high calculation)
Order notation to think about dominant characters that can be calculated quickly
The binary tree is sorted so that smaller items go to the left. Add 1 for missing children
The heap is a clean equilateral binary tree sort fast""","""Since the number of operations varies depending on the input string, we are thinking about the number of times at most.""","""It seems that I understand the definition of the method of mutual division, but I do not understand it, so I would like to study it by hand.""",,"""I was amazed at how much time it takes to perform different processes depending on the input, and I learned that there are various methods to speed things up. I personally found the bubble sort method to be very interesting.""",-3
C-2022-1_U27,"""A method of finding the greatest common divisor of two numbers. When the two numbers are the length and width of a rectangle x and y (x<y), a square with a side length of x is filled into the rectangle. The leftover horizontal length is set to r, and the algorithm that continues the operation until r=0 is called Euclidean division method.
Bubble sort compares adjacent elements and arranges them in order, and the number of element exchanges is at most n(n-1)/2. On the other hand, selection sorting sorts the elements in order while searching for the largest one among the elements, and the number of exchanges of elements is n-1 times at most. It is also possible to purely sort by using a binary tree, but in that case the number of comparisons may increase, so a method using a binary tree called heap sorting is faster. ""","""I learned how to do bubble sort, selection sort, and the definition of heap.""",,,,-3
C-2022-1_U28,,,"""Mod Calculation for Euclidean Algorithm""",,"""Today's topic is particularly complicated and I want to review it thoroughly to deepen my understanding.""",-3
C-2022-1_U29,,"""I was able to understand the characteristics of each sort.""","""The method of obtaining f(n) in the order notation became a little ambiguous. Especially when using log n, I felt that I was not good at it.""","""The time complexity is the sum of the time required to execute each procedure, but in the case of bubble sort and selection sort, it is okay to understand that this corresponds to the sum of the number of comparisons, the number of updates of the maximum value, and the number of exchanges. Each has a different time complexity, but since we only consider high-order terms, I think the worst-case complexity for both is O(n²).""",,-3
C-2022-1_U3,"""When finding the greatest common divisor, it is overwhelmingly faster to use the Euclidean algorithm than the exhaustive solution. Also, sorting algorithms include exchange-type bubble sort, selection sort, and selection-type binary tree. There are types such as sorting and heap sorting.Bubble sorting arranges while comparing the size ratio of adjacent elements, selection sorting repeats the operation of searching for the largest element and replacing the last element.Binary tree sorting is in order of passing. The value of the node is read, but if the input number sequence is originally in ascending or descending order, the tree will be deep and the calculation will take time.Heapsort solves this drawback because the tree is almost square.Algorithm In order to evaluate the performance of , consider the worst-case computational complexity, which is the computational complexity for the most time-consuming input, in the order notation.The order notation should be as close to the upper limit of the computational complexity as possible.""","""I learned the specific methods of bubble sort and selection sort, and I was able to understand the difference in the number of times elements are exchanged due to the difference in methods. Also, since I only need to understand the behavior of long inputs, it is easy to use the order notation. I found that it is easy to compare the performance of algorithms by estimating the upper bound using a simple formula.Furthermore, I was able to know how to write and read binary tree sort and heap sort.""","""I didn't understand that there are n-2*h-1+1 nodes with depth h in order from the left in a heap with n nodes and height h. Also, time calculation of bubble sort and selection sort When estimating the amount, I wondered how they would compare when the items in the formula were different.""","""In a heap with n nodes and height h, what does it mean that there are n-2*h-1+1 nodes with depth h from left to right?""","""In high school mathematics, I learned Euclid's method of mutual division and used formulas frequently, but I didn't understand why this was the case. Today, I heard a visual explanation of origami and a logical proof, and I understood the meaning for the first time. I also found it interesting that numbers appear in ascending order when the binary tree sort is read in order.""",-3
C-2022-1_U30,,"""problem
i Greatest common divisor of 7289 and 8029 37
6 calculations
ⅱ Greatest common divisor of 1274 and 10505 1
6 calculations
Exercise 1
1, 52317 25317 23517 23157 21357 12357
2, when lining up from the left in descending order of numbers
Exercise 2
1,52317 12357
2, when the maximum number of updates is arranged from the left in order of 15 times or more
Exercise 3
1,5n^3+200n+10000=O
5+200/n^2+10000/n^3 by dividing by the highest degree of n on the left side
As n → ∞, the left-hand side approaches 5, as indicated by 5≠0
2，(log2n)^+n=O
Dividing the left side by n and transforming
Left side = (log2n)^/n+1
As n → ∞, the left-hand side approaches 1, as indicated by 1≠0
Exercise 1
Input: 10,5,7,3,8,9,6,1,20
Passing order
1,3,5,7,10,6,8,9,20""",,,,-3
C-2022-1_U32,"""Algorithm descriptions for bubble sort, selection sort, and sort using binary trees""",,,,"""I understood bubble sort and selection sort well because it was similar to programming class in high school.""",-3
C-2022-1_U33,,,"""I couldn't solve the exercises completely on my own.""",,"""It was interesting to dig deeper into the algorithms and discover new parts such as bubble sort and heap sort.""",-3
C-2022-1_U34,,"""I was able to understand the overview of bubble sort, binary tree, heap sort, etc. Bubble sort and selection sort were relatively easy, but heap sort was a little difficult.""","""There were many symbols in the time complexity, order notation, Euclidean division method, etc., and I was quite confused because I was unfamiliar with them. Also, it is easy to understand that the graph shows a large difference in temporal evaluation. However, I feel that it's hard to get a real sense of things that I haven't calculated myself and that the numbers are so huge.""",,,-3
C-2022-1_U35,"""Sorting is one of the basic algorithms, and is the operation of rearranging a sequence of numbers arranged randomly in a certain order.""",,"""I couldn't understand how to do heapsort and how to calculate the number of comparisons.""",,"""There are various types of sorting, and I wanted to be able to use them according to the time.""",-3
C-2022-1_U37,,,"""I didn't understand the order notation very well.""",,"""I can't understand calculations just by listening to them, so I think I'll put more effort into doing them later.""",-3
C-2022-1_U38,,"""Euclidean Algorithm
How to do bubble sort, selection sort and heap sort""",,,"""I want to thoroughly review the parts I didn't understand.""",-3
C-2022-1_U4,"""Euclidean algorithm can find the greatest common divisor of two numbers much faster than factorization. Sorting n items (in ascending order) is called sorting. Sorting while comparing is called bubble sort.The basic idea of ​​selection sort is to swap the largest element with the last element.Time It's called the amount of computation.""","""I was able to understand the concept of Euclid's algorithm using squares. I also learned the concepts of bubble sort and selection sort.""",,,,-3
C-2022-1_U42,"""・Sorting
・About bubble sort
・About selection sort
・Regarding the computational complexity of the algorithm
・About Heap""",,,"""Please tell me about (3).""","""In the real world, it's very easy to arrange numbers according to a certain order, but in the information world, there are various methods such as bubble sort, heap sort, and selection sort, so I thought it would take more time than in the real world. Until now. It was more efficient and time-saving to do it in the information world than in the real world.",-3
C-2022-1_U43,,,"""I didn't quite understand the meaning of the order notation formula.""",,,-3
C-2022-1_U44,"""I learned about bubblesort and heapsort.""",,,,"""Since the number of difficult words has increased, I would like to hold them down so that I can keep up with the class.""",-3
C-2022-1_U45,,,,"""Nothing in particular""","""Simply arranging the numbers in ascending order can make a big difference in the number of trials depending on the method, so I was very interested in learning that it is very important in computer science.""",-3
C-2022-1_U46,"""・When n=min(x,y), the calculation steps of Euclid's algorithm are at most 2log2(n).

・Sort (arrangement)... When n items are given, arrange them according to ""a certain order""
・Bubble sort... Arrange while comparing the size of adjacent elements
→ Element comparison count: always n(n-1)/2 times
　→ number of element exchanges: at most n(n-1)/2 times
・Selection sort...find the largest element and replace it with the last element
→ Element comparison count: always n(n-1)/2 times
→ Maximum number of updates: at most n(n+1)/2 times
　→ Number of element exchanges: at most n-1 times
・The time complexity of bubble sort and selection sort is O(n^2)←order notation""","""I understand about Euclidean Algorithm.""","""I didn't understand heapsort well, so I'll review it.""","""Not yet.""","""I made a mistake in the quiz today, so I'll do my best to get a perfect score next time.""",-3
C-2022-1_U47,"""On Euclid's Algorithm""","""Question 1 and Question 2 completed""",,,"""It was a difficult subject, so I want to review it thoroughly.""",-3
C-2022-1_U48,,"""I found out that there are different types of sorting, such as bubble sort and heap sort.""",,,,-3
C-2022-1_U49,"""Sorts include exchange type, selection type, and divide-and-conquer type. This time, we dealt with bubble sort, selection sort, and heap sort. It is necessary to establish a procedure.The amount of computation differs for each sort, and the maximum number of exchanges can be obtained.The amount of computation can be considered in order notation, and the amount of computation is a function of the length of the input n Think of it as the upper bound of the function when it is large.""","""I was able to understand each sorting method and order notation.""","""I didn't quite understand the validity of Euclid's method of division.""",,"""I thought it was important to do the exercises with my own hands.""",-3
C-2022-1_U5,"""Algorithm by Euclidean Algorithm. Kinds and Process of Sorting. Concept of Computational Complexity of Algorithm called Order Notation.""","""Bubble sort and selection sort seemed difficult at first glance, but when they were taught in class, they were easy to understand and surprisingly not difficult.""","""The understanding of the order notation was clogged with the time complexity of the algorithm.""",,,-2
C-2022-1_U50,,,"""About Heapsort""",,"""I already knew bubble sort, so I understood it, but I didn't understand heap sort, so I want to review it and understand it. Also, I want to make sure I don't forget to review the whole thing because the test is coming soon.
""",-3
C-2022-1_U51,"""There are bubble sort and heap sort as sorting methods""","""bubble sort is done by side-by-side comparison""","""The binary tree was difficult""",,"""Sorry for being late""",-3
C-2022-1_U52,,,,,"""It's getting harder, so I want to do my best.""",-3
C-2022-1_U53,"""Compared to the fact that factorization takes an enormous amount of time, Euclid's method of division can be used to instantly find the greatest common divisor.
Such algorithmic ingenuity is also used when expressing sorting.
Heaps compensate for the weaknesses of binary trees. """,,,,"""I could feel the close connection between mathematics and information science.""",-3
C-2022-1_U54,"""As a method of finding the greatest common divisor of two numbers, it takes an enormous amount of time to calculate it thoroughly. Also, it is difficult to factor large numbers. Therefore, we use Euclid's mutual aid method. Euclid's mutual aid method. is visualized using rectangles and squares.Next, solve the sorting problem.Sorting is to arrange the numbers in order of size.Bubble sort is to sort the numbers next to each other. It was likened to a bubble because of how large numbers go up.Selection sorting is sorting that finds the largest number and replaces it with the end.Next, use a binary tree.If it is less than the previous number, Place on the left, larger on the right, so that the smallest number is on the leftmost and the largest number on the rightmost.The downside of this is that the initial order of the numbers affects the computation time. That's where the heap comes in. A heap is a way to create children on every branch of a binary tree, in the shape of a triangle.","""There are many methods for sorting. Since it takes time to investigate steadily, I learned that we should think of the quickest method.""","""I didn't understand the concept of heap at first, but now I understand it by asking people.""",,,-3
C-2022-1_U56,"""Sorting is to rearrange multiple items according to a certain order, and is one of the most basic problems in computer science. There are two types of sorting, bubble sort and selection sort, which are arranged according to their respective rules. The time complexity is the sum of the time required to execute the writing procedure for the input character, and since it is difficult to consider the computational complexity individually, the worst computational complexity, which is the input that takes the most time, is A binary tree that satisfies two conditions is called a heap.""",,"""I didn't quite understand how to distinguish coins using binary trees from the previous quiz and how to show order notation.""","""Please tell me how to apply numbers in order notation.""","""I enjoyed the task of sorting according to the rules, which I normally do intuitively.
""",-3
C-2022-1_U58,,,"""I don't understand how sorting is calculated.""",,"""It took me a while to understand because I didn't prepare for the class until the end.""",-3
C-2022-1_U59,"""What is sorting?　→Given n items, rearranging them according to a certain order. Sorting is one of the most basic subjects in computer science. For example, in ascending order (small value → large value), and in descending order (large value → small value).Representative sorting algorithms include ● exchange type (bubble sort, selection sort) ● divide-and-conquer type (merge sort, quick Sorting) ● Selection type (binary tree sort, heap sort) ● Others (bucket sort, radix sort).　　　The basic idea of ​​bubble sort is to ``sort while comparing the size of adjacent elements''. It is a thing. By repeating this to the end, it is possible to move the largest element to the end. By performing this operation on all items, the sorting is completed. Basic selection sorting The idea is ""find the largest element and replace it with the last element"". By arranging the largest elements in order, the whole can finally be sorted.　　Time complexity is the sum of the time required to execute each procedure for a given input. In general, the larger the input, the longer it takes. To allow us to estimate the behavior for large inputs, we consider an upper bound on the function when the input is large.

""","""I was able to understand the difference between binary tree sorting and heap sorting. I was able to do the calculation myself.""",,,,-3
C-2022-1_U6,,,,,"""The calculations and proofs are getting more and more complicated, so I'm going to review them thoroughly.""",-3
C-2022-1_U61,"""I just learned how to calculate and sort.""","""I've caught up with bubble sorting""","""Slightly out of heapsort""",,"""Recently, I've been doing poorly on quizzes, so I'll try to do a review and face it.""",-3
C-2022-1_U62,,,"""How to check whether the amount of computation is optimal or worst""",,,-3
C-2022-1_U63,"""To arrange something in order is called sorting.""",,,,,-3
C-2022-1_U64,"""About the sorting problem
Sort numbers in ascending or descending order""",,,,"""I overslept. I want to go to bed earlier on Sundays.
The formula that comes out is not simple, so I want to do my homework and review without neglecting it.""",-3
C-2022-1_U65,,,,,"""I learned about the most basic sorting problem, but I still don't understand the heap sorting that I learned at the end, so I thought I'd review it from around sorting using a binary tree. Calculations I want to prepare for the test by actually working with my hands, instead of thinking that I understood the problems just by listening to them.""",-3
C-2022-1_U66,"""The sorting problem is one of the most fundamental problems in computer science, given n items and sorting them in a certain order.
Typical sorting algorithms include exchange type, selection type, divide-and-conquer type, etc. Bubble sort selection sort for exchange type, binary tree sort, heap sort for selection type, merge sort, quick sort for divide-and-conquer type. There are also bucket sorts and radix sorts.
Bubble sort is a sort that sorts while comparing the costs of adjacent elements. The length of the sequence to be sorted is n, and the time complexity is estimated by the number of comparisons and the number of exchanges of elements.
Selection sort is a sort that finds the maximum element and replaces it with the last element. The length of the sequence to be sorted is n, and the time complexity is estimated by the number of element comparisons, the number of updates of the maximum value, and the number of element exchanges. . Here, the time complexity is the sum of the time required to execute each procedure with respect to the input, and is a function dependent on the input. The larger the input, the longer it takes.
The computational complexity of the algorithm can be obtained by the order notation.
Binary tree sort is a sort that arranges according to the following procedure.
1 First put a1 as the root
2 Do the following in order of i=2,3,...,n
After reading Ⅰai, repeat the next Ⅱ from the root
Ⅱ Compare ai with the value of the current node, and if ai is smaller, proceed to the left child, otherwise proceed to the right child. If there is no node in the advanced place, proceed to III.
Ⅲ Create a node there and store ai
3 Read the completed binary tree in order
Disadvantages are that the amount of calculation changes depending on how the input sequence is arranged (depends on the depth of the completed binary tree), and if the size of the input sequence is n, in the worst case, the number of comparisons is n(n-1). /2.
""",,,,,-3
C-2022-1_U67,"""About bubblesort and heapsort.""","""I figured out how to align different characters.""","""I was confused by the various characters that came up, and I couldn't understand it right away.""","""Nothing in particular.
""","""I learned something new.
""",-3
C-2022-1_U68,,,,,"""I had misunderstood that I was just reviewing and finishing the journal, so I felt that I had to get into the habit of writing a journal immediately after class.""",-3
C-2022-1_U69,,,,"""I used the difficulty of factorization in the cipher, but wouldn't the cipher be cracked by using Euclid's algorithm?""","""I struggled a bit with the fake coin problem in the quiz, so I'm going to strengthen my review and be careful not to leave the class.""",-3
C-2022-1_U7,"""Algorithms that use Euclidean division or sorting. The number of basic operations until the end of the algorithm is called the number of calculation steps. Bubble sort compares the size of adjacent elements, and selection sort selects the largest element. Find and replace it with the largest element.""","""I thought that there are various ways to reduce the number of calculation steps of the algorithm.""","""I didn't quite understand how to do the final alignment after heapsorting.""","""Nothing in particular.""","""There are various ways to align elements, and I thought it would be nice to know which method is best for different situations.""",-3
C-2022-1_U70,,,,"""・Because I didn't quite understand the order notation formula, I couldn't solve Exercise 3 in Material B0-7.
""",,-3
C-2022-1_U71,,,"""How to Read Heapsort""",,,-3
C-2022-1_U73,"""Sort is to rearrange the given n items in a certain order. Ascending order is from smallest to largest, and descending order is from largest to smallest. Bubble sort is to arrange while comparing the size of adjacent elements. The number of element comparisons is always n (n-1)/2 times, but the number of exchanges is at most n (n-1)/2 times.Selective sorting is the exchange of the largest element and the last element.The number of comparisons is bubble sort. is always n (n−1)/2 times.The time complexity is the sum of the time it takes to execute each procedure when inputting, and the procedure to be executed varies depending on the input.Worst complexity is , the amount of computation for the most time-consuming input.
""","""The number of comparisons of elements in bubble sort and selection sort is n C2 = n (n - 1)/2 times because two out of n elements are selected and compared.
The number of bubble sort exchanges is at most n (n-1)/2 times, since there are cases where it is not necessary to exchange two when comparing two. ""","""Thinking about the upper limit of the function when the input is large means thinking about when it takes the longest time?
I don't quite understand why you consider the computational complexity of an algorithm in terms of order notation.
I understand bubble sort and selection sort, but I don't know where they are used.
I don't understand why the maximum number of selection sort updates is at most n (n+1)/2, because I don't know the example of the sequence that needs to be updated the most. """,,,-3
C-2022-1_U75,"""Bubble sort is a method of calculating while comparing adjacent sizes. Mersey sort is similar to heap sort, but it is a simple algorithm that does not use a binary tree.""","""I know most of what the words mean.""","""I didn't understand the details.""",,"""This time too, there were a lot of new words, so it was confusing and difficult to understand.""",-3
C-2022-1_U76,,"""I understand how multiple sorting works.""","""I didn't know how to calculate the correct order notation.
I didn't understand the formulas for heap depth and number of nodes. """,,"""There are many things I didn't understand, so I think I'll look it up on the Internet.""",-3
C-2022-1_U77,,,,"""What are the positive constants c and n0 in order notation?""","""There were so many terms that I felt that I didn't fully understand them. I'm sure they'll come up again in future classes, so I thought I'd review them properly so I wouldn't get confused when they were explained.""",-3
C-2022-1_U78,"""By using Euclidean division, the speed of solving the greatest common divisor problem is greatly increased. Basic sorting operations include bubble sort and heap sort. Order: O(f (n)) ≤ cf(n) c, n₀ are any positive constants.""","""I was able to understand the meaning of the order notation.""","""When the input sequence size is n, the number of heapsort comparisons should not exceed 3nlog₂n.""",,,-3
C-2022-1_U79,,"""There are bubble sort, selection sort, heap sort, etc. to sort elements side by side.""",,,,-3
C-2022-1_U80,,"""The number sequences you learned in high school are used when finding the street of the largest transformation""",,,"""I was sad because my quiz score was bad.""",-3
C-2022-1_U81,"""bubble sort, selection sort""","""Two Sorting Methods and Usefulness""",,,"""This time I was able to understand in class.""",-3
C-2022-1_U82,,"""I didn't go into detail in high school, but in today's lecture I was able to understand how to use Euclid's Algorithm. Among the sorts, I learned the rules for arranging numbers in bubble sort and selection sort, and I practiced them myself. I was able to apply it when solving problems.When estimating the amount of calculation time, the calculation time varies depending on the input sequence, but I found that the worst case calculation amount was used to ignore it.""","""The proof that came out when Euclid's method of division was a bit confusing, so I'm going to look at the supplementary material and deepen my understanding. I want to learn how to do it properly and get used to it.""",,"""I often feel that I need to go beyond simply knowing the meaning of a term, to try to sort it myself, or to essentially understand why this function is being used. There are still some things that I can't fully understand with time alone, so I plan to do my own homework and review, and make effective use of the materials.In Unit B, I mainly learned about algorithms, and from this time on, I'm learning about sorting. Sorting is used in everyday situations, such as when we search for something, so I think it's very meaningful to learn about how it works.""",-3
C-2022-1_U85,"""On the correctness of the Euclidean algorithm, sorting problems (bubble sort, selection sort, sorting by binary tree)""","""If you replace the greatest common divisor problem with the problem of filling rectangles with as large squares as possible, you can solve it quickly. euclid_gcd finishes calculation instantly. Think worst case. ""","""Proof of Euclidean Algorithm""",,,-3
C-2022-1_U86,"""Sorting Details""","""In a binary tree, moving left decreases the number and moving right increases it""",,,,-3
C-2022-1_U87,"""In today's class, we learned how to find the greatest common divisor using Euclid's reciprocal method, and learned that it is possible to speed up the processing of algorithms.""","""I learned that making a square from a rectangle without using a ruler is done by division""","""I learned what the mutual division method wanted to do, but I could not understand the legitimacy of the mutual aid method.""",,"""Today's content was relatively easy to understand because it was something I had done once in high school math.""",-3
C-2022-1_U88,"""Sorting One of the most fundamental problems in computer science is to arrange two or more items according to a certain order. Typical types include exchange type, divide-and-conquer type, and selection type. ""","""I understood terms such as sorting, time complexity, order notation, and binary trees. I understood how to use bubble sort, selection sort, sorting using binary trees, and order notation calculations.""",,,,-3
C-2022-1_U89,"""This time, I reviewed the previous Euclid's algorithm, reviewed the algorithm, and studied the sorting problem. The algorithm can be calculated by Euclid's algorithm. Factoring can also be used, but Euclid's algorithm is more significant. The sorting problem is the problem of sorting, and here it specifically refers to sorting the elements of a sequence in ascending order.Bubble sorting is sorting by exchanging the elements next to each other. Selection sort is to sort by exchanging the largest element and the last element.These two are called selection type.For the performance evaluation of the algorithm, perform each step for input a The sum of the time required for is called the time complexity.This is a function that changes depending on the input procedure.The computational complexity for the input that takes the most time is called the worst complexity.This is the maximum value of the time complexity. This is where the order notation comes in. Algorithms are evaluated using the order notation.""","""I was able to learn more about Euclid's algorithm of division. I was able to review the calculation of Euclid's algorithm of division and found that it is used as a means of calculation in computer science. It was the first time I learned that it was used for searches for .","""There are too many types of sorting, and I still don't know which one is better or which one is used for which purpose, so I wanted to know more. Also, I didn't know much about calculations such as binary trees. I still don't understand it, so I think the calculations are important, so I'll review them.""",,"""After taking today's class, it became even clearer that calculation is the most important thing. As I wrote in my impressions every time, calculations in high school mathematics are surprisingly used in society. I'm just amazed.I'm glad I studied hard.However, there are still many things I don't understand well about how mathematics is used in computer science and how computers work. So I wanted to know more about these things.""",-3
C-2022-1_U9,"""Using Euclid's Algorithm reduces computation time significantly.
Bubble sort that compares the size of numbers in order
""","""About Bubble Sort""","""I don't know how to put an upper limit on the number of heapsort comparisons. Especially why the log appears""",,"""I want to review order and heapsort properly""",-3
C-2022-1_U90,"""Sorting is sorting according to a certain order. Bubble sorting is sorting by comparing the size of adjacent elements. Selection sorting is finding the largest element and replacing it with the last element.""","""About sorting""",,,,-3
C-2022-1_U91,"""Sorting is sorting numbers based on certain conditions""","""The larger the input, the longer it takes""","""Uses of Binary Trees""","""About Heap""","""I felt that the difficulty of the calculation increased""",-3
C-2022-1_U92,"""Understood bubble sort""","""Now I know what selection sort is""",,,"""I didn't do well on the quiz, so I'll do my best next time.""",-3
C-2022-1_U93,"""When creating an algorithm, it is important how quickly it can be processed.""","""Now I know how Euclid does it when asking for gcd""","""Difficult to calculate number of sorts""",,,-3
C-2022-1_U94,"""Bubble sorting considers the size of adjacent numbers. Selection sorting finds the largest element and replaces it with the last element.""","""It's more important to see what happens with long inputs.""",,,,-3
C-2022-1_U96,"""I learned the greatest common divisor algorithm. (It was very nostalgic to make a set of rectangles into squares. Mod was also nostalgic.) Eugrid's mutual division method was able to calculate at a speed that could not be done by brute force. I also learned about the bubble sort of sorting.Bubble sort was the most basic algorithm in computer science.Laundry sort was the one that sorted faster than that.There were many things in common in that large things were shifted I also asked for computational complexity.""","""Practice question i Solution 37. Number of calculations 6.
ⅱ Solution 1. Calculation times 6.
Exercise 1 ⒈ 5 times
　　　　　　⒉When lined up in descending order
Exercise 2 ⒈ 3 times
　　　　　　⒉When lined up in descending order

""","""Computational complexity calculation. Heap sort. Binary tree is still my weak point. I wonder if heap is faster than binary tree.""",,"""It was all nostalgic. I need to go to Heapsort to understand it better.""",-3
D-2020_U10,,"""Z transform of unit impulse sequence, unit step sequence.""",,,,0
D-2020_U11,,,"""Z transform""",,,-3
D-2020_U12,"""Discrete-time signals can be represented by sequences and can be z-transformed.""",,,,,-3
D-2020_U13,,"""I figured out how to calculate the Z transform""",,,"""I want to do my best to make the Z transform a reality""",1
D-2020_U14,,"""I found out how to do the Z transform""",,,,0
D-2020_U15,"""The nature of the Z-transform and how to do the inverse Z-transform.""","""The nature of the Z-transform and how to do the inverse Z-transform.""",,,,1
D-2020_U16,"""Properties of the z-transform""","""How to do z transform""",,,,-2
D-2020_U18,"""A general signal can be represented using a unit impulse function.
The Fourier transform of a discrete-time signal that satisfies causality is expressed using z=e^sT is called the Z transform.
There is a set of Z values ​​(convergence condition) for the Z transform to exist. ""","""I understand the idea of ​​using the permutation z=e^sT to simplify the expression of the Fourier transform.""",,,,1
D-2020_U19,,"""I learned the basics of how to handle the Z transform""","""I'm not used to it yet, so I can't solve problems on my own unless I look at the materials.""",,"""The math was interesting, but I found it difficult because I'm not used to Z-transform yet.""",0
D-2020_U2,"""The Z-transform is used to analyze discrete-time systems. Also, since the Z-transform is the sum of power series of the complex number z, it does not converge depending on the value of z, and it is necessary to consider the convergence region.""",,,,,1
D-2020_U21,"""Properties of the Z transform""",,,,,1
D-2020_U22,"""Properties of Z Transform, Inverse Z Transform""","""Methods of Z-Transform and Inverse Z-Transform""",,,"""I want to understand a little more about the Z transform""",1
D-2020_U25,,"""Z-transform formula and its properties""",,,,1
D-2020_U27,,,,,"""In last week's assignments, there were some parts where the properties of the delta function were not used well, and I felt that I had to review them once.""",-1
D-2020_U28,"""z-transform""","""I understand about the z-transform.""","""Nothing in particular.""","""Nothing in particular.""","""I want to review the Laplace transform.""",0
D-2020_U29,"""Expression of Discrete-Time Signals and Their Z Transform""","""How to Z-transform various discrete-time signals. How to find the convergence area in Z-transform.""",,,"""I thought it would be good to make the series into a fraction-like form by determining the range of convergence. I thought that it would be possible to analyze discrete-time signals.""",1
D-2020_U3,,,,,"""Since my handwritten notebook is all black, I think I'll use other colors for important parts.
So I want to put markers properly during class.
""",1
D-2020_U31,"""Discrete-time signals can be represented by sequences, and the sequences can be represented by unit pulse trains.
The z-transform may not converge depending on the value of z, so the range of z for convergence must be indicated. """,,,,"""I had learned Laplace transform and z transform, but I didn't know why I introduced these transforms.
But today I understand. """,1
D-2020_U32,,"""I now know the definition of the z-transform and how to find the radius of convergence.""",,,,1
D-2020_U34,"""Definition and Meaning of Z Transform""",,,,"""Bookroll is hard to use. It's too troublesome to press fullScreen → escKey every time.""",-2
D-2020_U35,"""There are functions that can be converged by the Z-transform""","""Z transform formula""","""unit step sequence""",,"""I want to prove the formula and deepen my understanding""",-1
D-2020_U36,,"""Methods of Z-transformation and properties of Z-transformation.""",,,,1
D-2020_U37,,"""What is the Z transform
Relation to Laplace transform
About Convergence Regions""",,,"""Continuing from last time, deleting cookies solved the problem.""",1
D-2020_U38,,,,,"""I would like to try not only to understand and use formulas, but also to understand the background, such as why they can be used and what advantages there are in using them.""",0
D-2020_U39,,,,,"""I learned z-transform once, but I felt that I didn't learn much, so I want to review it thoroughly.""",1
D-2020_U40,"""Discrete-Time Signals and Z-Transform Features""","""How to derive the Z transform and its features""",,,,1
D-2020_U41,,"""The z-transform is used in discrete-time analysis""",,,"""Gradually I don't know what I want to do
""",0
D-2020_U42,,,"""I'm not sure if I can actually calculate the convergence area""",,,-1
D-2020_U43,,"""How to do inverse Z transform""","""Nothing in particular""",,,1
D-2020_U47,,"""I had a solid understanding of the definition of the Z transform and the radius of convergence""","""When I calculated u(n)=Σ(k=-∞,n) δ(k) of the relationship between the unit impulse sequence and the unit step sequence, I could not understand it well.""",,,0
D-2020_U48,,"""I was able to see the advantage of the Z-transform (it can converge a signal that does not converge with the Fourier transform).""","""I didn't quite understand why the convergence area of ​​the Z transform was outside the circle.""",,,1
D-2020_U49,"""Discrete-time signals can be represented as sequences of numbers, and the Z-transform is a means of analyzing discrete-time systems.
The Z-transform may not converge depending on the value of z, so we have to indicate the convergence region. ""","""I understand the Z-transform calculation itself.""",,,,1
D-2020_U5,"""I learned about the properties of the Z-transform and the inverse Z-transform""",,,,,-3
D-2020_U50,,"""Rough calculations are similar to Fourier transforms, so the calculation itself doesn't seem to be a problem.""",,,,0
D-2020_U52,"""I learned about discrete-time signals and the Z-transform. I also learned how to define and calculate the Z-transform.""","""That the Z-transform is one of the transformation methods for analyzing discrete-time signals.
There are also definitions of convergence regions, zeros, poles, etc. """,,,"""I felt that it was difficult to memorize various transforms such as Fourier transform, Laplace transform, and Z transform.
So, instead of memorizing everything, I wanted to understand everything from definition to derivation. """,1
D-2020_U54,"""z-transform of causal and non-causal sequences""","""How to do z transform""",,,,0
D-2020_U55,,"""Performing the z-transform on discrete signals that cannot be Fourier transformed
The z-transform also obtains the convergence area as a set""",,,,1
D-2020_U57,,,,"""What is the advantage of z-transform""","""It was hard to grasp the concept of z-transform""",-1
D-2020_U59,,"""Method of Z transform""",,,,-2
D-2020_U62,"""About Z transform""","""Discrete-time signals should be represented as sequences. Z-transforms should be used to analyze discrete-time systems.""",,,,0
D-2020_U64,"""I used a knowledge map to summarize what I've learned so far.""",,,,,0
D-2020_U66,"""Study of Z transform""","""Concept of Z Transform""",,,"""Z transform was easy because I learned it in another class.""",1
D-2020_U7,,"""The z-transform and inverse z-transform in discrete-time signals correspond to the Laplace transform and inverse Laplace transform in continuous-time signals.
By using this, mathematically complicated calculations can be avoided, which is very useful in terms of analysis.
In reality, however, the z-transform requires performing a complex integral, which is not easy. However, it can be easily analyzed if partial fraction decomposition can be used. """,,,,1
D-2020_U9,"""Discrete-time signals can be treated as sequences, and discrete signals can be converted to complex numbers by Z-transform, and can be converged depending on the value of z.""",,,,,-1
D-2021_U1,"""Representation using unit impulse sequence and unit step sequence of discrete-time signals
Z-transform""","""Representation of Discrete-Time Signals Using Unit Impulse Sequences and Unit Step Sequences""","""Z transform""",,,-1
D-2021_U100,"""The Laplace transform of a discrete-time signal is called the Z transform. Normally, the time t of a signal is greater than 0, so similarly the Laplace transform is calculated in the range of 0 or more. Such an idea is called causality. The variable z of the Z transform is Refers to complex numbers.Whether or not the z-transform converges can be determined by whether or not the sequence before transformation can be absolutely added, which affects the stability of the system.However, if the variable z can be set well, the z-transform can converge. The range set at this time is called the convergence area.""","""I understood how to calculate the Z transform.""","""I didn't understand how to find the convergence area.""",,"""I didn't really understand about convergence halfway through, so I didn't listen to him much, so in the next class, I want to listen carefully until the end.""",1
D-2021_U101,"""Understand the definition of the z-transform.""",,,,,1
D-2021_U102,"""z-transform and z-transform convergence regions, representative z-transform pairs""",,,,"""Several z-transform pairs have appeared, so I want to be able to prove it.""",1
D-2021_U103,"""I learned about z-transform and related knowledge.""","""I was able to fully understand the words and expressions used in class.""","""I felt that I could not fully understand it without calculating the convergence condition of the z-transform specifically.""",,"""I've heard several times that it will be connected in the week after next, so I'm looking forward to it.""",1
D-2021_U104,,,,,"""Because I was late to finish the assignment and the retrospective journal was late, I want to be careful from now on.
""",1
D-2021_U13,"""Discrete-time systems can be analyzed by converting a continuous-time signal to a sampled signal and then performing a Z-transform.""","""How to do Z transform""",,,,1
D-2021_U15,"""Understanding the z-transform""","""I was able to understand the basics of the derivation and properties of the z-transform.""",,,"""I want to be careful about order processing of integral and sigma calculation""",1
D-2021_U17,"""Introducing the Z Transform""",,,,,1
D-2021_U19,,"""It is now possible to reverse transform""",,,,1
D-2021_U20,,"""Z-Transform of Discrete-Time Signals and How to Find Its Convergence Region""",,"""Nothing in particular.""","""We were able to carefully check the derivation process.""",1
D-2021_U21,,,,,"""I was able to understand the z-transform.""",1
D-2021_U22,,,"""I didn't know what the convergence area was.""",,,1
D-2021_U23,,,,,"""It was a bit difficult to memorize the Z transform from the Laplace transform.""",1
D-2021_U27,,,"""I don't know the convergence region""",,,1
D-2021_U28,"""Discrete-Time Signals, Z Transform""",,,,,1
D-2021_U29,,"""converge by z-transform""",,"""Why does the Z-transform converge?""",,1
D-2021_U3,"""z-transform""",,,,,-2
D-2021_U30,,,,,"""Even if it looked like a function that was not on the table, I was able to match it to the shape of the table by disassembling and devising it.""",1
D-2021_U31,,"""Understood overview of z-transform and convergence""","""Detailed Understanding of Convergence Criteria""",,,1
D-2021_U32,,,,,"""I learned a lot about the Z transform.""",1
D-2021_U41,,,,,"""If you can't use the Fourier transform and the Z transform in your mind, you'll have a hard time with the test if it's ambiguous.""",1
D-2021_U43,"""Properties of Z transform, inverse z transform""",,"""Complex calculations were difficult""",,,1
D-2021_U46,,"""The inverse Z-transform yields the original discrete-time signal sequence x(n) from X(z).
Calculation of the inverse Z-transform is an operation related to a function of complex number z. """,,,,1
D-2021_U48,"""How to represent it in a sequence
About the Z transform""",,,,,1
D-2021_U49,,"""Using a typical z-transform to find the z-transform of a given x(n).""",,,,1
D-2021_U54,,"""I found the difference between one-sided Z-transform and two-sided Z-transform.""",,,,0
D-2021_U56,"""On Discrete-Time Signals and the Z Transform""",,,,,1
D-2021_U57,,,,,"""Reviewing Z-Transform Pairs""",0
D-2021_U61,"""By performing the z-transform, it is possible to converge the value by appropriately determining the value of z for the discrete-time signal sequence. I also understood the function to take.""",,,,"""Again, I felt that the integration of exponential functions is easier than trigonometric functions.",1
D-2021_U62,"""Learned the mathematical representation of the Z-transform, real exponential and sinusoidal sequences, Z-transform convergence regions, zeros, poles, and orders""","""I think I was able to get a hands-on understanding of how to do the Z transform and how to find the convergence area.""",,,,1
D-2021_U63,"""I learned about the z-transform.""","""I figured out how to do the z-transform.""",,,"""The convergence area of ​​z transform was difficult, so I want to review it.""",1
D-2021_U64,"""Z transform""","""z-transform""",,,"""From now on, I think it's likely that what I've learned will be connected.""",1
D-2021_U67,"""I learned about the z-transform.""",,,,,1
D-2021_U69,"""Representation of discrete-time signals as sequences. Definition of unit impulse sequence, unit step sequence, Z-transform and convergence region.""","""I learned that general sequences can be represented by unit impulse sequences, how to calculate the Z transform, and how to find the convergence region.""","""I had a hard time understanding the meaning of one-sided Z-transform and two-sided Z-transform.""","""In X(z)=N(z)/D(z), when D(z)=0, the denominator becomes 0, so does X(z) not exist at the pole?""","""There was a lot of new mathematical knowledge this time, so it took me a while to understand. I'd like to acquire it through exercises.""",1
D-2021_U70,,"""Methods of Z-transforms and areas of convergence, etc.""",,,"""It was easy to understand around the number sequence.""",1
D-2021_U72,"""A Z-transform was performed to analyze the continuous-time signal x(t) taken as a sequence {x(nT)} of sampled signals x_s(t).""",,"""I didn't know what the convergence region was after all.""",,,1
D-2021_U73,"""Introducing the z-transform""","""I found the formulas for unit impulse sequence, unit step sequence, real exponential sequence, and sine wave sequence
I was able to know the formula for the z-transform.""","""I didn't quite understand the nature of the z-transform
In the explanation about poles, I was wondering if the denominator of X(z) could be 0.
I didn't understand why you were focusing on the convergence region.""",,,1
D-2021_U74,"""A discrete-time signal can be represented by a sequence.
Since the Z-transform is expressed as a sum of infinite power series, it may not converge.
Therefore, it is necessary to indicate Z such that it converges. -> convergence area""","""I was able to understand the Z-transform method through examples.""",,,"""I didn't understand the meaning of the Z transform, so I'll try to catch it in future lectures.""",1
D-2021_U75,"""Introduction of Z transform.""","""Definition of Z transform, etc.""","""I didn't quite understand the convergence area part.""",,"""I want to remember to review the parts I didn't understand, such as exercises, so that I can understand them.""",1
D-2021_U76,,"""I was able to do my own research and work on the problem.""",,,"""It was difficult.""",1
D-2021_U77,,"""Understanding the Computational Process of the Z Transform""",,,,1
D-2021_U78,"""I learned linearity, transitivity theorem, product of exponential sequences, convolution theorem, etc. as properties of z-transform.
In addition, we introduced the inverse z-transform to obtain the signal in the time domain from the z-domain representation, and learned the power series expansion method and the partial fraction decomposition method as concrete calculation methods. """,,,,,1
D-2021_U79,,,,"""I want to review the concept of convergence regions.""",,1
D-2021_U81,"""Introduction of Z transform.""","""Now I know what the Z transform is.""",,,,1
D-2021_U82,,,"""What is the z-transform after all?""",,,1
D-2021_U83,"""Definition of various sequences, definition of z-transform""","""How to do the z-transform""",,,"""It was easy to understand because there were conversions that I had done in another lecture.""",1
D-2021_U84,,,"""I didn't really understand what the Z transform meant""",,"""Continuing from last time, it was difficult to understand a lot of the content that I had never heard before.""",1
D-2021_U85,"""The z-transform cannot be recovered without convergence.
So, set the value of z appropriately and let it converge. (can be converged for any value of x(n))""",,"""I didn't know when z-transform would be needed.""",,,1
D-2021_U88,"""Representing a sampled discrete-time signal as a Z-transform by Laplace-transforming it""",,,,,1
D-2021_U90,"""The most important thing in today's class was the Z transform.""","""When I was in my sophomore year, I didn't know where the Z transform came from, but I knew it came from signal processing.""",,,"""Z-transform came out, and I was impressed by the connection of knowledge.""",1
D-2021_U91,"""How to do z transform""",,,,"""Easy to understand""",1
D-2021_U93,"""Review discrete-time signals and define the unit impulse function and unit step function by converting them into sequences.
And learned more about the Z transform. Z-transform is used to analyze discrete-time systems.
Convergence may not occur for some values ​​of Z, so the region of convergence must be indicated.
""","""I understand the unit impulse sequence and the unit step sequence.
""",,,"""It's almost time for some complicated math content, so I'd like to review it thoroughly and prepare for the next class.""",1
D-2021_U94,,"""I was able to understand the flow of Z-transform and the calculation method.""","""I knew that it might not converge, but I didn't really understand how to think about the conditions for convergence when considering the convergence region.""",,,1
D-2021_U96,,,,,"""Z transform was the first word I heard.
I practice the Fourier transform outside of this class, but I haven't practiced the z transform, so
I want to review well. """,1
D-2021_U97,,"""The Z transform is the discrete version of the Laplace transform.""",,,,1
D-2021_U99,,"""The z-transform is a discrete version of the Laplace transform.""",,,"""The z-transform was easier than the Fourier transform.""",1
D-2022_U1,,"""Relationship between Z transform and Laplace transform""","""Detailed Meaning of Z Transform""",,"""was difficult.""",0
D-2022_U21,"""I learned how to do the Z transform.""",,,"""Not this week.""","""I'm still not familiar with calculations involving unit impulse sequences and step functions, so I'd like to review them often.""",1
D-2022_U24,,,,,"""It's fun to be able to do Fourier transforms on more functions.""",1
D-2022_U25,,,"""I didn't understand what you were talking about about the ending region of the Z transform.""",,"""It's hard because the number of things I don't understand is gradually increasing.
Let's review properly. """,1
D-2022_U26,"""How to do the Z-transform and convergence conditions when the sample value signal is viewed as a sequence""",,,"""How to determine z so that the Z transform converges when the sum of x(n) is not infinite.""",,1
D-2022_U29,,,,,"""I was able to understand because I prepared well for the class.""",1
D-2022_U30,,,"""I want to understand the z-transform a little more politely.""",,"""I want to suppress the relationship between z-transform, Fourier transform, etc.""",1
D-2022_U31,,"""How to derive the z-transform and find the convergence region.""","""I didn't quite understand the part that the z-transform converges if the sequence is absolutely countable.""",,,0
D-2022_U32,"""The operation of Laplace-transforming a discrete-time signal and putting it in the complex variable z=exp(sT) is called the z-transform.""","""By z-transforming, the condition of convergence can be determined by the value of z, and by z-transforming with an appropriate z, the Fourier transform becomes possible.""",,,,1
D-2022_U36,,"""Z transform""","""Calculation to find convergence region""",,"""It was math""",1
D-2022_U37,"""The discrete-time signal was expressed as a unit impulse signal, and the Z-transform was obtained by Laplace-transforming it with Z = e^sT. Since the Z-transformed signal is represented by an infinite series, it was necessary to determine the range of convergence. rice field.""","""I got a general idea of ​​the Z transform.""",,,,-1
D-2022_U38,,,,"""Nothing in particular.""",,1
D-2022_U39,,"""Relationship between z-transform and Laplace transform
How to find the convergence area of ​​z-transform""",,,"""I was able to explain the distinction between ○○ transformations.""",1
D-2022_U40,"""The z-transform is a discretization of the Laplace transform and is used to analyze discrete-time systems. Since the z-transform may not converge, we need to find the region of convergence as a range for convergence.""",,,,,1
D-2022_U42,,,"""I haven't solved a specific problem about Z-transform yet, so I want to understand what happens when I actually do Z-transform through exercises.""",,,1
D-2022_U44,"""About Z transform""","""Z transform""",,,,1
D-2022_U45,"""Z transform""",,"""How to find the area of ​​convergence, absolutely countable, infinite sum of absolute values ​​= no Fourier transform""",,"""The content of today's class was difficult, so I want to understand it properly through assignments.""",1
D-2022_U47,,,,,"""When I didn't have an image in my head, I became more and more confused.""",1
D-2022_U50,,,"""About the difference and necessity of one-sided Z-transformation and two-sided Z-transformation. Expression of convergence condition.""",,,-3
D-2022_U51,"A ""discrete-time signal"" is obtained by sampling a continuous signal at a sampling period T and extracting it as a series {x(nT)} of sample value signals.
Also, the Z-transform is a Laplace transform of a discrete-time signal, and transforms from the time domain to the complex number domain. """,,,,"""Because I can learn the necessary information and mathematics according to the flow of A/D conversion, I was able to listen to the class while understanding what I was studying for today.""",1
D-2022_U52,"""The discrete version of the Laplace transform is the Z transform.
The convergence region is the range that does not diverge in the form of lim(n→∞)Σ. """,,,,,1
D-2022_U54,"""There were a lot of new things this time, so it was a little tough.""",,,,,1
D-2022_U55,"""The z-transform is a discrete-time Laplace transform of a causal sampled signal. However, the two-sided z-transform can also handle non-causal signals. Depending on the value of z in the z-transform, convergence does not occur. In addition, when X(z) is a ratio of polynomials, the value of z that makes the denominator 0 is the pole and the numerator is 0 The value of z at which","""I was able to understand the z-transform.""",,,"""Interesting.""",1
D-2022_U56,,,,,"""I want to study so that I can have an image of z-transform.""",1
D-2022_U58,,,"""I didn't understand what the application of the Z transform was.""",,"""The content of this class was something I had learned in another lecture last year, so I was able to review it thoroughly.""",1
D-2022_U60,,,,"""Nothing in particular.""","""I thought z-transform was difficult.""",1
D-2022_U61,,"""I understand the difference between the Laplace transform and the Fourier transform.""","""I didn't understand the difference between the Laplace transform and the z transform.""",,,1
D-2022_U62,,,,"""Nothing in particular.""",,1
D-2022_U65,"""About Z transform""","""Solving the z-transform""","""The meaning of z-transform""",,"""I didn't quite understand what the z-transform represents, so I'll review it.""",0
D-2022_U66,"""I learned how to do the Z transform""",,,,,-1
D-2022_U67,,,"""I didn't know the proof of the result of the Z-transform""",,,0
D-2022_U69,,,,"""About page 4 of the document,
x(n)=Σx(k)δ(n-k) and
I don't understand the difference from x(n)=Σx(k).
Isn't it possible not to apply the unit impulse train as shown in the formula below? ""","""I have to review the recordings and review them thoroughly.""",1
D-2022_U7,"""About Z transform""",,,,,1
D-2022_U70,"""Discrete signals can be represented by a sequence of numbers, and can be analyzed by performing a z-transform.""",,,,,-3
D-2022_U72,"""I learned how to do the Z transform of a discrete signal""","""How to do Z transform and condition of Z value""","""I didn't understand the difference between the Z transform and the Laplace transform""",,,1
D-2022_U74,,,"""The one that becomes 1 when it becomes a complex number""",,,1
D-2022_U75,,"""It turns out that the Z-transform is used for discrete-time signals and is computed using the Laplace transform.
I found the definition of causality.""","""I couldn't explain concretely about the convergence condition.",,,-1
D-2022_U77,"""About the z-transform.""","""Rough description of Z-transform. Area of ​​convergence. Concrete example.""","""Comparison of Fourier and Laplace transforms""",,,1
D-2022_U80,"""Today's topic was continuous-time signal sampling""",,,,"""I think this pace is good for the progress of the class""",0
D-2022_U83,,"""Laplace transform""","""Z transform""",,"""I don't really know what I'm doing now""",1
D-2022_U84,"""About Z transform""",,,,"""This time was also difficult, so I want to review.""",1
D-2022_U85,"""Explanation that a discrete-time signal can be analyzed as a sequence, the Z transform.""",,,,"""I was late in putting together my lecture notes, so I couldn't get around to other lectures, assignments, etc.""",1
D-2022_U87,"""How to Represent Sequences of Discrete-Time Signals Using Z-Transform""",,,,,1
D-2022_U89,"""In this lecture, we learned Laplace transform and Z transform.
After that, I learned the convergence area of ​​Z transform and deepened my understanding with examples. ""","""I was able to understand the Laplace transform and the definition of the Z transform.
In addition, I was able to understand how to obtain the Z transform. ""","""I had a vague understanding of terms such as zeros, poles, and orders, so I would like to understand them together with transfer functions in future lectures.""",,"""In this lecture, we learned Z-transform and Laplace transform, which are important for learning control engineering.
Therefore, I strongly felt that applied mathematics is connected in various fields. """,1
D-2022_U9,,,,,"""I'm glad I learned about important z-transforms today.""",1
D-2022_U90,,"""A signal that cannot be handled by the Fourier transform can be handled by the Laplace transform.
The Laplace transform deals with time-decayed signals by multiplying them to make them absolutely summable.
In the z-transform, the value of z is appropriately selected and handled by convergence. """,,,,1
D-2022_U91,,,,,"""Last time we learned the Fourier transform, and this time we learned the Z transform, so there are more things to understand, so I felt that if I didn't review them thoroughly, I wouldn't be able to understand them. I deepened my understanding through notes, exercises, etc. I want to continue.""",1
D-2022_U92,"""About the z-transform.""",,,,,1
D-2022_U93,,"""The z-transform is used to analyze discrete-time systems
""",,,,1
