userid,今日の内容で、分かったこと・できたことを書いてください,今日の内容で、分からなかったこと・できなかったことを書いてください,今日の内容を自分なりの言葉で説明してみてください,今日の授業の感想や反省を書いてください,質問があれば書いてください
B-2020_U10,,,,近所で小学生たちがギャーギャー騒ぎながら遊んでいたので少し集中できなかった。,
B-2020_U13,共通鍵暗号と公開鍵暗号の違いや、いかにして情報を守るための工夫がなされているか理解できた。,TLSの仕組みが難しかった。,,,
B-2020_U15,,,情報セキュリティとは、機密性、安全性、完全性を維持することである。暗号には共通鍵方式と公開鍵方式があり、共通鍵方式は昔から使われており、公開鍵方式は現在の情報通信でデジタル署名に応用されるなど多く使われている。共通鍵方式と公開鍵方式を組み合わせたものもある。秘密鍵以外の情報が知られても安全でなければならないという原理に基づいて、物理的安全性や情報理論的安全性、理論的安全性などを持った暗号が考えられてきた。,,
B-2020_U16,,,,,共通鍵暗号と公開鍵暗号のハイブリッド方式について、図では理解し難い部分がありました。具体的に、どのように利用しているのかを教えて下さい。
B-2020_U18,共通鍵と公開鍵の仕組みがよくわかった。,,,,
B-2020_U19,暗号化の方法を知ることができた。暗号化についての歴史、方式、それぞれの形式がもつメリット・デメリットを理解することができた。,自分はネット上の暗号がどのようなものなのかを無意識に利用してきた。実際に身近で用いられている暗号について分からないことが多い。,"現代までに、さらなる脅威から情報を守るために暗号技術が緩やかに発展し続けてきた。暗号技術について理解する上で機密性、完全性、可用性、共通鍵方式、公開鍵方についての理解が重要である。
・機密性：アクセス制限により外部へ情報が漏れないようにすること。
・完全性：情報を無事に守ること。状態の確保をすること。
・可用性：内部の人間が自由に利用できる利便性の確保のこと。
・共有鍵方式：古くからある方式。鍵を事前に共有する必要があり、安全に共有できるかどうかのリスクが生じる。情報の行き来は速やか。
・公開鍵方式：暗号鍵と復号鍵が必要で、前もって鍵えお共有するリスクがない。秘密鍵により制御できる。情報に行き来に時間がかかる。
（どちらの型式もそれぞれのメリット・デメリットを持つ。また、安全性を高めるために２つの鍵方式を取り入れたハイブリッド型もある。）",,
B-2020_U20,,,暗号が現在どのように使われているかを理解しどのような方法があるかを理解する。,,
B-2020_U21,,,,httpsのｓがセキュリティのｓであることは知らなかったので、これからサイトを閲覧する際にはそのサイトのセキュリティにも気を配る等に心がけようと改めて思った。暗号だけでなく安全性の考え方にも三つ種類があること、それぞれの考え方に基づいた暗号が存在することを知った。,
B-2020_U22,暗号には膨大な種類があり、そのそれぞれに良い点と悪い点の両方が存在する事が分かった。また、用いる秘密鍵の安全性の証明も行われ、何重にも安全性のチェックが行われていることも理解できた。,,情報の安全性を保持するために、様々な暗号方式やそれに用いる関数等を考えてきた。また、現在主に使われているのはハイブリッド方式という共通鍵暗号方式と公開鍵暗号方式の良い点を組み合わせたものである。,ハッシュ関数など暗号の仕組みや用いられている技術自体にも興味が湧いたため、自分で調べてみようと感じた。,
B-2020_U23,,,情報セキュリティは機密性・安全性・可用性の三大要素で構成されており、万全なセキュリティ体制を敷くにはこの三大要素の比重バランスが重要である。,,
B-2020_U24,,,,"暗号が自分の知らんない間にこのようなほど複雑になっていたのがとても驚きました。直接暗号と触れ合う機会はそんなにないのであまり想像できませんでしたが、暗号などを使って、情報を守ってくれる人はすごいと思いました。
",
B-2020_U27,公開鍵などを作る際に認証が必要だということ。また、認証が出ていたとしても安心していいわけではないということ。,,情報に関するセキュリティにおいて維持されなければならないこと・暗号の種類や仕組み,,
B-2020_U28,私たちが普段使っているセキュリティーのシステムには精密なものが使われていることがわかった。,,情報をまもるためにいろんな暗号がある。現在は計算式を使って解読に膨大な時間がかかるものが使われているが、古くから知恵を使った他者が解くには時間がかかるものが編み出されてきた。,,
B-2020_U29,"情報理論的安全性は絶対に解読できない安全性　ワンタイムパッド暗号
計算量的安全性は計算に時間がかかりすぎて実質解読不能な安全性
物理的安全性は物理現象を利用した安全性　量子暗号など
共通鍵暗号　暗号鍵と復号鍵が同じ　鍵を相手に渡す過程で鍵を盗まれたら終わり　処理が速い　ブロック暗号　ストリーム暗号
公開鍵暗号　暗号鍵と復号鍵が違う　鍵を渡す必要がない　処理が遅い　RSA暗号　エルガマル暗号
受信者が先に公開鍵と秘密鍵のペアを作って、公開鍵だけ公開　暗号化されて送られてきたら秘密鍵で復号
ハイブリッド方式　共通鍵を公開鍵方式で送ってその後は共通鍵方式
デジタル署名　公開鍵暗号化を逆に使って本人証明
秘密鍵と公開鍵は結局どっちを手元に持っておくかの違いだけ　役割を入れ替えても使える
ハッシュ関数　ある長さのデータから固定の長さのハッシュ値を返す関数　
TLS 情報の暗号通信のための仕組みの取り決め
サーバー証明書　正当な公開鍵かを認証局で証明してもらう",,"情報セキュリティの三大要素　機密性　完全性　可用性
機密性とは許可された人だけが情報にアクセスできること
完全性とは情報が破壊、改竄されていないこと
可用性とは情報にアクセスしたいときにいつでもアクセスして使えること
共通鍵方式では送受信者が共通の鍵を持ってやり取りする方式
公開鍵方式では送信者は公開鍵、受信者は秘密鍵でやり取りする方式",,
B-2020_U31,,,情報セキュリティの機密性はアクセスの制限、完全性は改竄や消去されないこと、可用性は認められた人がいつでもアクセスできることである。共通鍵暗号は暗号鍵と複合鍵が同じで処理スピードが速い。一方で公開鍵暗号は暗号鍵と複合鍵が異なり、鍵の共有がないという長所と処理速度が遅いという短所がある。,,
B-2020_U32,,,,公開鍵、共通鍵方式もこれに基づいている計算量的安全性は、量子コンピューターなどの登場によって簡単に脅かされてしまうのではないか、と心配になりました。,
B-2020_U33,,"公開鍵暗号がわかりずらかった。
",,"暗号の話はとても面白かった。
調べたらそれを題材にした 映画が出てきたので見てみたいと思う。
シーザー暗号で友達とやり取りするのも楽しいと思った。",
B-2020_U34,Webサイトにいつも表示されている鍵マークは通信が暗号化されていることを示すものだったとわかった。,TLSの仕組みがよくわからなかったのでもっと調べてみようと思った。,,,
B-2020_U35,,鍵の名前が似ていて、勘違いしそう,,,
B-2020_U36,普段の何気ないインターネット上のやりとりの中で行われていることが大まかにわかった。,,,以前から気になっていたhttpsの意味を知ることができてよかったです。,
B-2020_U37,情報を安全に保持し、伝える上で暗号化における鍵の利用がされていることがわかった。,,,,
B-2020_U38,,後半の予習が追いつかなかったものあって共通鍵暗号と公開鍵暗号があやふやになっている部分がある。,,暗号もその使われかたや使う人数、データの重さなどいろいろなことが関わり、適不適があるのだということを十分に知れる授業となった,
B-2020_U39,普段使っている電子的なサービスの通信は様々な暗号によって守られているということが分かった。,,,インターネットを使っている時によく目にする”https”の意味を初めて知った。知らないうちに行われている通信も様々な暗号で守られていることは分かったが、中には守られていない通信もあるようなので今後は安心せず気を付けてインターネットを使っていこうと思った。,
B-2020_U4,"数学が現実的に役立っている良い例だと思った。エマニエル暗号は少し感動した。
共通鍵暗号や公開鍵暗号の仕組みを知ることで、それぞれの弱点と安全性を理解できた。
公開鍵自体の証明や共通鍵の安全な受け渡しなどセキュリティのためのセキュリティが大切だと分かった。",,"情報セキュリティは機密性、完全性、可用性を維持することである。
暗号化また復号化のどちらか一方の手法が分かっても、セキュリティが破られないように様々な暗号技術が使われている。
公開鍵と秘密鍵は一方向性関数の原理から成り立っている。","一番知りたかった暗号の仕組みを表面的ではあるが学べてよかった。
忘れてしまうパスワードをスキャタレー暗号やシーザー暗号を組み合わせて残しておくのも面白いかもしれない。","暗号を作成した本人はその暗号を利用できるのですか？
新しい暗号の開発は進められているのですか？"
B-2020_U40,暗号化の方式はさまざまであり、それぞれ良い点や悪い点があるのでどこを重視するかで臨機応変に対応必要がある。,,,,
B-2020_U41,サイバーセキュリティにおける『暗号』の様々なあり方や性質、仕組みがあるのだと分かった。,,"情報セキュリティを守るための３つの原則として機密性、完全性、可用性がある。
機密性とは、情報へのアクセスを決まった人のみに制限すること、完全性とは情報が完全な形で保存されること、可用性とは好きな時に情報へアクセスできるようにすることである。
暗号には暗号鍵と複合鍵が一致する共通鍵暗号とそうでない公開鍵暗号の２種があり、利便性や速度に違いがある。",私たちは普段意識することはないが、このように快適かつ安全にインターネットを使用することができるのは、今日習ったような複雑な暗号技術に守られているおかげであると思った。私たちの何気ない行動を支えているのは、目に見えない多くの人たちの努力と、これまで築き上げられたの知識の積み重ねによるものだと感じた。,
B-2020_U44,,,,暗号の重要性についてよくわかった,特にありません
B-2020_U45,httpsや鍵のマークの意味を知った。,公開鍵方式が安全であるのかいまいちピンとこない。,,,
B-2020_U46,暗号といっても様々な種類があること。以前学んだハッシュ関数についての理解を深められた。,,情報セキュリティにおいては機密性、安全性、可用性が大切だ。情報セキュリティには四大脅威というものがある。盗聴、なりすまし、改竄、否認のことを指す。暗号は盗聴から情報を守るために使われる。暗号は古代から様々な方式が用いられてきたが、現代においてよく使われているのは共通鍵暗号、公開鍵暗号、そしてそれらのハイブリッド方式だ。共通鍵暗号と公開鍵暗号はそれぞれにしかない利点と欠点があり、組み合わせることで補うことができる。また、なりすましを防ぐために本人確認も重要だ。公開鍵は本人確認のための署名の一つとしても使うことができる。,暗号化、ハッシュ関数など、以前の安全な設定の回と繋がる部分が多かったように感じました。その時のノート、教科書と合わせて復習していこうと思います。,
B-2020_U47,公開鍵暗号と共通鍵暗号の２種類があってそれぞれによって短所長所が反対であること,後半の著名あたりから難しくてついていけなかったです,,,i phone のアプリはappleが認証していると思うのですが、それでも危なかったりしますか？
B-2020_U5,"公開鍵方式や、共通鍵方式といった情報保護のための方式が存在することを知ることができた。
また、情報セキュリティという言葉が持つ意味について理解することができた。",,情報を守るために必要な条件と対策に関しての内容。,,
B-2020_U50,,,,ネット通信のすばやい速度でかなりの暗号化プロセスがあることに驚いた。,
B-2020_U54,,暗号の仕組みが難しく、どの場面でどの暗号を使うべきなのか判断するのが難しいと思った。それぞれの暗号の特徴をもう一度見直したい。,,共通鍵暗号や公開鍵暗号など、さまざまな暗号の仕組みを知ることができた。自分の情報を自分でしっかり守るためにも、暗号の仕組みを知ることはとても重要だと思った。自分たちの生活は、暗号技術に大きく支えられていると気づくことができた。,
B-2020_U56,,それぞれの暗号の詳しい仕組みについて理解できなかった。,,様々な暗号が広く浅く取り扱われていたので、暗号は奥が深いものなのだなと思いました。,
B-2020_U57,"暗号は過去にゆっくりとした発達、近年には急速な発達を経て、今の暗号技術に到達した。現代に不可欠なのは、公開鍵暗号である。
共通鍵暗号・公開鍵暗号それぞれに長所・短所がある。いいとこ取りをしたハイブリッド方式が一番理想的な暗号方式。",,,教科書の中に出てきた『エニグマ』の発明について、高校時代、情報の授業で映画『イミテーションゲーム』を見たことで、より今回の授業内容に興味をもって聞けたので良かったです。,
B-2020_U58,どのような暗号の鍵があるのかが分かった。,,暗号の機密性、安全性、可用性について理解する。,,
B-2020_U59,,,,様々な暗号があり、それぞれに利点や欠点があることがわかりました。また、暗号の重要さがわかりました。ハッシュ関数やその他の難しい暗号を作り出せる人はすごいと思いました。,
B-2020_U6,情報を守るために、様々な方法でたくさんの技術が使われていることがわかった。,,,今回の内容は少し難しくて、細かい仕組みはあまり理解できなかったけど、なんとなくの仕組みについては理解できました。いくら新しい暗号を開発してもどんどん追いつかれてしまうので、情報を守るというのは本当に難しいことだなと思いました。,
B-2020_U60,,,,最近話題のデジタル署名のシステムがわかって面白かった。,
B-2020_U61,"スキュタレー暗号、シーザー暗号、エニグマは聞いたことがあった。
暗号化のための暗号鍵、復号化のための復号鍵を用いる。",,,証明書やウェブの暗号化など普段目にすることのできるところに今後はもう少し目を向けていきたい。,
B-2020_U62,,,,,特にありません
B-2020_U64,,共通鍵暗号と公開鍵暗号のいいとこ取りをしたというハイブリッド方式の仕組みがわからなかった,安全性の種類、暗号技術の種類や長所短所、歴史,もう一度復習をしようと思う,
B-2020_U65,暗号の鍵の様式が一つではなく様々なものがあること,TLSプロトコルの仕組み,情報には4大脅威があり、それらから守るためのセキュリティとして暗号がある。暗号には共通鍵暗号や公開鍵暗号などがある。これらにはそれぞれメリットデメリットがあるので、いい点をとったハイブリッドなものも考えられたりしている。公開鍵暗号を利用してデジタル署名などが改竄されないようにすることが可能になっている。,,
B-2020_U67,,,暗号技術,,
B-2020_U68,,,,複雑な工程を経て暗号の安全性が守られているんだなと感じたと共に自分自身でも情報を守っていく必要性を感じた。,
B-2020_U69,,,情報を守るために通信を暗号化し、かつ必要な際にはすぐに情報にアクセスできるように様々な種類の暗号が考案されてきた。,通信の機密性がどのように保たれているのかの多少なりとも理解しネットのトラブルを少しでも回避できるような知識を身に着ける必要性を感じた,特になかったです
B-2020_U73,公開鍵方式と共通鍵方式の違い、メリットデメリットについて理解した。情報セキュリティとは、機密性、完全性、可用性を維持し続けることだと知った。,スライド35の理解が難しかった。,暗号技術について四大脅威に対抗するために用いられている手法を主に学んだ。,,
B-2020_U74,,,,高校で習った内容もでてきて少しは理解しやすかったと思う。パソコンなどの電子機器が普及するにつれて暗号化技術の必要性がさらに高まったのかと感じた。,特にありません。
B-2020_U75,,,暗号技術に関する詳しい話　暗号の種類や利便性,,
B-2020_U76,セキュリティに使われている暗号技術の概要がわかった,セキュリティに使われている暗号技術の概要はわかったが、細かい内容まではわからないものがあった,暗号技術について過去のものから現在のものまで学んだ,,
B-2020_U77,,,情報セキュリティにおける暗号技術の歴史と現在、安全な情報システムを目指しての推移,,
B-2020_U78,,,暗号技術の歴史、安全性の分類、共通鍵暗号や公開鍵暗号といった代表的な暗号技術の仕組みの解説,,
B-2020_U79,日頃使っているインターネットのwebなには、証明書があり安全が確認できることを知った。,全体的に、理解が不十分だと感じた。,情報を守る上で色々な暗号技術が使われており、それぞれが色々な役割を果たしている。,,
B-2020_U8,様々な、暗号技術を組み合わせて、情報が守られていることがわかり、いろいろな仕組みがあることがわかった。,RSA暗号や、エルガマル暗号などがよくわからなかった。,"機密性、可用性、完全性、を理解し、暗号の歴史を学んだ。
また、現代の暗号の安全性を知り、様々な暗号技術の存在を学んだ。",,
B-2020_U80,忘れかけていた、公開鍵暗号や共通鍵暗号の仕組みについて、改めて理解できた。,,暗号の歴史、暗号にはどういったものがあるか、それぞれ暗号の安全性など,次回も真面目に受けたい。,
B-2020_U83,,,,暗号についてはいちど高校の授業で習ったのだが全然理解できなくて、それを今回やるということでしっかりと取り組んでやったら大体の内容はスラスラと理解できたのでとても良かった。,
B-2020_U85,共通鍵、公開鍵、署名、ハッシュ関数,,意識していないが、我々の生活は様々な暗号によって守られている,,
B-2020_U86,証明書や共通鍵、公開鍵の仕組みについて理解できました。,,４大驚異に対抗すべく暗号化の技術が用いられている。これにより、情報の完全性、機密性を実現させることができる。暗号技術は昔から用いられており、時代が進むにつれて様々な方法が生み出されている。,暗号化に素因数分解が使われているのはすごく意外で驚きました。,
B-2020_U87,"ネットが発達しているなかで、暗号化などのセキュリティもどんどん発達していることがわかった。
公開鍵暗号とネットの暗号化と公開鍵基盤の仕組みについてわかった。今まで名前でしか聞いたことがなく、理解したことがなかったので、とてもすっきりした。",,"メッセージを暗号化したり、通信を暗号化する必要性や方法を学ぶ。
暗号化したものを他の人に見られないようにするため、かなり強固な方法が必要。",今回の授業はこれまでのものより少し難しく、理解するまでに時間がかかった。,
B-2020_U89,,,,改竄・盗聴されないためのシステムがあり、そのシステムを改竄されないためのシステムがあり、さらにそのシステムを改竄されないためのシステム....ってどんどんセキュリティが多重化していく様は、煩雑に思えます。もちろん、煩雑なんてことを言っていたら情報など守れないのですが...,
B-2020_U9,,秘密鍵と公開鍵、共有鍵がよく分かりませんでした。,機密性、完全性、可用性を維持することが情報セキュリティを構成する三大要素であり、これらを妨害する4大脅威（盗聴・なりすまし・改竄・否認）を防ぐために、受信者と発信者の間で鍵を使って暗号化し、複合化した。その鍵にも公開鍵方式と共有鍵方式の２パターンあり、互いに長所、短所があるため、ハイブリッド型のものが使われている。,,"秘密鍵＝共有鍵で秘密鍵＝公開鍵の鍵ということですか？
また、公開鍵方式では秘密鍵で公開鍵を作って、その公開鍵で文を暗号化して暗号を秘密鍵で解く方法だと思うのですが、共有鍵方式は秘密鍵だけで暗号化し、復号化するということですか？
"
B-2020_U92,,,"暗号についてどんなものがあるのかそれぞれ長所、短所を教えてもらった


",,
B-2020_U94,共有鍵暗号と公開鍵暗号の仕組み,,機能性と完全性と可用性,,
C-2021-1_U10,"符号語同士がs＋1以上離れているならば、高々s個の誤りについて自動検出が可能である
符号語同士が2t＋1以上離れているならば、高々t個の誤りについて自動訂正が可能である
伝送速度を低下させずにブロック誤り率を下げることは可能である",,,記号や計算式で見るとよくわからなかったが、名前や蟻地獄などの様々な例を通して何回も説明をしてくださったおかげで、ハミング距離によって誤りの自動検出や自動訂正が可能かどうか変わってくるということを理解することができた。,
C-2021-1_U100,自動訂正自動検出ができる時、そしてどうしたらビット反転が少なく相手に情報を伝えることができるか分かりました。,,,,
C-2021-1_U102,,ハミング距離のところがいまいちわからなかった。,,,
C-2021-1_U103,,通信路符号化定理の理解,,,
C-2021-1_U104,,,,始めはよく分からなかったが復習して理解できたのでこれからも頑張りたい。,
C-2021-1_U105,ビットをブロックに分割し、そのブロックのビットの並びを符号後という。ｓ個の間違いの自動検出にはｓ＋１個の違いが符号語にあればよく、ｔ個の間違いの自動訂正には２ｔ＋１個の違いが符号語にあればよい。,ブロック誤り率をへらし、伝送速度を低下させないためにというところまでは理解したが、通信路符号化定理あたりから見失った。,ビットは反転することがある。その誤りを検出、または検出と訂正の両方を行うことができる。3次繰り返し符号では、ブロックにおいて反転が高々１だったとき、自動訂正が可能である。しかし送るビット数は3倍になる。,,1つの符号をｎ次符号化する際にｎ＝２ｋ＋１という奇数にしなくてはいけないのは、もしもブロックの中のビットの黒白が、同数になったときに多数決で決めることができなくなるからですか。
C-2021-1_U106,"高々S個の誤りの自動検出…ハミング距離がS+１以上離れている
高々Ｔ個の誤りの自動訂正…〃　２Ｔ+１以上離れている",繰り返し符号による誤り訂正について,通信路を介する際、ノイズの影響でビットが反転し異なる符号を受信してしまう可能性があるため、反転してもある程度似ないように設計し、自動検出・自動訂正によって対策している。,,
C-2021-1_U107,"自動誤り検出
自動誤り訂正",どれだけ離れていれば検知出来るのか,,,
C-2021-1_U11,符号語どうしがs+1以上離れていたら、高々s個の誤りの自動検出が可能であり、2t+1以上離れていたら、高々t個の誤りについて自動訂正が可能となる。,通信路容量のところがよく理解できなかった。,通信路を介してビット列を伝送すると、ノイズの影響によりビットの反転が起こる。ハミング距離や繰り返し符号によって誤りを訂正することができる。,数式なるとうまく理解ができなかったので、一つ一つをよく確認して理解を深めていきたい。,
C-2021-1_U12,自動検出と自動訂正を絵を見て理解して、式に一般化できる様になった。,"Pb のところ
伝達速度を下げないでやる方法について",ノイズにより白と黒が反転する事があるその時に少し異なっていても訂正できたり、間違いを検証する事ができる仕組みについて,通信路容量の式にエントロピーが関わっている理由が、受け手と送信側に両方に関係するからという理由がとても納得した。,LGCの承認が授業までにされなかったのですが、提出遅れになりますか。
C-2021-1_U13,すでにあるデータをどのようにして自分のものにするかということがわかりました。,模索中です。,,,特にありません。
C-2021-1_U15,現実ではノイズが入ってしまうことがわかった。,"
",今までで一番難しい内容だったと思う。,難しかったので一回復習しておきたい,
C-2021-1_U16,吾一さんと太郎さんの例をとおして誤り検出について理解を深めることができた。,ブロック誤りの式の理解が怪しい。,,,
C-2021-1_U18,,,情報を伝達する際にはノイズが生じるため、これを処理する必要がある。主に方法は二つあり、誤り検出と誤り訂正である。,,
C-2021-1_U19,,情報ビット（４個）＞検査ビット（３個）の時に○○○○●○○と●○○○●○○とどうしても検査ビットが被ってしまうことがあるので、もし前者が謝って後者の情報で受信された時に検出をどうやって行うのかがわからなかった。,,,
C-2021-1_U2,,,符号語どうしがs+1以上離れている時s個の誤りについて自動誤り検出可能であり、2t+1以上離れている時t個の誤りについて自動誤り訂正可能である。ブロック誤り率を小さくしようとすると符号化効率が悪くなるが、方法を変えることでできるだけ効率よく伝達することもできる。,,
C-2021-1_U20,,,,今日は全体的には理解しやすい内容だった。前回までの部分もしっかり復習したい。,（３）の内容
C-2021-1_U23,ｎ次繰り返し符号において、ブロック誤り率は、ｎを大きくするほど小さくなるが、それに伴って符号化効率も小さくなることがよくわかった。メッセージを分割して、検査ビットを付加する理由とその意義がわかった。,,情報伝達の途中で生じるノイズによってビットの反転が起き、正しく情報伝達ができないことがある。そうした場合、反転を検出し再転送してもらう役割を果たすのが自動誤り検出、検出後、修正を行うのが自動誤り訂正である。高々ｓ個の誤りの自動検出は、符号語同士が（ｓ＋１）以上離れていれば可能。高々ｔ個の誤りの自動訂正は、符号語同士が（２ｔ＋１）以上離れていれば可能。,誤り検出や訂正の原理が、テキストにあった名簿の例えによってイメージしやすくなった。情報科学では、数式や定理がよく出てきて、覚えるのは大変だが、どうしてそうなるのかや、数式の意味は割とわかりやすいと思う。,
C-2021-1_U24,名前の呼び間違いの例を通して、誤り検出・訂正ができる条件とハミング距離の関係を理解することができた。,,,,
C-2021-1_U25,誤り訂正の仕組みとそれが可能な時と不可能な時の違い,"3次繰り返し符号、n次繰り返し符号の内容(式とか)
",通信路符号化の影響とそれによる誤りの対策、検出、訂正,予習します,
C-2021-1_U26,例の説明はわかりやすかったが文字が入るとわかりづらかった。,,反転確率やブロック誤り確率,小テスト満点でした。やったー,
C-2021-1_U27,,,ノイズなどにより、ビットの反転が起こることがある。ビットの反転確率が小さくても、ブロック誤り率は大きくなることがある。対策として、通信路を改善する、通信路は何もせずに符号化を工夫する、などが挙げられる。また、誤り検出と誤り訂正があり、円を使って考えるとわかりやすい。,38ページ以降が難しかったので、重点的に復習しておきたいと思います。,
C-2021-1_U28,,,,"名簿やアリジゴクなどわかりやすい例で通信符号化をスムーズに理解できた。
復習をして一般化した式の理解を深めていきたい。",
C-2021-1_U29,ハミング距離のことがわかった。,ありません。, 通信符号化とは何か、誤り検出/訂正の基本アイデア・原理、繰り返し符号、通信路符号化定理、訂正符号について例を参考にしながら学んだ。,,
C-2021-1_U3,"ハミング距離というものがあり、その距離の最小値によって誤り検出、誤り訂正可能なビット反転の個数が決まってくる。
符号の冗長化をすることでハミング距離が大きくなり、許容されるビット反転の個数も増え、ブロック誤り率が下がる。",,"通信路でノイズがあり、符号が反転し得る。そこで符号を冗長化することでその誤りを検出したり訂正することができる。
冗長化させることでブロック誤り率を下げることができるが、伝送速度も下がる。",,
C-2021-1_U30,,通信路符号化定理、検査ビット,,エントロピーがここでもでできて、重要な存在なのだなと感じました。通信路符号化定理のところと、最後の検査ビットがでてきたところがいまいちよく分からなかったので、ちゃんと復習したいです。,
C-2021-1_U31,,,,イメージがしにくいところが多かった。,C＝１－H（ｐ））となる理由がわからなかった。
C-2021-1_U32,ビットの量によって誤り検出、訂正ができないというのが最初はよくわからなったが、名前の例を聞いてよく分かった。間違いすぎているとコンピューターでも訂正ができないので、情報の伝達は難しいと思った。,立式がなぜそうなるのか、よくわからない式がいくつかあったので自分で調べてみようと思った。,情報を伝達する段階で誤りが起こるとき、通信路の符号化によって自動的に誤り検出、誤り訂正をすることができる。,先週よりわからないことが少しあったが、来週から内容が変わっていくのでしっかり復習しておきたい。,
C-2021-1_U33,情報量を増やせばブロック誤り率を下げることができるが、その分容量が大きくなって送信する時間が長くなってしまうというデメリットを解消できる方法があることが分かった。（できるだけ符号語間のハミング距離を大きくして、mの情報量にいくらかの情報を加えてnの情報量にする。）,情報を加えてnにするとき、元の情報mによって加える情報の量も変わるのかわからなかった。,"符号語どうしがa+1以上離れているなら、高々a個の誤りを自動検出できる。
符号語どうしが2b+1以上離れているなら、高々b個の誤りを自動訂正できる。
符号化効率が大きく、ブロック誤り率が小さい符号も作れる。",,
C-2021-1_U34,,,,今回の授業はきちんと理解することができたので、復習をしてそれを定着させたい。また、これを続けたい。,
C-2021-1_U35,誤り検出、誤り訂正については例のレベルからわかりやすく説明していただいたおかげで、その仕組みがよく理解できた。,,誤り検出・誤り訂正のメカニズムについて学んだ。また、繰り返し符号を用いた考え方も紹介された。加えて、通信路符号化定理も学習した。,誤り自動検出や訂正についてはとても便利なシステムでありながら、その仕組みを考えたことはありませんでした。しかし、今回そのような話を聞いて、「なるほど」と思い、とても興味深いものでした。,
C-2021-1_U36,"・（考察）山田吾一さん、山田太一さんがいる中で山田洋一さんなら検出はできる→円の共有点上＝自動検出可能！
・ハミング距離＝同じ長さの2つのビット列に対し、何ビット異なっているか
・自動検出：符号後同士がs+1以上離れているときs個の自動検出が可能
・自動訂正：符号後同士が2t+1以上離れているときt個の自動訂正が可能
・nを大きくすればブロック誤り率は小さくなるが、符号化効率も低くなる
・通信路容量＝符号化効率の上限（いくらでも近付けられる）",とくにありません,"・通信路におけるノイズの影響→ビットが反転してしまう
・ノイズの影響をどうするか→符号化を工夫して自動検出、自動訂正
・自動検出、自動訂正はどのような場合に可能なのか",「間違いの検出」を理論的に考えることができて興味深かったです。特に、何個以上文字が違っていれば検出・訂正できるというのを図で考えると非常にわかりやすかったです。英文法のエラーを自動で直してくれるアプリがありますが、今回の内容も含んでいそうだなと思います。,
C-2021-1_U38,自動訂正は自動検出の上位互換だということ。教科書のように円がかぶっているとどの符号語に転ぶか分からない、つまり自動訂正可能でないということ。自動訂正可能にするために2t+1以上離れている必要があること。,,自動検出・自動訂正ができる条件とハミング距離との関係。,,
C-2021-1_U39,ハミング距離については理解できました。,ブロック誤り率の計算がまだ理解しきれていないので、復習をしっかりとしたいと思います。,,,
C-2021-1_U40,自動検出ができる場合とできない場合、自動訂正ができる場合とできない場合,,符号語どうしがs+1以上離れているならばたかだかs個の誤りについて自動検出が可能で、符号語どうしが2t+1以上離れているならばたかだかt個の誤りについて自動検出が可能。,たとえがなかったら今日の内容は分からなかっただろうと思うから、名前の間違い方や蟻地獄の例があって良かった,
C-2021-1_U41,ブロック誤り率の計算方法や符号化をすることで反転するブロック誤り率を小さくすることができることがわかった。,,,n次繰り返し符号など一般的な場合におけるブロック誤り率まで理解できたのでよかったです。,
C-2021-1_U43,,検査ビット,,課題の範囲の理解が浅いと思われるのでもう一度スライドを見直してから課題に挑みたい。,
C-2021-1_U44,"ハミング距離はわかった。
",蟻地獄の例えがわからなかった。,,"自動検出と自動訂正の仕組みがわかった。
来週も頑張りたい。",
C-2021-1_U45,"ハミング距離など、今回の授業は大体理解できたような気がします。
",最後の訂正記号などのところがいまいち理解できたいないような気がするので、また見直そうと思います。,"各ブロックを冗長化して、自動誤り訂正しやすくする。
符号語同士がs+1以上離れているならば高々s個の誤りについて自動検出可能。
符号語同士が2t+1以上離れているならば高々t個の誤りについて自動訂正可能。","ハミング距離などは大体理解できましたが、演習をする前にもう一周見直そうと思います。
蟻地獄の例えがわかりやすかったです。",
C-2021-1_U46,自動誤り検出や自動誤り訂正があるので、通信路符号化は少しくらい間違ってもいいということが分かった。,ハミング距離というのがよく分からなかった。,通信路符号化とは何か、また誤り検出や訂正の原理についての内容だった。,,
C-2021-1_U47,蟻地獄の例を見て、自動検出ができるかできないかわかりやすかった。,最後のところのエントロピーが出てきたところで頭がこんがらがってしまったので復習をしておきたいと思います。。,ハミング距離の条件により、自動訂正や自動検出のできる範囲が決まっている。,情報化の検知の仕方や仕組みがよくわかって楽しかったです。,
C-2021-1_U48,誤り訂正の定理を理解した。2t＋1、ｔの関係が大切であることを把握した。,通信路符号化定理を完全に理解することができなかった。,通信路符号化は誤りの検出、訂正ができ、信頼性の向上が期待できる。,講義が進むにつれ専門用語が増えてきてなかなか理解し辛くなってきた気がする。予習復習が大切だと改めて感じた。,
C-2021-1_U49,"・送られる符号を冗長化すれば自動で誤りを検出、訂正しやすくなるが、その分通信量が増え、効率が悪くなる。
・通信料が増えれば増えるほど符号が誤って送られる確率は減る。
・ハミング距離-1までなら誤りを検出でき、ハミング距離の半分未満なら訂正が可能。
・多数決記号は奇数でないと成立しない。",・誤り率はブロックのサイズに起因するので、送信する総情報量が同じなら、ブロック分けしない方が誤り率が小さくなっていいと思ってしまいあまり納得できない。,"・送信された符号はノイズよって反転してしまう（反転確率<p>）
・ブロック誤り率・・・1-（1-p）^k　　　　（k・・・ブロックのサイズ）
・ハミング距離・・・符号語同士が同じ列で比べたときどれだけ異なっているか
・ハミング距離-1までなら符号の誤りを検出できる。
・ハミング距離の半分未満までなら訂正できる。
・何次繰り返し符号の場合でも当てはまる。
・誤りを検出、訂正できるようにするために、送信される符号の各ブロックに検査ビットを付け足す。
・検査ビットを付け足しすぎると、効率が悪くなる。",予習をせずに授業に進んでしまったので、再度教科書を読み返して、やっと理解できたって感じなので、予習をやってから授業にのぞむようにする。,
C-2021-1_U50,通信路符号化について具体的なイメージを持てた。ハミング距離が理解できた。,,通信路符号化がどのようなものか知り、誤り検出、誤り訂正についての理解を深める。例を参考にしながら、誤り検出、誤り訂正を繰り返し符号などを用いて求めることができるようにする。,,
C-2021-1_U51,ノイズなどの誤りを、一定の条件を満たせていれば自動的に対処できるという事が分かりました。,ブロック誤り率の式がなぜそうなるのかが分からなかったです。,情報の伝わり方と、伝わる際に生じる誤りの対処方法を学びました。,「誤りというものは時々起こるものである」という事を利用して、情報を、多数決の原理を用いて上手く処理していることに感動しました。,
C-2021-1_U52,ハミング距離、自動検出可能かどうかなど,特になかった,情報をいかにていせいできるか,teamsに入室できなかったので、友人にline電話で繋げてもらった。　,
C-2021-1_U53,蟻地獄の例が分かりやすかったのでハミング距離や符号語同士の重なりについてよく分かりました。,１２８個のビット列のうち１６個のみが符号語になるのはどうして１６個だけなのかがよくわかりませんでした。３２個でもいいんでしょうか。,符号語同士の間にある一定の定義の距離があれば誤りを訂正することができる。誤り率を下げるためには、３次４次と次元を多くしていけば良いが、その分データが多くなってしまう。それを任意定数を利用することで改善することができる。,"途中で教授の話を聞きながら、誤り率を減らしつつ、データを増やさないようにする方法はないのかなと思っていましたが説明してくださった内容に実際にあることがわかり、とても驚きました
今日の授業は情報量が多かったのでもう一度スライドで見直そうと思います。",
C-2021-1_U56,,通信路容量の定義について理解しきることができなかった。,,マーカーの使用率は高いが、分かった分からなかったボタンはあまり利用できていないので、今後の講義でしっかり活用していきたい。,
C-2021-1_U57,ハミング距離について,計算,,,
C-2021-1_U58,人名やありじこくといった例によって、誤り訂正と誤り検出がどのような状況で使われるかをイメージすることができた。,,通信路符号化において、途中を工夫することでブロック誤り率を下げることができる。そして、自動誤り検出と自動誤り訂正を用いて符号化の失敗を防ぐことができる。また、符号の冗長化によっても防ぐことが可能である。,,
C-2021-1_U59,"符号語どうしがs＋1以上離れているならば、高々s個の自動検出が、2t＋1以上離れているならば高々t個の自動訂正が可能になる。
n次繰り返し符号（n=2k+1,kは任意の整数）において、各ブロックのビットの反転がk以下ならば誤り訂正が可能になる。",通信路容量、通信路符号化定理,"通信路を介してビット列を伝送する際、ノイズの影響によりビットの反転が起きる。
通信路符号化を行うことで反転が起こっても自動誤り検出や自動誤り訂正が可能になる。",,
C-2021-1_U60,,,送信した文字列に対して様々な要因でノイズが入り符号の反転が起きることがある。通信機器の物理的な大きさなどでも符号の反転が起きる確率を下げることはできるが、通信方法を工夫することによっても（符号が反転してしまう）確率を下げることはできる。,勉強になった。,
C-2021-1_U61,,反転確率とブロック誤り率はどこが違うのか。,色々な方法でノイズを除去できるのはできるが、お金が凄くかかる。だから、自動で誤りを検出、訂正する。それとちょっと長めに符号語を設定すると、一部分だけ間違っても他の部分で類推できる。,ハミング距離というものが最初難しいものだと思ったが、ただの間違い探しと考えればすぐに理解できた。,
C-2021-1_U62,誤りの訂正をするためには条件が必要となる,,万一の誤りのために符号に様々な工夫がなされている,予習をもっとしっかりやるべきだと思った,
C-2021-1_U63,"自動検出→はミング距離がt＋１以上離れている時、高々t個の誤りについて自動検出可能
自動訂正矢印ハミング距離が2s＋１以上離れている時、高々s個の誤りについて自動訂正可能
",,"情報を符号化し元に戻すときノイズにより誤って検出することがあるがハミング距離を考慮することで自動で誤りを検出したり訂正することが出来る場合がある。
ブロック誤り率を定義するとビット数を増やすことでいくらでも小さく出来るが伝達速度が遅くなる。",最初自動訂正と自動検出の違いがよく分からなかったが、蟻地獄の例えがとても分かりやすく腑に落ちた。,
C-2021-1_U64,,,ビット反転による誤りの起き方と、その訂正。,図がとてもわかりやすく理解できた。,
C-2021-1_U65,,,,蟻地獄の例がわかりやすかった,
C-2021-1_U66,,未だにエントロピーを理解しきれてないのでそちらをしっかり把握する必要があります。,情報源の符号化だけでなく通信経路の方にも適切な処理が必要ということ,,
C-2021-1_U68,,,情報伝達においてノイズが入ることがあるため、情報を正しく伝達するためにも自動訂正や自動検出がうまく機能することは重要である。,普段自分がネットを利用している際に不自然な文章などを発見したことはないのは、誤りの自動検出や自動訂正が機能しているからなのか、実は気づいていないだけで不自然なところは意外と紛れてるのか気になった。,ハミング距離なのに個数なのは何故なのか。
C-2021-1_U7,"誤りを訂正、検出、またはどちらもできない条件を図や式を使って理解することができた。
繰り返し図を思い出してそれに当てはめて考えることができた。",,,"情報を送信するとき、通信システムは機械だから間違えずに送られると思っていたが、少しの間違いなら大丈夫だということが意外だった。
",
C-2021-1_U70,計算だけできたが理解は全くできていない,ほとんど全部,,途中で集中力が切れてしまい内容が入ってきていないので次から気をつけたい,
C-2021-1_U71,"ハミング距離を用いることで, 通信路の途中で生じる符号語の誤りを検出したり, 訂正するメカニズムを学ぶことができた. ",特にありません. ,"符号語の誤りを検出, 訂正するための十分条件をハミング距離を用いて与えた. 
ビットの反転確率を元に, 通信路容量を定義した. 
通信路容量はブロック誤り率をいくらでも小さくできるような符号化効率の上限を与える. (通信路符号化定理)
","日常の通信の裏側にこのような理論があるということを学べるいい機会になりました．
シャノンさんの偉大さを感じました. ",
C-2021-1_U72,誤り検出ができる場合とできない場合の違いが一番すんなり理解できた。,教材を最初開くのを忘れたまま受けてしまった。,通信路符号化について、ビットがノイズの影響を受け反転すること、誤りの検出と訂正,次回は教材を初めから開いて受けたい。,
C-2021-1_U73,,,,具体的な数字を使って考えてから一般化するとわかりやすかった。ハミング距離を最初に見たときは難しそうに感じたが、定義を知ると難しくないことがわかった。,
C-2021-1_U76,"情報がノイズなどで間違って伝送された時に誤りを検出したり、訂正したりできる。
","今日の内容は例なども多くてわかりやすかった。
",情報の誤りを検出、訂正することができる,,
C-2021-1_U77,符号の誤りをどのように検出・訂正しているのかわかった。,,通信の誤りの検出と訂正、通信符号化定理について主に学んだ。,おおよそ理解できた気がします。,
C-2021-1_U78,誤りや訂正の検出について,,情報の符号化について,,
C-2021-1_U79,情報が誤って送られないようにするためにとても革新的な方法があるのだとわかった。,,,普段携帯などを使ってメールを送ったりする際に、送られてきた情報が誤っていたことなどなかったので、情報が間違って送られてくるというのはある程度はしょうがないという解釈をすんなりと理解できませんでした。情報が誤って送られても支障がないようにさまざまな工夫がされているのだとわかりました。,スライド46でメッセージをmビットに分割する。と書いてあり、符号化効率がR=m/nとあります。つまり分割するビット数が多ければ多いほど富豪か効率が良くなるということになると思います。もしそうなのであれば分割せずに検査ビットを後ろにつけるという方法が最も符号化効率が良いということになります。だとするならばメッセージを分割するのはなぜなのでしょうか？
C-2021-1_U8,,,,計算の部分の復習の必要性を感じた,
C-2021-1_U80,,三次繰り返し符号のブロック誤り率の式がなぜそのようになるのかが分からないです。,,,
C-2021-1_U82,"通信路を介してビット列を送る時にはノイズの影響でビットが反転してしまうということ。またその対策として通信路や符号を工夫するという方法がある。
",,通信路とは何かやノイズのビットへの影響とその対策,,
C-2021-1_U83,通信路符号化の内容は理解できた。名前で探す例えも分かりやすく、原理が存在することに驚きだった。,,符号語同士の離れ具合によって、誤り検出、誤り訂正ができるかできないかが変わる。,,
C-2021-1_U84,ハミング距離については理解できた,,符号の誤りの検出や訂正が可能な範囲について,,
C-2021-1_U85,ノイズによってどのようにして情報が変化し、それを修正するためにどのような機能が用いられるのかがよくわかりました。,,情報を伝達する際、ノイズの影響で、符号が反転し、情報が変わってしまうことがある。そのための対策としては、電力を上げるなど、さまざまなことがあげられるが、その中の、自動検出訂正がとても大切だ。それぞれ符号の列の中を比較した時の、異なる符号の数をハミング距離という。このハミング距離によって、どれくらいまでの誤りなら検出、または訂正できるかが変わってくる。,蟻地獄の例が、すごくわかりやすかったです。今まで、ノイズによって具体的にどのような影響が情報に与えられるかなんて考えたこともなかったので、今日の授業はとても面白かったです。ハミング距離という、また新しい単語が出てきて、混乱しそうですが、しっかりと自分のものにしていきたいです。,
C-2021-1_U86,"ハミング距離の出し方と符号語同士の距離はある程度必要だということ
",誤りが起きないやり方は、先生でもわからないなら自分には到底わからないとおもった　,通信路の符号化と謝り検出訂正について,前回日誌を（第何回）の表示を見らずに一回目の上書きをして提出してしまったので、うまくできてよかった,
C-2021-1_U87,高々t個の誤り訂正については、蟻地獄の考えですぐに理解できた。ノイズの影響を小さくするためには情報量を増やす必要があることがわかった。,通信路符号化定理についてはよくわからなかった。,情報を送る際、必ずノイズが発生する。そのノイズによる影響を小さくするために冗長化や繰り返し符号などを活用する。ただ、ブロック誤り率を小さくしようとすると情報量が増加し、効率が落ちてしまう。,図の説明がすごくわかりやすかった。,
C-2021-1_U88,"自動誤り検出と、自動誤り訂正の違いが理解できた。
",43ページ以降からまだ理解できていない部分がある。,"自動誤り検出
ビット反転があったことを検出し、再送してもらう。s+1以上離れているとき、sこの誤りについて検出可能。太一→太郎or吾一　判別までは不可能。
自動誤り訂正
誤りを検出した後に訂正まで行う。2t+1以上離れているならば、tこの誤りについて訂正可能。太一→吾一訂正可能。
繰り返し符号による誤り訂正
多数決により推定する。誤りは減るが、情報量が増えてしまう。",今日も授業はかなり理解できたと思う。最後の方はまだ怪しいが、何度も復習するようにしたい。,
C-2021-1_U89,"自動誤り検出とはビット反転があったことを検出し再送してもらうこと。
自動誤り訂正とは自動誤り検出の後ビット反転を訂正すること。
",,,,
C-2021-1_U9,(1)に同じ,ハミング距離の最小の意味がわからない。,,,
C-2021-1_U90,ハミングきょりによる情報の訂正の可能性がわかった,,今回の授業は、比較的わかりやすかった,課題の提出漏れに気をつける,
C-2021-1_U91,通信路符号化のやり方がわかった,符号化の計算がむずかしい,"通信路符号化のやり方を学んだ
符号化の計算がむずかしい",毎回新しいことを学んでおり理解が追いついているのか不安,
C-2021-1_U92,誤りの自動検出・自動訂正が可能な領域についてなどが分かった。,通信路容量Cが難しかった。,"通信路符号化についてだった。
情報科学の情報分野の最後の授業だった。",,
C-2021-1_U93,ハミング距離についてすこしだけわかった。,通信料容量がわからなかった。,メッセージを送る時に生じる符号化,だんだんわからなくなってきて焦りました。,
C-2021-1_U94,,,ビットの反転を防ぐ方法とそれが可能なときはどんな時か。,"誤り検出はできても訂正ができないこともあるのだと分かった
３次繰り返し符号は確立みたいだと感じた
ビット反転はなんとなくあまり怒らないイメージだったがビット反転確率が低くてもkが大きいとブロック誤り率は大きくなることに驚いた。",
C-2021-1_U95,"・符号語どうしがs+1以上離れたいるならば、高々S個の誤りについて自動検出が可能。
・符号語どうしが2t＋１以上離れているならば、高々t個の誤りについて自動訂正が可能。",,通信路を通るときに、ノイズの影響によりビットが反転することがある。それを訂正する方法を学んだ。,,
C-2021-1_U96,"誤りの検出・訂正の原理。
",,情報の通信の過程において、誤りが混じってしまう。この誤りを見つけて直すために、情報の1カタマリを似かよらせない必要がある。ただ、無闇にカタマリを大きくしてしまうとデータ量が増えてしまうため、両立が大事である。,授業会の参加が遅れてしまったのでもう少し前から待機する。,
C-2021-1_U97,誤りの検出、訂正は、数学の集合に似ていると思った。,,,蟻地獄のイラストでの説明が、分かりやすかった。,
C-2021-1_U98,少しのミスで送信に不具合が生じてしまっては作業効率が下がるので符号化の際の工夫は大切だとわかった。,照明のところは難しそうなので新たな文献も参考にしてみたい。,情報を符号化して送信する際に多少のノイズには対応できるように工夫が必要である。その際、送信速度を低下させることなく誤り率を下げることを考える。,さまざまな例があったので理解が深まった。,
C-2021-1_U99,自動で検出できる条件、自動で訂正できる条件についてよく理解することができました。,名前の例ではとても分かりやすかったが、それが円になって抽象化したとたんにイメージがしずらくなったのでもう一度復習したい。,情報を通信するとき、ノイズが入ることで誤った情報が通信されるのを防ぐために、そのノイズを自動で検出し訂正するための仕組みがある。これを自動化するために様々な工夫がなされている。,名前の例がとても分かりやすかったです。,
C-2021-2_U1,ハミング距離の差により誤り訂正、検出ができるかどうかの違いが生まれるということが分かった。,現実ではどれくらいのノイズの割合、冗長化の規模なのかが気になった。,通信路を経由する段階で発生するノイズによる誤り符号化により自動検出、自動訂正するための方法,予習ができていなかったので資料を確認してから望みたい。,
C-2021-2_U100,情報の誤りの検出と訂正に重要な要素について理解できたのと、ハミング距離について意識しないといけないことを理解した。,,情報伝達において誤りの検出と訂正が大事で、検出と訂正ともに元の情報の違いが多いほど、検出訂正しやすく、符号語同士の距離が重要である。符号間のハミング距離が重要なため考えられて作られている。,今まであまり知らなかったコンピューターに関する誤りの検出、訂正の簡易化について学んで、面白かったし、他の分野でも生かせるのかなと思った。,
C-2021-2_U101,符号語同士の距離がどれだけ離れているかによってノイズによって誤りが起きた時に検出できるのか、訂正までできるのかが変わってくるということを知ることができた。また、多数決符号では数を増やさばブロック誤り率は小さくなるが、効率が下がるということから、正確さと効率のどちらかだけを考慮すればいいという問題ではないということを理解した。最後に紹介のあった通信路符号化定理において、符号化効率とブロック誤り率はできるだけ良いものに改善していくことが可能であると数式で裏付けられているということが分かった。,特にありません。,正しい情報の伝達のためには、ビットの反転が起こる確率を反転確率、いくつかのビットをまとめてブロックとして伝送する際の誤り率であるブロック誤り率を共に下げることが理想的である。しかし、通信路を改善することによる対策は物理的、経済的に難しいため、符号化を工夫することで誤り率を下げたり、誤りの検出や訂正を行うことができるようにすると良い。ハミング距離を考慮することによって自動訂正/検出が可能な範囲を調べることができ、より良い符号の設計につながる。具体的にはs+1以上離れていれば高々s個の誤りを自動検出でき、2t+1以上離れていれば高々t個の誤りを自動訂正できる。通信路符号化定理から、符号化効率は上限である通信容量にいくらでも近づけることが可能であり、ブロック誤り率はいくらでも小さくできるといえる。相互情報量や条件付きエントロピーを求めることは通信路について考える際に役立つ。,「間違いをいかに少なくしていくか」ということも大切だが、「間違いの程度を訂正できる範囲のものにしていく」という工夫も大切になるのだと思った。各符号語同士にどのくらいの違いがあるのかによって訂正できるかどうかが決まるという点は当たり前のようで予習の段階では頭がこんがらがってしまっていたが、説明を聞き、納得がいく程度にまで理解することができたように思う。通信路符号化定理についてや通信容量を計算する公式については自分で調べて、より深い理解にできるようにしたい。,
C-2021-2_U102,誤送信された情報を受け取り側が自動検出や自動訂正するための条件がわかった。自動検出や自動訂正ができやすくするために冗長化を行うことがいいことがわかった。しかし、冗長化によって送信効率が悪くなることも学んだ。,,符号化された情報源が送信されるときに誤送信された情報を受け取る側が誤りを自動検出や自動訂正する方法について学んだ。,今回の講義はノイズの修正方法を学ぶことができて非常に興味深い講義だった。自動検出や自動訂正ができる条件の説明の時のたとえ話が非常にわかりやすくすんなり理解することが出た。,
C-2021-2_U103,誤りを自動検出・自動訂正可能な時がどんなときか、不可能な時がどんなときか、ハミング距離などを指標として判断する方法が理解できた。,,情報を送信する際のブロック誤り率を下げる方法には通信路を改善する方法と、符号化を工夫する方法がある。ここでは後者に注目する。例えばブロックの冗長化や繰り返し符号の利用によって誤りを自動検出・自動訂正する方法がある。,情報を送るときのノイズを軽減するために、設備や器具などではなく符号化に工夫を加えるところが面白いと思った。しかし実際のところ今回の話は情報科学の中では初歩レベルの内容だと思うが、それでもかなり定理が複雑で難しく感じたので、復習を頑張ろうと思った。,
C-2021-2_U104,,ハミング距離のところが少しわからなかったので、復習する。,,ハミング距離のところがよくわからなかったが、名前や蟻のように例えで説明してもらうと、少し分かりやすかった。,
C-2021-2_U105,通信路を介してビット列を伝送する際、ノイズの影響によりビットの反転が起こることがある。それが起きないための対策として、通信路を改善する方法と符号化を工夫する方法がある。また、自動誤り検出と自動訂正がある。ハミング距離を考慮することで、何個の誤りを自動検出できて、自動訂正できるのが分かる。,,情報符号化について学んだ。情報符号化における通信路とノイズにおいて扱い、その自動検出と自動訂正について主にやった。,,
C-2021-2_U106,なぜメールなどを送った際に文字化けや読み込み不可などのことが起こるのかその原理や改善方法について学ぶことができた。またwordなどの誤字入力を青線や赤線などで校正する条件や仕組みについて学ぶことができた。,なぜ通信路容量が符号化効率の上限に一致するのかがあまりわからなかった。,"通信路符号化におけるビットの反転確率とブロック誤り率の求め方やブロック誤りを減らすための方法、自動誤り検出と自動誤り訂正が行われるや
それらとハミング距離の関係、繰り返し符号の誤りに対する守備範囲と自動訂正のイメージや繰り返し符号の調書と短所、通信容量の求め方や符号化効率との関係、また
通信路符号化定理について学びました。",エラーが起こることは今までまれであると思っていたが実は頻繁にエラーが発生しておりそれを検出したり訂正したりするプログラムが発達することで私たちの目にはあまり誤りがあまり目に入らなくなっているということがとても面白かったです。,
C-2021-2_U107,自動誤り検出と自動誤り訂正の違いが理解できた。ハミング距離を理解すると、冗長化してビット列のパターン数を増やしたうえでその一部のみを利用してハミング距離の最低値を保ち、誤り検出・誤り訂正ができる範囲を広げられることが分かった。,,情報通信における符号の冗長化の手法と意義の理解。自動誤り検出、自動誤り訂正が行える条件の理解。ブロック誤り率と符号化効率のバランスの理解。,予習では自動誤り検出と自動誤り訂正の違いがよく分からなかったが、授業を受けた後で、友人にその違いと成立する条件の説明までできるようになった。ブロック誤り率と符号化効率のバランスを考慮したうえで情報通信の符号を設計するのは、かなり工夫が要りそうだと感じた。,
C-2021-2_U108,,,通信路を介してビット列を転送する際、ノイズによってビットの反転が起きる。ビットのサイズが大きいと反転確率がかなり低くても、ブロック誤り率が意外と高くなる。そのため、符号化を工夫しなければならない。その際コンピュータが行うことができる誤り訂正・検出について学習した。,,
C-2021-2_U109,自動検出と自動訂正を行うために必要な符号語の条件を理解することができた。,,"自動検出、自動訂正のしくみ

","正解となるbitの状態が分からなくても自動訂正ができる仕組みを理解できた。
シャノンの通信路符号化定理は通信速度を理論値に近いところまで最大化できるというとても強力な定理だと思った。",
C-2021-2_U11,"情報を送る際に冗長化することによって、間違いの自動訂正ができるようにするということ
ハミング距離について",検出できることのメリットが分からなかったです。,"情報を送受信した際の誤りを防ぐ方法や誤りを訂正し元の情報に戻す方法
","ハミング距離を説明する時の蟻地獄での例えがとても分かりやすかったです
情報の間違いの訂正の仕方がスマートで面白いと思いました",
C-2021-2_U110,,,,n次繰り返し符号については、よく復習する必要があると感じました。全体的にはよく理解できたと思います。,
C-2021-2_U112,伝えられた情報が、送信側の情報と同じであるように様々な方法が採られていることが分かった。情報が伝えられる際に、ビットが反転し間違えたとしても正しく情報が伝わるよう間違いを自動的に検出、訂正する仕組みも理解できた。,ハミング距離を用いてどれくらい自動検出、訂正が可能か考える問題は考え方が新しく慣れないこともあり、解法がまだ身に付いていないと感じる。練習を繰り返し、考え方に慣れていきたいと思う。,符号化された情報を伝える際に、ノイズによって邪魔をされビットの反転が起こる。ビットの反転が起こらないようにするために通信路を改善したり、符号化を工夫したりしている。間違いを限りなく０に近くする方法や、間違えたとしても誤りを検出し誤りを訂正する機能がある。間違いを検出するための工夫として各ブロックに表れるビット列の符号語を互いに似ていないように設計することが挙げられる。また、実際に情報が送られる際には符号語間のハミング距離ができるだけ大きくなるように設計する。,今回の講義は以前の講義よりも想像しやすく、理解しやすかった。似た名前から、目的の人物を考える状況を講義で例に挙げたことから、前回の講義と同様に、日常生活で無意識に行っている情報整理の方法を言語化して、情報技術に役立てている点が面白いと感じ、興味を持った。受け取る情報を送信したときのものと同じであるようにするために様々な工夫がなされていることに驚いた。,特にありません。
C-2021-2_U113,伝達の過程で情報に誤りが乗じた時に訂正が可能な個数と距離の関係が分かりました。,ｎ次繰り返し符号の誤り率、誤り訂正が可能か、不可能かについてが分かりませんでした。,誤りを検出すること、繰り返し符号による誤りの訂正,誤りを検出し、訂正する仕組みが分かりました。工夫されているなあと感じました。,ありません。
C-2021-2_U114,コンピューターであっても人間と同じように、間違っているのに偶然辻褄があってしまった場合や、矛盾した二つの情報が送られた場合はどうしようもないことが分かった。ブロック誤り率と符号化効率は反比例するもので、一長一短である符号しかないかと思っていたが、どちらにおいても最適な符号があることが分かった。,特にありませんでした。,通信呂を通してビット列を伝送する間にビットの斑点が起こることがある。その対策として符号化を工夫することがあげられる。多数のビット列において異なるビット数をハミング距離という。ハミング距離がS+1以上のときS個以内の誤りであれば自動検出が可能である。またハミング距離が2T+1以上のときT個以内の誤りであれば自動訂正が可能である。自動検出さえもできないという状況をなるべく防ぐために冗長化という方法がある。通信路容量に対して、ブロック誤り率は低く、符号化効率は高い通信路符号が必ず存在し、このことを通信路符号化定理という。,時間やお金ではなく頭脳で解決できると気づいたところがこの学問に通じている研究者の方々はすごいなと思った。このような英知の上に自分たちの今の生活が成立したことを考えると、今後もさらに通信技術は発展していき、当たり前がどんどん変わっていくのだろうなと思った。,
C-2021-2_U115,例を理解しつつ一般化された式も理解できた。冗長化して謝っても大丈夫にするすべを学んだ。,通信路符号化定理がいまいち理解できなかった。,ブロック誤り率は余事象を意識したらわかりやすい。自動誤り検出は反転を検出して再送させる。自動誤り訂正は誤りを直す。ビットを似てないように設計することでそれらが可能になる。また繰り返しによる多数決符号によっても誤り訂正ができる。,例がわかりやすかった。,
C-2021-2_U117,いくつかの例によって誤りの自動検出、自動訂正ができる誤りの個数の限度を出すことができるようになった。n次繰り返し符号のメリットデメリットを理解することが出来た。,通信路符号化定理の式がよく分からなかった。,ビットの反転を改善する手段として符号化を工夫するやり方がある。符号語が互いに似ないようにすることで多少の間違いは訂正可能になる。このように誤りを訂正、検出できるかどうかはハミング距離によって判断できる。また、繰り返し符号による誤り訂正の方法もある。繰り返しの次数をあげれば誤り率をいくらでも小さくできるが、その分符号化効率が悪くなり伝送速度が低下するという短所がある。符号化効率は通信路容量によって上限が決まっている。,1つでも〇が●になったり1が0になったりするとその情報は全く違うものになってしまう可能性が大きい。正確な通信をするために様々な工夫がされていることを知り改めて今の情報通信の技術の凄さを感じた。今なんとなくイメージで定理などの式を理解しているので、次回からもっと丁寧に理解していきたい。,特にありません
C-2021-2_U118,符号語どうしがｓ＋1以上離れているならば、Ｓ個の誤りについて自動検出でき、2ｔ＋1以上離れているならば、ｔ個の誤りにおいて自動訂正が可能であることは理解できた。ｎ次繰り返し符号はブロック誤り率は小さくなると言う長所があるが符号化効率は良くないという短所があることも理解できた。,ハミング距離の定義について、まだよくわかっていないので、よく復習して理解できるようにしたい。,"通信の際、ビットが反転して誤った情報を伝えてしまうことがある。この誤りに対応するために、自動誤り検出と自動誤り訂正がある。これらの誤り検出と訂正ができるのは符号語どうしが適切な距離離れている必要がある。
",,
C-2021-2_U119,,,情報を伝達する際にノイズがはいってしまうためそのノイズをなくして、どうやって安定的に情報を伝達するかということを学んだ。,今回の講義では情報を伝達する際にノイズが入ってしまった場合に自動誤りを検出できる仕組みについて理解できた。具体的な例が上がっていたので、どういう場合に検出できて、どういう場合にできないのかをしっかり理解することが出来たと思う。,
C-2021-2_U120,ハミング距離の計算、なぜ冗長化するのか,,通信路の符号化において符号後を似ないように冗長化することで復号の際に自動検出、自動訂正が可能となる。,円の説明で文字違いの自動検出、訂正がわかりやすくなったと思う,
C-2021-2_U121,,,送信側から受信側に情報が送られる際に生まれてしまう誤情報を、自動的に検出、訂正するための、通信路符号化の工夫を学ぶことができた。,今回の講義は、これまでの講義に比べて、わからないことやできなかったことが少なかったので良かった。わからないことやできなかったことが溜まってしまうといけないので、復習が必要だと思った。,
C-2021-2_U122,"ブロック誤り率と符号化効率の求め方
通信路容量の求め方
どのような時に自動訂正・自動検出ができるのか",,"通信路符号化
自動検出と自動訂正ができる条件
ハミング距離",現代の社会において通信は重要ですが、符号化して工夫することで誤り率を低下させたり、自動で誤りを訂正・検出されていることがわかりました。,
C-2021-2_U124,自動検出、自動訂正できる時の条件について理解することができた,誤り検出、訂正符号の理解が難しかった,"ビットの反転確率を用いてブロック誤り率を表すことができる
自動検出、自動訂正できる時の条件は決まっている
n次繰り返し符号のとき、誤り訂正できるときの条件は決まっている
",どんどん複雑になっていて理解が一発ではできない時が増えてきました。しっかり予習復習をしたいと思います,
C-2021-2_U125,ハミング距離というのは、等しい文字数を持つ文字列の中で、対応する位置にある異なった文字の個数であるということ。ハミング距離と自動検出、自動訂正の関係について。1ビットの情報を伝えるのに3ビットの符号を使うなど、繰返し符号を使うことで多数決的に誤り訂正が可能になる。しかし、符号化効率が落ちるとそれだけ伝達速度も低下する。,"通信路符号化定理について。
自動検出、訂正の説明に出てきた蟻地獄の例は分かりにくかった。",符号語を送信するときにノイズによって正しく受信されないことがある。できるだけ反転確率を低くするために、通信路を符号化する。通信ハミング距離を大きくすることによって自動検出、自動訂正が可能になる。,予習の際にあまり理解できなかった通信路符号化について授業で理解することができた。今日の授業で初めてbookrollのメモ機能を使ってみたが、授業の理解度が上がるのでこれから積極的に活用しようと思う。,
C-2021-2_U126,,,通信路を介してビット列を伝送する際、ノイズの影響でビットの反転が起こることがある。それを防ぐ対策として物理的・経済的に有効なのが符号化を工夫することである。また、自動誤り検出・訂正も行われている。自動誤り検出・訂正は十分なハミング距離をとったり、繰り返し符号を用いたりして行われる。,,
C-2021-2_U127,,特にはありません。,今回の講義は、通信路符号化についてであった。情報の伝達中を考える際は、ノイズが入ることも考慮して、反転確率並びにブロック誤り率を注視しなければならない。両方を小さくするためには、通信路の改善あるいは符号化の工夫が求められるが、前者は実用化に適していないことがままである。符号化の工夫としては、自動誤り検出と自動誤り訂正が挙げられ、任意の自然数pに関して、自動誤り検出ではp+1個、自動誤り訂正では2p+1個、符号語同士離れていれば、高々p個のそれらが可能である。また、通信路符号化定理より、符号化効率は通信路容量に限りなく近づけることが、ブロック誤り率は限りなく小さくすることが理論上可能であると導かれている。,,
C-2021-2_U128,,,,前回より少し難しく感じるようになり、一回聞いただけで全てを理解することは難しいので、復習を重点的にしていこうと思います、来週もよろしくお願い致します。,
C-2021-2_U129,,,情報の誤り訂正について学んだ。ブロック誤り率を小さくすればするほど符号化効率は悪くなる。そこで、符号化効率を下げずにブロック誤り率を下げる定理を学んだ。,,
C-2021-2_U13,,,"情報を伝達する際には通信路のノイズによってビットがひっくり返ることがしばしばある。そのままでは正確な情報が伝わらないためそれを修正する仕組みがある。
長さの等しい二つのビット列に対してそれらのビットが違う数をハミング距離と定義する。この時ハミング距離がS+1ならば高々S個の誤りを自動検出することができる。またハミング距離が2t+1以上の時高々t個の誤りを自動検出できる。",,
C-2021-2_U130,自動訂正や自動修正の例がわかりやすかったので理解できた。,後半の通信路符号化定理について詳しく調べてみたい。,ノイズの影響からどのようにして情報を正しく伝えることができるかということについて学んだ。自動訂正や自動検出が働くための符号化の仕方や伝達効率とノイズの影響の最小化を満たすような方法について学んだ。,少し学んだことのある内容だったので、今一度学習して理解が深まった。通信の仕組みに触れられてよかった。,
C-2021-2_U131,ハミング距離の最小値によって、誤り検出、誤り訂正のそれぞれについて計算で答えを求めることができるようになった。,,,,
C-2021-2_U132,誤りを訂正できる場合と訂正できない場合があることがわかった。,蟻地獄の例がよくわからなかった,誤りを訂正するための理論とその方法,内容が難しくなってきたのでしっかりと自分で考えて復習することが大切だと感じた。,
C-2021-2_U133,"符号語同士がどれくらい離れているかによって自動検出、自動訂正ができるかどうかが変わってくるということがわかった。
符号語同士が似ていないことが大切だとわかった。",通信路符号化定理の概念がわかりにくかった。しっかり復習したいと思う。,通信路を介してビットを送信する際、ノイズの影響で誤りがあっても、符号の工夫をすることで誤りを検出し、訂正できるということを学んだ。,符号語を送信する際の誤りを検出したり、訂正したりすることができるようになっているというのが授業を通してわかり、うまく作られているということがわかった。実際に自分で誤り検出ができるかなどといった判断ができるように、演習をして理解を深めたいと思った。,
C-2021-2_U136,蟻地獄の例えのおかげでイメージすることができた。,特にありません。,エントロピーを考える理由や誤り訂正、ハミング距離を使った検出。,言葉が難しくなってきたので予習と復習を心がけたいです。,特にありません。
C-2021-2_U137,高々s個の誤りの自動検出と自動訂正の条件の違いをイラストとともに理解することができました。また、今回はスムーズに演習問題を解き進めることができました。予習の成果がでたかなと思います。,通信路容量について全体的に理解することができませんでした。,情報を伝達する際に、誤りが生じる可能性があり、その可能性を下げる必要がある。そのために有効なのが多数決符号などの、少量の誤りの影響を受けにくい符号化であるが、そのような符号化の場合は符号化効率が悪くなってしまう。そこで、伝送速度を維持したままブロック誤り率を下げる方法を考える必要がある。,自動誤り検出/訂正の内容で、円と点を用いた図による説明が分かりやすかったので理解しやすかったです。この講義では、分かりにくい内容を分かりやすい例えで説明してくれるので、とても助かっています。,特にありません。
C-2021-2_U138,,今日は特になかった。,,今日は授業の中でしっかりと理解をすることが出来た。来週までに復習も行ってしっかりと定着させたい。,
C-2021-2_U139,今回の内容は、初めて知ることばかりだったが、情報の距離という概念を理解することができた。,,情報同士の距離によって、誤りの自動検出が可能か、そして誤りの自動訂正が可能かが変化する。,今回は初めて知ることが多くて、とても面白かった。,
C-2021-2_U14,ノイズの影響でビットの反転が起きることがあると知り、ビット列送信は完全でないということが初めて分かった。その誤りは乗船が合えば自動で検出出来たり、訂正できたりするということがよく分かった。,通信路符号化定理がよく理解しきれなかった。,,自動誤り検出や自動誤り訂正の仕組みがとても面白く、興味深いと感じた。そのようなことが即座に行われていることはとてもすごいと思った。,特にありません
C-2021-2_U140,自動訂正や自動検出ができる条件。,特にありません。,通信路符号化による誤りが起こる確率と、その対策方法。,復習をしっかりしようと思います。,
C-2021-2_U141,誤り検出及び修正の方法とハミング距離の意味。,通信路符号化定理の数式の意味がよく理解できなかった。,通信路符号化について、ノイズの影響と通信の改善及び誤り検出と誤り修正の仕組みを紹介し、ハミング距離と3次繰り返し符号など実用的な計算に用いる概念を勉強した。,ハミング距離の意味は最初理解できなかったが、蟻地獄の解説が大変分かりやすかったので助かりました。この部分の学習は今後も続いて活用できる気がします。,特にありません。
C-2021-2_U142,ノイズによる通信路への影響について理解することができた。また、誤り訂正について、具体例から一般化した話になっても理解することができた。,対策1:通信路を改善してpを小さくするところで、無線通信システムでとる4つの方策が紹介されていたが、1～3の方策が経済的に難しいのは分かるが、物理的に難しいというのがあまり想像できなかった。,通信路におけるノイズとその影響である、ビット反転確率とブロック誤り率についての話があった。これらの対策として、通信路符号化して、自動誤り検出と自動誤り訂正をすることによって多少の間違いにも対応できるようになる。その後誤りの訂正についての話があった。誤りには訂正できるものと訂正できないものがあり、訂正の手段といして、n次繰り返し符号があるが、伝送速度の低下というデメリットがある。,今回の講義でできた、ビット反転確率やブロック誤り率とその対策、通信路符号化定理については理解できたと思います。演習問題も比較的はやく解けたと思います。ただ、予習まで手が回っていなかったので、次回以降は忘れずにしようと思います。,
C-2021-2_U143,誤りの検出が出来るのか、訂正が出来るのか、そしてその個数はいくつなのかイラストを用いた説明により、理解することが出来た。三次の繰り返し符号のブロック誤り率の計算方法は、組み合わせを考える必要があるため、あの式になるのだと分かった。通信路容量はその名の通り、最大どれだけの情報を送れるかを表している。符号語はハミング距離をできるだけ大きくする。冗長化は、余裕をもって行えるようにする。,n次繰り返し符号のブロック誤り率の計算方法、通信路符号化定理については、良く分からなかったので自分で調べてみたい。,,,
C-2021-2_U144,誤り確率や誤り検出の仕方が分かった。,,通信路符号化とは情報を○または●であらわすこと。反転確率をｐとするとブロック誤り確率は1-(1-p)^kであらわされる。,,
C-2021-2_U145,,ハミング距離の理解についてが不十分でした。,通信路符号化について、誤りを訂正・検出する際の原理,"小テストできちんと確認をせずに提出してしまったので、次回からは気を付けたいと思います。
授業当日のうちに日誌を書き終える
",
C-2021-2_U146,繰り返し符号による誤り訂正,複雑そうに見える数式,"情報の誤りが訂正可能であるかどうか、訂正可能にするための方法
",,
C-2021-2_U147,ハミング距離がわかった。誤りの検出、訂正がどの範囲内でされているかもわかった。,,通信路符号化について、誤り訂正の範囲などの説明だった。通信路符号化では、符号化効率・ブロック誤り率が定義され、通信路で少し間違った情報を送信しても、ハミング距離などによる仕組みで訂正できる。,ハミング距離のところで、誤り訂正の例えをアリの巣で表現しているのが面白いなと思いました。,
C-2021-2_U148,符号後はある程度離れていたら検定や訂正ができある程度距離をとるために冗長化する必要があること理解できた。,,情報は伝達する途中でノイズが発生しビットの斑点が起こることがある。ノイズによって情報の内容が変わるのを防ぐために、符号後を冗長化し別の符号との違いを大きくすることで、誤りを検出や訂正できるようにする必要がある。符号後がｓ+1離れているときは高々sの誤りが検定でき、符号後が2s+1離れているときは高々ｓの誤りが訂正できる。符号後の離れをハミング距離という。,符号後は効率化だけでなく安定性のためにあえて冗長化することもあるのが意外でした。,通信路符号化定理はブロック誤り率と符号化効率が同時に最小と最大になる符号が存在するわけではないという認識でいいですか。
C-2021-2_U151,誤り検出・訂正とハミング距離の関係性が分かった。また、理論上、符号化効率やブロック誤り率はどれだけでも小さくできることが分かった。,,"誤りの検出や訂正はハミング距離によって決まる。符号語間のハミング距離ができるだけ大きくなるように設計するとよい。
",,
C-2021-2_U152,誤りの検出・訂正の例を身近なもので例えていたのでよく理解できた。,,情報の誤りの訂正、検出,,
C-2021-2_U153,ビット反転による誤りを自動検出、自動訂正できる条件や、符号のブロックを冗長化することや繰り返し符号を使う意味について理解することができました。,,通信路におけるビットの反転(誤り)の訂正のための工夫、その誤りを自動検出、自動訂正できる条件などについて学びました。,今回の授業は今までの中で予習の段階での理解度が最も浅くて不安でしたが、授業を聞いて理解できたのでよかったです。来週からは新しい内容が始まるので、ここで1回目からの授業の内容をきちんと復習してしっかりと区切りをつけようと思います。,
C-2021-2_U154,,,,人の名前の例はすごくわかりやすく、冗長化することで誤り訂正することができるということが分かりました。どのような条件で誤りの自動検出や自動訂正ができるかということがわかり、面白いなと思いました。今回は予習をして授業に臨むことができたのでより深く理解することができました。今回の授業も復習して、次回の授業にむけて予習もしたいと思います。,特にありません。
C-2021-2_U156,自動検出ができるのには範囲がある,p３７の三次繰り返し符号とハミング距離の関係がいまいち理解できなかった。一般化したのも同様。,通信の過程と自動修正のしくみ・限界について,だんだん難しくなってきたかなと感じた。,
C-2021-2_U157,誤りを訂正できる範囲や誤りを検出できる範囲を計算で求めることができるようになった。また、ノイズの影響でビットが反転することはある程度許容して、それらをなるべく少なくするためのさまざまな方面での工夫について理解できた。,通信路符号化のところは何をやっているのかよくわからなかった。,,,
C-2021-2_U158,誤り訂正の可否,誤り検出/訂正符号の計算方法,通信路を符号化し、それの誤り率を小さくする方法。,今回は小テストで満点をとれたのでうれしかったです。誤りの検出ができるときとできないときの違いもわかったのでよかったです。,
C-2021-2_U16,"ハミング距離が何なのかは理解できた
円を重ね合わせたところの説明がうまく理解できなかったが、蟻地獄の説明のところで理解できた","ハミング距離の最小値と符号間の距離は同じなのかどうかが少しわかりづらかった
",情報源が通信路を通った後に、正確に復元されるようにするための仕組み,,
C-2021-2_U160,"通信路を介してビット列を転送する際、ノイズの影響により、ビットの反転が起きる。
ビットの反転の起こる確率をpとする。
ブロックを転送する際の誤り率 PB=1-(1-p)のk乗となる。ここでブロックのサイズをkビットとする。長さの等しい2つのビット列x,yに対しxとyのハミング距離を以下で定義
d(x,y)=(x[i]≠y[i]となるiの個数)
符号語どうしがs+1以上離れているならば高々s個の誤りについて自動検出が可能
符合語どうしが2t+1以上離れているならば高々t個の誤りについて自動訂正が可能",自動検出、訂正について1回じゃ理解できなかった。,"情報の間違いを見つける方法
情報の間違いを自動で見つけられる限界について学んだ。
自動で処理するのを進めるには情報を増やす。","情報が自動で処理することには限界もあるんだなと思った。
その限界を広げるためには情報量を増やせば良い。",
C-2021-2_U161,,,通信路を通してビット列を伝送する際、ノイズの影響によりビットの反転が起きる場合がある。この反転の対策として送信電力を大きくし信号対雑音電力比を向上させる、大型のアンテナを使い受信信号電力を向上させる、受信アンプを冷却し受信器内の熱雑音を減少させる、より広い周波数帯域を利用するなどがあるが、物理的、経済的制限によりこれらの方策が取れないことが多い。なのでもう一つの対策として符号化を工夫するというのがある。これは自動誤り検出と自動誤り訂正でビット反転があったことを検出し再送、訂正するというものだ。,,
C-2021-2_U162,誤りの検出できる場合、誤りの訂正ができる場合を理解することができた。冗長化などの通信路符号化の仕組みについて理解できた。ｎ次繰り返し符号の仕組みについて理解できた。,通信路符号化定理が何をしたいのか良く分からなかった。,,,
C-2021-2_U163,誤り検出、訂正の仕組みについて,通信路符号化定理,"情報を送る際にはノイズが入る。しかし、このノイズをなくすことはとても大きな労力がかかる。そこで、そのノイズを勝手に検出、訂正してくれる機能が必要であった。
またこの誤り検出、訂正の能力は符号語間のハミング距離の最小値によってきまる。
",ノイズが入ることを前提としたシステム作りをしておくという考え方は、ほかの分野でも大切なことだと感じた。,
C-2021-2_U164,,まだ用語の整理ができていないので、復習をして覚える。,自動検出、自動訂正の仕組みや性質,,
C-2021-2_U165,現代社会では情報を伝達する際にいかに間違いを減らし効率化するかがよく考えられているんだと考えさせられた。,確率の計算について少し悩んだ。,情報を伝達する際の誤りやその検知、訂正についてその起こりうる確率の計算とともに学んだ。,普段何気なく使っている情報もその伝達手段について深く考える機会が今まであまりなかったので良い機会となった。,
C-2021-2_U167,,,通信路で発生するノイズに負けず、情報を伝送するために誤りの自動検出、訂正ができる条件,,・誤り検出、訂正（スライド最後）の「符号語は２＾ｎ個のうち２＾ｍ個」というのが理解できなかった。
C-2021-2_U168,高々ｔ個の誤りが訂正できる場合とできない場合を見分けることができるようになった。,,ビット列を転送する際に、ノイズが原因となって、ビットの反転が起きることがある。これを防ぐために送信、受信装置を機械的に改良するという方法もあるが、誤って送信され反転されたビットを正しく検出し、誤りを訂正するという方法もある。,誤り訂正技術の仕組みが複雑で、理解に時間がかかったが、どういう場合に訂正、検出できて、どういう場合にできないかを見分けられるようになった。,
C-2021-2_U169,"長さに等しい2つのビット列x,yに対し、xとyのハミング距離が定義されている。符号語同士がs+1以上離れているならば高々s個の誤りについて自動検出が可能。符号語同士が2t+1以上離れているならば、高々ｔ個の誤りについて自動訂正が可能。",最後のハミング距離の導出があまりできませんでした。,通信路符号化は、ノイズによりビットの反転とブロック誤り率を防ぐために、通信路を改善してpを小さくする、または符号化を工夫する際に用いる。誤り検出、訂正にはハミング距離が使われ、,,
C-2021-2_U17,"どのようなときに誤り検出・訂正ができるか分かった。
また、ハミング距離についてもどのようなものか理解できた。","3次繰り返し符号による誤り訂正についてブロック誤り率や符号化効率がどのような意味を持っているのかよく分からなかった。
また、通信路符号化定理もよく分からなかった。","通信路符号化（通信路とノイズ、ビットの反転率、ブロックンの誤り率、自動誤り検出と自動誤り訂正）
誤り検出/訂正の基本アイデア
誤り検出/訂正の原理（ハミング距離）
繰り返し符号による誤り訂正

","定理で出てくる式が複雑になってきているので、理解することがとても難しかった。
しかし、アリジゴクの例を使った誤り訂正の説明はとても分かりやすかった。",今回の授業で自動誤り検出・訂正について学びましたが、そもそも通信が符号化され、復元するときにどれくらい符号の誤りが起こるのですか？
C-2021-2_U170,,,データを送るうえで、ノイズが発生し、誤った情報を送ることがあるため、それを防ぐためにデータの符号の並びを工夫したりすることが大切。,,
C-2021-2_U171,ハミング距離における自動検出、訂正の能力がわかった。,,通信路を介してビット列を送信するときにノイズの影響によりビットの反転が起き、反転確率が小さいとしてもブロックの誤り率は大きくなる。また、符号語同士のバミング距離によって自動検出、訂正が可能な個数がわかる。,今回の小テストは点数が良かったので次からもこの調子でいきたい。,
C-2021-2_U18,ハミング距離によって自動検出が可能か、訂正が可能なのか、それともどちらもできないのかのノウハウがわかりました。,通信路容量の式の意味と符号効率についてよくわかりませんでした。,送信した側のデータが通信路のノイズにより受信側のデータと異なることがある。間違った反転の自動検出、訂正は可能であり工夫すれば受信側が受けとるデータが間違う可能性をできるだけ小さくすることが可能である。,授業だけでは理解できない内容が出てきたので今後自分でかみ砕いて復習していきたいです。データの送信の際の工夫（余分にビットをつけるなど）が面白かったです。,
C-2021-2_U19,データの誤りの自動検出、訂正が可能となる原理を理解できた。,ハミング距離についての理解がまだ曖昧。,データに工夫を施すことによって、自動的に誤りを検出、または訂正することができる。,毎度宿題を提出するのがギリギリになるので余裕を持ちたい。,
C-2021-2_U20,数学的な考えを用いて、組み合わせとして被らない部分を見出す作業によって、符号符どうしがt+1以上離れたときにt個までの誤りを検出でき、さらには、2t+1以上離れているときには、t個までの誤りまでもが自動訂正できるとわかった。,,"通信路符号化の際に、ノイズによって01が反転したときに、それを如何にしたら検出、さらには自動訂正までできそれにより情報の正確性を人類は探求してきた。
",,
C-2021-2_U21,冗長化がどいうことか分かった。,ハミング距離が何かは理解することができたが、高々s個の誤り検出、高田t個の誤り訂正の定理の導き方がわからなかった。,通信路を介してビット列を伝送する際、ノイズの影響によりビットの反転が起こることを知り、その対策について学んだ。対策は2つあり、１つは通信路を改善して反転確立を小さくすることであるが、これは物理的・経済的な理由によりできない場合も多い。もう１つの対策は、自動誤り検出と自動誤り訂正を用いて符号化を工夫することである。この方法を取って、ブロック誤り率を小さくすることができる。,,各ブロックに付加する検査ビットの数はどのように決定するのですか。
C-2021-2_U24,ハミング距離が大きいと誤りの検出・訂正がしやすいが、復号の手間がかかる,概ね理解できたように思います,情報を正確かつ簡易に伝えるために、符号語の長さや形を変えている,予習時は内容が分かりにくかったように感じたので身構えて授業に臨みましたが、講義を聞いているとそこまで複雑ではなかったので、どうしても数字や線が多い内容は苦手なのか…と少し悲しくなりました。,
C-2021-2_U25,検出または訂正が可能か不可能かのハミング距離,しっかりした予習,自動誤り検出と訂正,前日には予習を済ませるようにしたい。,
C-2021-2_U26,"誤り訂正ができる場合、できない場合、そもそも誤りを検出できない場合について蟻地獄のたとえなどを通して理解することができた。
また、情報を正しく送るために検査ビットを加えるなどの工夫が行われていることが分かった。",特にありません。,"通信路を介してビット列を伝送する際、ノイズの影響でビットの反転が起こる場合がある。
正しく情報を伝送するためには反転が起こる確率を小さくする必要があり、通信路を改善したり、符号化を工夫したりすればよい。
符号語どうしがs+1以上離れているとき、高々s個の誤りを自動検出できる。また、符号語どうしが2t+1以上離れているとき、高々t個の誤りについて自動訂正を行うことができる。
符号化効率の上限は通信路に固有の値であり、通信路容量と呼ばれる。
通信路符号化定理は、符号化効率を通信路容量にいくらでも近づけることができる、かつブロック誤り率をいくらでも小さくできることを意味している。","符号化効率は、その上限である通信路容量にいくらでも近づけることができること、ブロック誤り率をいくらでも小さくできることが証明されていると知り、驚いた。
普段使っている情報通信機器が、これらの理論を基盤として成り立っていることを実感できた。",特にありません。
C-2021-2_U27,,ハミング距離がどういったものかがよくわかりませんでした。なぜ、ハミング距離があると判別しやすくなるのかが理解できていません。,自動誤り検出や自動誤り訂正という機能を使って、ノイズが生じてデータが少し変わってしまっても正しい情報が伝えられるような工夫がなされていることが分かった。また、検出や訂正に必要なデータ量は計算で求めることができる。,,
C-2021-2_U28,,,,,特にありません。
C-2021-2_U29,ブロック誤り率を求める際の公式や繰り返し符号による高々ｓ個に対する自動検出(ｓ＋１以上離れている)や自動訂正(２ｓ＋１以上離れている)ができる条件について理解できた。,通信路用量については曖昧にしかわからなかった,"通信路符号化やビットの反転確率やブロック誤り率。
繰り返し符号による高々ｓ個に対する自動検出や自動訂正ができる条件。","自動訂正や自動検出を説明するために社員の名前やアリの巣の例がとても分かりやすかった。
曖昧な理解しかできていない箇所が多いのでもっと勉強するべきなのかなと感じた",
C-2021-2_U3,いつも使っているインターネットなどのWEBサイトの情報がチェックされ、検出または訂正されていることを知り、私たちが気付かないうちに科学技術がより良い社会を実現していることがわかった。,通信路符号化定理が少し難しかったです。やはり、計算が複雑になると理解が難しいです。,"●通信路符号化
・通信路を介してビット列を伝送する際、ノイズの影響により、ビットの反転が起きる。
・各ブロックに現れうるビット列＝符号語（符号語同士が似ていにいないように設計）
・通信路容量には上限がある。
①自動誤り検出
　ビット反転があったことを検出し、再送してもらう。
　符号語同士がs+1以上離れているならば、高々s個の誤りについて自動検出が可能。
②自動誤り訂正
　自動誤り検出後、ビット反転を訂正する。
　符号語同士が2t+1以上離れているならば、高々y個の誤りについて自動訂正が可能。",ありがとうございました。,
C-2021-2_U30,誤りを検出できる範囲と訂正できる範囲には差がある,,情報の差を数値化して表し、訂正可能か判断する。また、誤った情報を送っても訂正できるようにし、かつ送る情報をできるだけ小さくする。,蟻地獄の考え方はすごく分かりやすかった。実際の数値を入力してやると理解が深まりやすかった。,
C-2021-2_U31,情報伝達において、ノイズにょる誤情報の送信を、符号化の工夫によって自動検出、自動訂正が可能になるということが分かった。,実用性を考えた際、効率性と正確性をどの程度の割合で重視しているのか分からなかった。,情報を伝達する際に、ノイズの影響によりビットの反転が起きることがある。これにより誤った情報が伝達されることがある。このブロック誤り率を下げるために符号のハミング距離をおおきくなるように工夫を行っている。ハミング距離ｓ＋1のとき、高々ｓ個の誤りについて自動検出が可能になり、ハミング距離2k+1のとき高々k個の誤りについて自動訂正可能になる。,"ノイズという現実的な問題点と、それに対処する符号化の工夫がすごいと感じた。
携帯電話など身近な情報伝達の仕組みが複雑だが少し理解できた感じがしておもしろかった。",
C-2021-2_U33,"誤り検出、誤り訂正の可能性について知るようになった。特に蟻地獄の例が非常に役に立った。
また、ブロック誤り率を小さくするために符号は長くすると、効率が低下してしまうこと、そしてその解決策として検査ビットが登場したことが分かった。",,"通信路を介してビット列を転送する際、ノイズの影響によってビットの反転が起きてしまうので、
誤りを検出、訂正するためのアイデアを学んだ。ハミング距離によって誤り検出、誤り訂正の能力が異なる。
",今日はアイデアが発展した理由と背景が理解しやすかったおかげで、内容がよく理解できた。,
C-2021-2_U34,自動誤り検出と自動誤り訂正についての様々な法則について理解することができた。,,通信路符号化について。特に、自動誤り検出と自動誤り訂正について。,,
C-2021-2_U35,ブロックを伝送する際の誤り率であるブロック誤り率は、1-(1-p)^kであらわされる。ここでｋはブロックのサイズであり、ｋが大きいとたとえ反転確率ｐが小さくても、ブロック誤り率は高くなる。,,,,
C-2021-2_U36,通信路符号化にはノイズの影響を受けても正しい情報を送れるために、ビット列を工夫して、自動誤り検出や自動誤り訂正が行えるようにしていることがわかり、自動誤り検出や自動誤り訂正ができる一般化した条件を具体的なわかりやすい例をもとに理解することができた。,通信路符号化定理の証明を調べて見たがかなり複雑で完全な理解はできなかった。,ビット列を伝送する際、ノイズの影響によってビットの反転が起こり、正確な情報が送れなくなってしまう。それを通信路を変えずに符号化の工夫（ブロックの冗長化）を行うことでブロック誤り率を下げ、自動誤り検出、自動誤り訂正を行うことで防いでいる。符号語同士がｓ＋１以上離れている場合は高々ｓ個の誤りについて自動検出ができ、符号語同士が２ｓ＋１以上離れている場合は高々ｓ個の誤りについて自動訂正ができる。伝送速度を低下させずにブロック誤り率を減少させることができる通信路符号は通信路符号化定理によって存在が可能。,今回の授業で、私たちが日々やり取りしている情報の正確性は自動誤り検出や自動誤り訂正が可能な符号化されたビット列によって担保されていることが分かった。通信路容量が与えられたとき伝送速度を低下させずにブロック誤り率を減少させない理想的な符号化が存在することを示した情報源符号化定理の詳細についてもっとしっかり学ぼうと思った。,
C-2021-2_U37,符号語によって誤りの自動検出を可能にする,ハミング距離がパッとは分からなかった,符号語の重要性,ハミング距離の復習をする,
C-2021-2_U38,,,,,特にありません。
C-2021-2_U39,ノイズの誤り検出と誤り訂正について分かりました。,,今日は情報の誤り、いわば情報を伝達するとき生じるノイズのことについて話しました。それに伴って、自動誤り検出という言葉と自動誤り訂正という用語についても学びました。また、誤り検出の基本的なアイデアを会社で人の名前を探すことに例え、分かりやすく説明しました。また、ハミング距離とは長さの等しい二つのビット列（ｘ、ｙ）についてｘのⅰ番目のビットがｙのⅰ番目と一致しないⅰの個数と定義しました。また、高々一個の誤り訂正を用いて、高々ｔ個の誤り訂正を導き、一般化しました。また、同じく、３次繰り返し符号を用いてN次繰り返し符号でのブロック誤り率と符号化効率も導出しました。,どんどん難しくなってきますが、授業で分かりやすい例を使って説明しているおかげで、内容の理解には問題ありません。ありがとうございます。,ありません
C-2021-2_U40,ノイズによるブロック誤りに対してどのよう工夫してミスを防ぐのかを学んだ。,,,ただ言葉で説明されるよりも図や絵でイメージをつかめるのは大変分かりやすくていいと思った。アリ地獄のイメージはまさしく誤りの検出、訂正に関して範囲内の「少しぐらい間違っても大丈夫」の仕組みを示していると思った。やはり講義内容を十分に理解するためには復習は大事だと感じた。,
C-2021-2_U41,情報を伝送するときにビットが反転してしまうことがあり、誤りの自動検出、自動訂正を行いやすくするために冗長化するなどしてビット列（符号語）が似ていないようにすることが大切ということが分かりました。また、同時にそのようにして冗長化していくと伝送速度が低下してしまうという問題が起こり、誤り率を低くしそして伝達速度が低くならないようにするために、通信路符号化定理が役立ち、実質、通信路符号化定理を根幹にした通信を日々行っているということも分かりました。また情報を伝達するときノイズが入っているから受信者が受信した情報が本当に正しいのかどうかわからないため、確率を考えそのためにエントロピーを考えなければならないということも分かりました。,マーカーをひいていなかったり、大切だというポイントに印をつけ忘れたりしていました。,"通信路を通してビッドを送ったときノイズによりビッドの反転が起きることがある。ビッドの反転することが起きる確率（反転確率）をｐとすると、ブロックを伝送するときに誤ったブロックを送る確率を求めるとP＝１ー｛（１－ｐ）のk乗｝となる（ブロックのサイズをｋビッドとする。）ここでｐ＝0.001だとしてもブロック誤り率は６割以上である。すなわち、通信路を改善しｐを小さくする必要がある。しかし改善するうえで物理的経済的制限を考えると、符号化を工夫することが大切となる。ここで、自動誤り検出、自動誤り訂正などをすることが重要である。各ブロックを冗長化して各ブロックに現れうるビット列（符号語と呼んでいる）が互いに似ていないように設計する。（ミドルネームと同じ原理である）こうすることで、誤りの自動検出、自動訂正がしやすくなり、少しぐらい間違えてもちゃんと復元することができるようになる。
ここで、長さの等しい２つのビット列ｘ,ｙに対しｄ(x,y)=(ｘの第Ｉビットとｙの第Ｉビットが異なるIの個数を、ｘとｙのハミング距離と定義する。ここで、自動検出、自動訂正の原理を見てみると、符号語どうしがs＋１個離れているとき、高々ｓ個の誤りについて自動検出可能となる。そして符号語どうしが２ｔ＋１個離れているならばｔ個の誤りについて訂正可能である。
また、繰り返し符号による誤り訂正に三次繰り返し符号（多数決符号）というものがある。符号化する際に、情報が◯だった場合◯◯◯にし、●の場合●●●にして伝送し、復号するときに多い方の記号１個に直すというものである。こうすることで各ブロックの３ビットのうちビットの反転が一個以下のとき誤り訂正ができるようになる。このとき、符号語どうしのハミング距離は３なので各符号の守備範囲を「ハミング距離が１以下である」としたとき、守備範囲が重ならない。したがって各ブロックにおいての誤りが高々一以下であれば自動訂正可能である。このやり方は、ブロックの誤り率を下げるのには向いているのだが、３倍のビット量にしてしまうので符号化効率が悪い。同様に考えて、n（ｎ＝２ｋ＋１）次繰り返し符号は各ブロック（ｎビット）における反転がｋ個以下のとき、誤り訂正が可能である。このとき、ｎを大きくすれば誤り率を低くすることが可能であるが、伝送速度も同時に低下していく。ここで、通信路容量とは通信路に固有の値で、符号化効率Rの上限である。これはC＝１ーH（ｐ）＝１ー｛ｐlog(-p)+(1-p)log(1-p)｝により求められる。ここで、通信路容量Cの通信路が与えられたとき任意の正数a,bに対して、符号化効率R＝C-a、ブロック誤り率P≤ｂとなるような通信路が存在する（通信路符号化定理。）。つまり符号化効率RはCにいくらでも近づけることができ、ブロック誤り率Pはいつまでも小さくすることができる。
さらに、符号化工夫の別のやり方として、メッセージをｍビットのブロックに分割して各ブロックに検査ビットを付けてｎビットとし、符号語間のハミング距離ができるだけ大きくなるように設計することで、誤り検出や訂正がしやすくなるというやり方もある。",今日の内容は難しかったです。アリ地獄の例が分かりやすくて、イメージしやすかったです。,
C-2021-2_U42,間違いの程度によって誤り訂正ができる場合、誤り検出ができる場合、誤り検出すらできない場合があるということを知ることができた。,,通信路を介してビット列を伝送する際、ノイズの影響によりビットの反転が起きる。そこでビットの反転の起きる確率からブロックを伝送する際の誤り率を求めることができる。反転率を小さくするために通信路を改善することが効果的だが制限により方策をとることができない場合もあるため、符号化の工夫も重要である。,コンピューターの誤りを検出したり訂正したりする原理を知ることができた。また、ハミング距離によって何個の誤りを検出、訂正できるかを学べて面白かった。,
C-2021-2_U43,誤りの自動検出可能な条件と、自動訂正可能な条件の違いについて学ぶことができた。,,"通信路を介してビット列を送信する際、ノイズにより反転することがある。反転確立をＰとすると０＜Ｐ＜0.5で誤り率は1-(1-P)＾kで表すことができる。（Ｋはビット数）
自動誤り検出と自動誤り訂正という働きがある。
符号語どうしがS＋1以上離れていれば高々Ｓ個の誤りについて自動検出が可能である。また、2T+1以上離れていれば高々Ｔ個の誤りについて自動訂正が可能である。
n次繰り返し符号というものが存在し、ブロック誤り率という点においてはよいが、符号化効率という点においてはあまり優れていない。",はじめ自動検出可能と自動訂正可能との違いが少しわからなかった。後半のほうがまだ少し理解不足なので、しっかりと復習したいとおもう。,
C-2021-2_U44,ある長さの符号語において、検出あるいは訂正できる誤りの個数が分かった。,各ブロックに付加するビットの個数をいくつにすればハミング距離が最大になるか、ただちに判断することは難しそうだと思った。,ビットが伝送される際に通信路でノイズの影響を受けることがあり、これは誤った情報の伝達に繋がる。それをできるだけ防ぐために、通信路符号化による自動誤り検出と自動誤り訂正という仕組みがある。,,
C-2021-2_U48,,,,予習の段階で、さらっと見ただけでは自動検出や自動訂正についてよくわからなかったが、講義を聞き、少し自分で復習してみるとどうして各ブロックを冗長化するのかであったり、ハミング距離がどういう風に使われるのかが分かった。,
C-2021-2_U49,誤り検出/訂正については理解できた。,通信路符号化定理が若干理解が足りてない。,符号送信の際のノイズに対してどのように対策するか。,特に問題なく参加できた。,
C-2021-2_U5,ハミング距離に基づいた諸計算ができるようになった。,logが出てくる公式の仕組みがよく分からない。,情報を伝送する際、ノイズの影響がかかりビット列に誤りが生まれることがある。これの対策としてビット列をブロックに分けて付け足し、自動訂正および自動検出を可能にする。符号間のハミング距離に応じて、自動訂正、自動検出が可能かどうかが決まる。,前回までと比べると多少面倒だった。理解しづらい公式が多くなったが頑張りたい。,
C-2021-2_U50,,ありません,,,
C-2021-2_U51,誤り検出訂正の仕組みを理解できた。,,通信路符号化における誤りの発生する確率や、その訂正であったり、検出について。,情報通信は必要不可欠な技術になってきているが、その中で誤りはできるだけ少ない方がいいというのは周知のことですが、その実際のあり方がわかって興味深かった。,
C-2021-2_U53,通信路符号化について学びました。ハミング距離から、高々いくつの誤りを検出でき、いくつの誤りを訂正が可能なのかを自分で考えることが出来ました。また、分かりやすいスライドのおかげで一般化もすぐに理解することができました。,とくにありませんでした。,今回は通信路符号化について学びました。符号化の工夫の部分が情報っぽくて面白かったですが、工夫しようとすると複雑になってしまう点が出てしまう点が講義の中でも特に面白い部分でした。送った情報と受け取った情報の誤りがあった際の検出、訂正方法についても学びました。,今日の授業もとても面白かったです。とくに、通信路符号化を簡単にしようと工夫すると、元に戻すときに違う情報になってしまうなどの弊害が出てしまうという、工夫すると複雑化してしまうという矛盾のようなものが表れることを知ったとき、とても面白いなと思いました。次回も頑張ります。,ありません。
C-2021-2_U54,,,通信路の改善や符号化を工夫することによって、ノイズが入らないようにすることができる。それぞれの符号同士が重なっていなければ、自動訂正が可能。もし重なっていても、距離が離れていたら自動訂正可能。,前回に引き続き今回も小テスト満点だったので、次回も頑張りたいです。質問にも書きましたが、文字化けなどもノイズに入るのかなと思いながら聴いていました。白と黒しかないのに、復号や誤り訂正などなんでもできてすごいと思いました。まだぼんやりとしか分からない部分もあったので、演習問題で手を動かして、しっかりと理解しようと思いました。,"ノイズが入ると具体的にどうなるのでしょうか？
文字化けはノイズが入ったから起きるのでしょうか。"
C-2021-2_U55,ノイズによるビットの反転の確率を求める方法やノイズの対策を学ぶことができた。誤り検出、訂正の原理(ハミング距離など)を知ることできた。その他の繰り返し符号による誤り訂正や通信路容量についても理解した。,理解が難しかったがなんとか分かった。しっかり復習したい。,"通信路を介してビット列を伝送する際にノイズの影響のよってビットの反転が起きるが、その確率（反転確率）をPとすると0<P<0.5となる。ブロック誤り率はPB＝1-(1-p)^k (ブロックのサイズをkビットとする)。ノイズの対策として通信路を改善してpを小さくする、符号化を工夫するの二つ。自動誤り検出、訂正はハミング距離(XとYで違う個数)を原理に持つ。符号語どうしがs+1以上離れているときs個の誤りについて自動検出可能。2t+1以上のときt個の誤りについて自動訂正可能。3次繰り返し符号は3ビットにおいてビットの反転が一個以下のとき、誤り訂正可能。n次に置き換えることができ、ブロック誤り率：PB≒(4p(1-p))^n/2、符号化効率：R=1/n(nを大きくするほど伝送速度は低下)。通信路容量はC=1-H(p)　ブロック誤り率はR=C-ε　符号化効率PB≦δ
",通信路におけるノイズへの対策について詳しく知ることができて嬉しかった。誤り検出、訂正の説明のところで最初はいまいち分からなかったが、社員名簿やアリジゴクの例によってどうしてそうなるのかを理解することができてすっきりした。,
C-2021-2_U56,ハミング距離を長くした方が良い理由が分かった。,ｎ次繰り返し符号のブロック誤り率Ｐ≒（4ｐ（1－ｐ））＾ｎ/2の意味が分からなかった。,"通信路を介してビット列を伝送する際、ノイズの影響により、ビットの反転が起きる。自動誤り検出はビット反転があったことを検出し、再送してもらうものである。自動誤り訂正は自動誤り検出のあとビット反転を訂正するものである。ハミング距離の定義は長さの等しい2つのビット列x,yに対しxとyのハミング距離を以下で定義できることである。d(x,y)=(x[i]≠y[i]となるiの個数）。3次繰り返し符号による誤り訂正は各ブロック(3ビット)におけるビットの反転が2個以上の時、誤り訂正は不可能である。n次繰り返し符号では各ブロック(nビット)におけるビットの反転がk個以下の時、誤り訂正が可能(n=2k+1)。ｎ次繰り返し符号はｎを大きくするほど0に近づき、伝送速度が低下するという短所がある。通信路符号化定理は通信路容量Ｃの通路が与えられたとき、任意の整数ε、δに対して、符号化効率Ｒ＝Ｃーε、ブロック誤り率Ｐ＜＝δとなるような通信路符号が存在するとするものである。ＲはいくらでもＣに近づけることができ、Ｐはいくらでも小さくできる。",,
C-2021-2_U57,"今回の授業も前回に引き続き情報伝達に関する授業で、通信を正確に行うための工夫はまだまだたくさんあるということが分かった。どの方法にもデメリットが存在するということも実感することができた。
",数式が増えてきたので整理するのが難しくなってきた。なぜこのような式を立てているのかを理解しながら授業をうけるのが前よりもできなくなってきた。,通信路を通してビット列を転送すっる際はノイズの影響を受けてビットの反転がおきる。これを防ぐための工夫がなされている。このように情報の伝達には誤りがつきものであり、それを防ぐための技術もある。例えば、三次繰り返し符号による誤り訂正があるが伝達速度がさがるなどのデメリットもある。,誤り訂正の基本アイデアのところが視覚を伴って理解することができたのが良かったです。,特にありません。
C-2021-2_U58,各ビットをｎ倍して誤りを検出するとき、ｎが大きいほど確実性はあがるが情報量が大きくなってしまう。,最後の誤り検出の表がりかいできなかった。,"（＊記入場所を間違えていたので、もう1度正しい場所に書き直します。）
通信するときノイズが入るため、それで誤って信号を受信することがないように冗長化している。
自動で誤りを検出、訂正するためにビットをｎ倍することがあるが、これは確実性は高いが情報量が多く送電速度が下がる。
通信路容量に限りなく近づく情報量は存在する。
","文系には難しい。
きつい。",
C-2021-2_U59,具体例を聞きながら、情報の自動検出、自動訂正がどのような条件で行われるかを大体理解できた。,通信路符号化定理の部分。,,,特にありません。
C-2021-2_U6,ハミング距離の意味と働きが理解でき、実際にハミング距離からその符号でどの程度の誤り検出が可能でどの程度の誤り訂正が可能なのかの計算ができるようになった。,通信路符号化定理の話がいまいち意味が分からなかった。式が最終的に何を言いたいのかはなんとなくわかるが、式の意味はよく分からないくらいのあやふやな理解になってしまっている。,通信にはノイズがのるのが当たり前であり、ノイズをなくすことよりも、ノイズに強い暗号をなくす方が効率と経済面でよい。そして暗号では「自動誤り検出」「自動誤り訂正」の二つがありS＋１以上でS個の誤りの検出、２t＋１以上はなれていればt個の誤りの訂正が可能。そしてそのために符号の数を増やしハミング距離を延ばすという工夫がされている。,後半の集中力が欠けて、何を言っているかわからなくなってしまった。最初から最後まで気を抜かずに集中して受けるようにしたい。,
C-2021-2_U60,誤りと自動検出や自動訂正が可能な符号語同士の距離との関係性について本質的に理解できた。,通信路符号化定理について、なぜこのようなことが言えるのかが分からなかった。,"ビットの反転(ノイズ)の起こる確率を反転確率pとしたとき、kビットのブロックを伝送する際の誤り率はPB=1-(1-p)^kと表される。誤り率は符号化を工夫することで小さくすることが可能である。
長さの等しい2つのビット列x,yに対して、xの第iビットとyの第iビットとが一致しない個数をxとyのハミング距離として定義したとき、
高々n個の誤りに対して、符号語同士の距離がn+1以上ならば自動検出が、符号語同士の距離が2n+1以上ならば自動訂正がそれぞれ可能である。
1ビットの情報をn回繰り返すような符号をn次繰り返し符号と呼び、ブロック誤り率はnが大きくなるほど小さくなるが、符号化効率や伝達速度はnが大きくなるほど低下する。
符号化効率R=m/n(m:符号化前のビット数、n:符号化後のビット数)の上限を通信路容量と呼ぶ。通信路容量は通信路に固有の値で、C=1-H(p)=1-p(-logp)-(1-p)(-log(1-p))と定義される。
通信路容量を引き続きCとしたとき、任意の正の数δ,εに対して、R=C-ε,PB≦δとなるような通信路符号が存在するという定理を通信路符号化定理と呼ぶ。",ここのところ、授業の復習はともかく、予習が出来ていないため、今後は予習中心で学習していきたい。,
C-2021-2_U61,符号語どうしの差がどれだけあるかによって誤り検出ができるかどうかが変わる,,ノイズによる誤りに対する対策,課題出し忘れるので、忘れないようにします,
C-2021-2_U64,通信路の上でノイズによりビット反転が起こることがあるので、その際の符号化の工夫によってブロック誤り率を小さくすることができることがわかった。また、符号語どうしがs＋1以上離れているならば高々s個の誤りについて自動検出が可能であり、符号語どうしが2t+1以上離れているならば高々t個の誤りについて自動訂正が可能であることがわかった。ハミング距離の大きさによって何個まで自動誤り検出、自動誤り訂正ができるかの問題を解くことができた。,通信路容量と通信路符号化定理の式についてあまり理解できなかった。また、符号化効率についても詳しい理解ができなかった。,第４回は通信路符号化について学んだ。ビット反転の誤りを検出しその後訂正する、自動誤り検出、自動誤り訂正というものがある。また、それがどの程度できるのかやn次繰り返し符号の長所はブロック誤り率を小さくできることであり、短所は伝送速度が遅くなることについて学んだ。,符号間のハミング距離によって、どの程度自動誤り検出と自動誤り訂正ができるかが理解できてよかった。通信路容量と通信路符号化定理については深い理解にまで至らなかったので、しっかり復習したいと思う。,
C-2021-2_U65,通信路符号についての理解が深まった,（スライド４６～）誤り検出訂正符号のところが難しかった。,"通信路を介してビット列を伝送する際、ノイズの影響でビットの反転が起きる。
無線通信システムなら、
・送信電力を大きくし、信号対雑音電力費を向上
・大型のアンテナを使い、受信信号電力を向上
・受信アンプを冷却し、受信器内の熱雑音を減少
・より広い周波数帯域を利用
自動誤り検出とはビット反転があったことを検出し、再送してもらうこと。
自動誤り訂正とは自動誤り検出の後ビット反転を訂正すること
ハミング距離・・・長さの等しいい二つのビット列ｘ、ｙに対しｘとｙのハミング距離を以下で定義ｘ[i]とy[i]がイコールにならない。
ブロック誤り率はｎ次繰り返し符号のｎによって変化し、ｎを大きくすれば小さくできるが、そうすると符号効率は落ちる、

通信路に固有の値で符号化効率Ｒの上限
",アリのたとえがとても分かりやすかった。,特にありません
C-2021-2_U66,自動検出と自動訂正の仕組みを理解することができたので後半も詰まることなく理解できた。,通信符号化定理のところは調べておきます。,ノイズの影響でビットの反転が起きてしまった際、それを検出、訂正する方法。自動検出、自動訂正の仕組み。,今日の授業の内容は比較的わかりやすかったと思います。ノイズは普段意識することはあまりありませんが、今日習ったような工夫がなされていることを初めて知りました。,
C-2021-2_U67,,相互情報量の計算の仕方が何も見らずにできるかといわれるとできないが、計算の仕方はだいたい理解することができた。,情報の量を示すために曖昧さを示すものとしてエントロピーを用いる。また情報量としてはめったに起きないものほどあたいが大きくなる。また情報量の期待値を調べるときもエントロピーを用いる。この時、情報の数が二つの場合、1/2のときが最大の値となる。そして二つ程度の情報の有無を見るとき、相互情報量を用いる。,,
C-2021-2_U68,アリジゴクの図のように考えて、具体的にどの距離まで誤り訂正、検出ができるのか求められるようになった。,,"誤り訂正や誤り検出ができる範囲はハミング距離によって異なり、ハミング距離が大きいほど誤り検出、訂正できる範囲は広くなる。
符号を伝達するときには低い確率でノイズによって符号が逆転してしまう。この問題に対処するために、符号語の語長を長くしたりすればよいが、長くすればするほど情報処理が重くなってしまうため、両者のバランスが大事である。",ノイズによる情報の伝達ミスの確率を下げるために語長を増やしたりハミング距離の長い符号語を用いるというのが面白いと感じた。,
C-2021-2_U69,,,,今回の講義は前回よりも内容が難しくなっていたように感じた。ただ、演習問題はしっかりと解けたのでよかったと思う。次週はさらに難しくなることが予想されるのでもう一度今回の内容を復習し、内容を整理した上で臨みたいと思う。,
C-2021-2_U70,今日の内容でわかったことは、情報の送信には誤りが生じるのは仕方のないことではあるが、それを防止したり、自動で検出、訂正をする方法があったりするということである。,無線通信システムにおける反転確率を小さくする方法の中の、受信アンプを冷却する部分で、冷却することによって雑音が減るメカニズムがよくわからなかった。,今日の授業の内容は主に、通信の過程における情報の誤りについて、誤情報がおこる確率やそれを防ぐ方法についていくつか学んだことに加えて、その防止策の通用しにくいスマートフォンや、誤情報を検知したり自動検出したりする方法について３次元繰り返し符号とハミング距離という視点から学習した。,今日の授業は途中で回線が弱くなってしまって一部説明を聞き逃してしまったので、復習をしっかりとして内容の理解につなげたい。,
C-2021-2_U71,ノイズ発生による誤りを検出、訂正する基本的なアイデアとして繰り返し符号を用いることや通信符号化定理について分かりました。,,本日の講義では、通信符号化についてノイズの発生とその影響によってビットが反転することやそれを防止するための通信路の改善や工夫を、そして通信符号化定理を学びました。,今日の講義では、特にわからないことはなくスムーズに理解できました。,
C-2021-2_U72,講義中で理解できた。,特にありません。,通信路を用いてビット列を送ったときにノイズにより０と１が反転する場合がある。ビットの誤りが発生する確率をpとするとkビット誤りがなくデータを送れる確率は1-(1-p)^kと表せる。できればデータを誤りを少なく送りたいので、インフラ整備は前提として、自動誤り検出と訂正をしたい。ここで「ハミング距離」を定義する。これは長さの同じ文字列の第i列目に着目、何個違うかを調べるものである。符合語同士のハミング距離がs+1の時、s個の誤りを自動検出できる。符号語同士のハミング距離が2t+1の時、s個の誤りを自動訂正できる。ここからハミング距離が短い場合はそれを伸ばせばいいことがわかる。つまり、例えば１という１ビットの情報を１を2k+1ビットにして、多数決的に０か１かを決めれば、誤りは劇的に減る。しかしこのようにすると効率があまりにも悪い。そこで、全体がn個のビットのうちm個のビットが符号語になっているとして、mビット部分を情報ビット、n-mビットを検査ビットとすると、この検査ビットの部分がハミング距離になり、離れた分先述したように検出、訂正ができる。,,
C-2021-2_U74,,,,今回の授業では個人的に何度か気になったどうしてスマホから連絡を取ることができるのかということのほんの少しですが知ることができたと思います。そして情報を伝えることのすごさというものを改めて実感しました。,
C-2021-2_U75,"ノイズの影響でどのようなことが起きるのか、またノイズによる誤った伝達をなるべく減らすにはどうしたらいいのかが分かりました。符号語同士のハミング距離で自動検出や自動訂正ができる誤りの個数が
決まることが分かりました。",通信路符号化定理についての内容があまり分からず、理解するのが難しかったのでもう一度確認して理解したいです。,通信路ではノイズの影響で白丸と黒丸の反転が起こる。ノイズを減らす対策として、通信路を改善して反転確率を小さくする方法と通信路はそのままで符号化を工夫してブロック誤り率を小さくする方法がある。後者では自動誤り検出や自動誤り訂正を使う。長さの等しい２つのビット列ｘ、ｙでｘとｙのハミング距離はｘの第iビット≠ｙの第iビットとなるiの個数である。一般に、符号語同士がｓ＋１以上離れているならば高々ｓ個の誤りについて自動検出が可能であり、符号語同士が２ｔ＋１以上離れているならば高々ｔ個の誤りについて自動訂正が可能。また、ｎ次繰り返し符号（ｎ＝２ｋ＋１）でｎビットの各ブロックにおけるビットの反転がｋ個以下の時誤り訂正が可能である。ｎが大きくなればブロック誤り率は小さくなるが、符号化効率は小さくなり伝達速度が低下する。通信路に固有の符号化効率の上限を通信路容量という。メッセージをｍビットのブロックに分割したとき各ブロックに検査ビットをつけてｎビットにすると符号化効率はm/nとなる。符号語間のハミング距離ができるだけ大きくなるように設計される。,通信路におけるノイズがどのようなものか、ノイズと前回まで出てきた白丸と黒丸の列がどのように関係しているかを理解することができてよかったです。分からなかった部分は復習して分かるようにしておきたいと思います。,
C-2021-2_U76,どんな時に自動検出が可能で、自動訂正ができないかなど、図を用いてしっかりと理解することができた。,通信路符号化定理の式が難しかったです。,"通信路符号化の際に、自動で誤りを検出する機能と誤りを訂正する機能がある。互いの情報が十分に離れている割合と誤字のしかた（同じ誤りの数を持つ情報が2つあるなど）によって自動検出および自動訂正が可能かどうかは変わってくる。また、多数決符号と言って、1ビットの情報が送信されるとき3つのビットが連なったブロックが送信されるがノイズによってどれか一つが変化してしまった場合でも、多数決によって元の正しいビットに訂正される。またこれには1ビットのデータを送るときに3ビットの情報を送ることが必要である。ハミング距離はd(x,y)=(x【i】≠y【i】)で求められる。

",今回、名前の例は少ない人数の中でのことでしたが、膨大なデータの中で処理をして自動検出、自動訂正をするのはとてもすごいことであり、またそれが正常にそしてなるべく効率的に行われるようにデータの送信法が工夫されていてとても面白く感じました。,
C-2021-2_U78,ハミング距離と誤り数により訂正や修正のできる範囲を知った。N　字繰り返し符号の性質について知った。,通信路符号化定理や通信路容量の計算が難しかった。,信号の符号化による誤りについて、自動訂正や、自動修正について学んだ。,,
C-2021-2_U79,誤りについてどんなときに自動検出が可能で自動訂正が可能かについて理解できた。,,通信路を介してビット列を伝送する際にノイズの影響で起きるビットの反転という不具合を訂正または検出する仕組みについて学んだ。,,
C-2021-2_U8,誤り検出、訂正が可能になる条件についてしっかり理解できた。誤り訂正ができる場合と、誤り検出ならできる場合、誤り検出すらできない場合の区別ができるようになった。,通信路符号化定理の理解に時間がかかった。,情報が伝達されるときは通信路符号化がなされる。その際の通信路にノイズの影響でビットが反転することがある。ビットの反転が起こる確率を反転確率といい、その値からブロックを伝送する際の誤り率ブロック誤り率を求めることができる。反転確率を小さくする対策として、通信システム自体の改善や符号化の工夫がある。通信路復号器には自動誤り検出と自動誤り訂正の機能がある。このとき、符号語どうしがs＋1以上離れているならば高々ｓ個の誤りについて自動検出が可能であり、符号語どうしが２ｔ＋１以上離れているならば高々ｔ個の誤りについて自動訂正が可能である。ｎ次繰り返し符号においては、ｎビット（ｎ＝２ｋ＋１）におけるビットの反転がｋ個以下のとき誤り訂正が可能であり、ｋ＋１個以上のとき誤り訂正は不可能である。ｎ次繰り返し符号ではｎを大きくすればいくらでも小さくできるが、ｎを大きくするほど伝送速度が低下する。通信路には上限がある。誤り検出、訂正符号では情報ビットに検査ビットを付加し、符号間のハミング距離ができるだけ大きくなるように設計している。,今日の授業はしっかり予習をしていたこともあり、比較的すぐ理解できた。確率の知識はやはり重要であると感じたので復習をしていこうと思った。,
C-2021-2_U80,誤りを検出できるハミング距離と訂正できるハミング距離について理解できました。また、どういった考え方に基づいて誤りの検出などが行われているのかが理解できました。,繰り返し符号の部分が少し難しいと感じました。,通信路符号化についての説明がありました。また、誤りを検出したり訂正したりする方法や考え方についての説明もありました。,誤りの検出や訂正について数学を利用した考え方が出てきたのが印象的でした。これまで自分が学んできたことは様々な分野に応用が効くという実感があり、非常に興味深かったです。,特にありません。
C-2021-2_U81,自動誤り検知、訂正のしくみを理解できた。,繰り返し符号による誤り訂正の詳しい仕組みが完璧に理解できなかった。,通信路符号化におけるビットの反転、その対策として誤り検出、訂正の基本アイデアと理論を学んだ。,予習としてテキストを読んで臨んだが、少々難しかった。復習に力を入れたいと思う。,
C-2021-2_U82,誤り検出と誤り訂正の求め方が分かりました。,特にありません。,繰り返し符号の、誤り検出と誤り訂正を習いました。,"誤り検出や訂正は面白い内容だなと思いました。
",特にありません。
C-2021-2_U83,ハミング距離について理解できた,,,,
C-2021-2_U85,"通信路を介してビット列を伝送する際ノイズの影響によりビットの反転が起きる。対策としてはビットの反転確率を低くする方法があるが、これが難しい場合もある。もう一つの方法には、符号化を工夫するというものもある。
符号語同士がs+1以上離れているならば高々ｓ個の自動検可能
符号語同士が2ｔ＋1以上離れてるならば高々ｔ個の誤りについて自動訂正が可能。",やっぱり計算が難しかった,ビットが反転しないための対策方法やした際の検出する仕組み、訂正する仕組みなどを学んだ。,計算を頑張る,
C-2021-2_U86,誤りを自動で検出、または訂正できる条件が分かった。,,"高々ｓ個の誤りについて、ハミング距離がｓ＋１以上の時は自動検出でき、２ｓ＋１以上の時は自動訂正できる。
",通信路符号化定理の証明について少し調べてみようと思った。,
C-2021-2_U88,誤り検出および自動訂正の可能な範囲についての理解ができた。いかに情報を効率的に送るかと、ノイズに対してどれだけ強くするかのバランスが大事であることがわかった。,まだ補足の方の相互情報量と通信路容量についての理解が完全では無い気がする。,今回は情報通信の過程でノイズによって起こりうる誤りに対しての誤り検出および自動訂正について学んだ。,コンピューターがどのようにして誤りという不確実なものを処理しているのかがわかり、非常に面白かった。,
C-2021-2_U89,ビットの反転確率が小さいと思っても、データの量は膨大なので、通信路符号化技術がないと、ほとんどのデータが間違って伝わってしまうということが分かった。また、具体的に通信路符号化はどのようにするのか、数式もあったので理解しやすかった。,通信路符号化定理の部分が理解できなかった。,通信路符号化とは、データをブロックに分割し、各ブロックを冗長化して、自動誤り訂正をしやすくする技術である。符号語どうしがs＋１以上離れているならば、最高ｓ個の誤りについて自動検出が可能。また、符号語どうしが2t＋１以上離れているならば、最高t個の誤りについて自動訂正が可能。繰り返し符号にすることによって、ハミング距離を伸ばし、各符号語の守備範囲を重ならないようにすることが可能で、ブロック誤り率を下げることができるが、符号化効率が下がる。通信路容量＝通信路固有の、符号化効率の上限。mビットのデータに検査ビットを追加して、nビットになったとき、符号化効率はm/n。,通信路符号化は今までに考えたこともなかった分野だった。たしかに今考えれば、０と１だけの記号で膨大な量を通信していたら、少しはずれてもおかしくないのに、それをこの授業を受けるまで気づかなかったということは、通信路符号化技術の素晴らしさを物語っていると思う。,
C-2021-2_U9,,,通信路を介してビット列を伝送する際、ノイズの影響でビットの反転が起きることがある。このような反転する確率を反転確率、誤る確率をブロック誤り率という。ブロック誤り率を小さくするため、符号化を工夫する必要がある。このような通信路符号化では、まず符号化の段階で、メッセージを各ブロックに分割しそれぞれを冗長化する。それを送信し、受信し復号の際には誤りを訂正できるようにする必要がある。ここで、どのようにして冗長するかを工夫する必要がある。符号語(各ブロックに現れうるビット列)同士がs+1以上離れているとき高々s個の誤りについて自動誤り検出(ビット反転があったことを検出し再送してもらう)可能、符号語同士が2t+1以上離れているとき高々t個の誤りについて自動誤り訂正(自動誤り検出の後ビット反転を訂正する)可能である。誤り訂正の手段として、繰り返し符号(復号の際に多数決で元のものを決める)があり、この方法では、(2k+1)次繰り返し符号のとき各ブロック(2k+1ビット)におけるビットの反転がk個以下のとき誤り訂正が可能となる。この方法ではブロック誤り率は下げられるが、符号化効率Rが悪くなるため伝送速度が低下する。この短所を打開する際、通信路符号化定理が活躍する。それは「通信路容量Cの通信路が与えられたとき、任意の正数ε、bに対して、符号化効率RはR=C-ε、ブロック誤り率はb以下となるような通信路符号が存在する」という定理だ。(ここで、通信路容量とは通信路に固有の値で、C=1-H(p)で表されるものである。)この定理を活用することで、Rはいくらでも Cに近づけることができる一方、ブロック誤り率はいくらでも小さくすることができる。つまり、通信路符号化では、まずメッセージをmビットのブロックに分割し、そして各ブロックに検査ビットを付加しnビットにする。このとき、符号語は2のn乗個のうち2のm乗個であることに注意する。また、長さの等しい2つのビット列x、yに対し、xの第iビットとyの第iビットが異なるときのiの個数をハミング距離というが、符号語間のハミング距離が出来るだけ大きくなるように設計することも重要となる。そのようにして冗長化することで、ブロック誤り率を下げながら符号化効率も良くすることができる。,少し分かりにくかったです。どのような場合にどれだけ反転の検出や訂正が可能なのかをきちんと整理・理解したうえで、今回の内容を身につけようと思いました。,特にありません。
C-2021-2_U91,,,通信路を介してビット列を伝送する際、ノイズの影響でビットの反転が起こる。それを防ぐために、通信路の改善や、符号化の工夫が行われている。今回はこのうち、符号化の工夫に焦点を当てる。ビット列を冗長化することで、誤りを見つけ出しやすくなる。,,
C-2021-2_U93,"符号化を行ったり、符号化の誤りを検出する際に大切なことを理解することができた。
特に、符号語の誤り検出に関しては蟻地獄の例を用いて説明していてとてもわかりやすかった。",情報通信符号化定理によって、符号化効率を通信路容量に限りなく近づけられることや、ブロック誤り率を限りなく０に近づけられることが分かったが、その具体的な方法については分からなかった。,"情報を送る際に、情報の形を変える符号化について学んだ。符号化においては情報を伝達するときにノイズが生じないようにすること、また万が一ノイズが発生してしまったとしてもそれを検出して訂正するといったことが重要になってくる。
誤り検出に関しては、符号語同士が似すぎていないことが正しく誤りを検出するために重要となる。",,特にありません。
C-2021-2_U94,間違いの自動検出や間違いの訂正ができる範囲の概念について理解することができました,"通信路符号化定理についての理解があまりできませんでした。もう一度復習したいと思います
",今日は通信路符号化についての講義でノイズなどで間違えが起きた際にどのような条件であれば自動検出できたり間違い訂正できるのかという内容でした,大まかな概念は理解できましたがまだ理解できていないところがあるので復習や演習問題を通し次回までに理解したいです,
C-2021-2_U96,ほとんどの内容を理解できた。少し先に進みながら授業を受けることができた。,,,一番初めに検査ビットを思いついた人はとても賢いと少し感動した。だんだん情報科学の授業が面白くなってきたので、このまま意欲をもって取り組み続けたいと思う。,
C-2021-2_U97,,・通信路符号化定理について,・通信路符号化について・自動誤り検出と自動誤り訂正について・ハミング距離について,,
C-2021-2_U98,自動検出と自動訂正の基準を計算できる,,主に自動訂正と自動検出について勉強した。数学的に計算をしてどのように用いられているかも学んだ,高校でも習ったことなので思い出しながら勉強できた,
C-2021-2_U99,符号語同士が具体的にどれほど離れていれば誤りを検出でき、どれほど離れていれば訂正可能なのかを数値で表すことができる。また、誤りが生じたときに自動検出、自動訂正の精度が上がる方法として3次繰り返し符号がある。ただし、伝送速度が低下するというデメリットもある。,通信路符号化定理がよくわからなかった。,通信路で符号化した後、情報が伝送されるまでにノイズが発生するが、このノイズによって誤りが生じた符号を正確に復号するために符号同士が似た形にならないように新たな符号を差し込んだりすることで、誤りを検出、訂正しやすくすることができる。,符号化した後どのように誤りを正しやすくしているのかが分かった。,
C-2022-1_U11,シーザー暗号や単一換字暗号の仕組みと平文への直し方、非対称鍵暗号について公開鍵があるのにも関わらず非公開鍵を知らない人が暗号を復号できない理由やRSA暗号の仕組みがわかった。,,暗号とは第三者からの情報を秘匿するための技術であり、暗号とそれに対する攻撃のどちらも考えなければならない。最古の暗号であるシーザー暗号では平文の文字をK個ずらすため、総当たり攻撃で、単一換字暗号では頻度分析攻撃で平文に戻される可能性がある。これらは対称鍵暗号と呼ばれるが、公開鍵と秘密鍵で暗号化や復号を行う非対称鍵暗号であるRSA暗号は非常に大きな素数とmodを利用するため、秘密鍵を知らない人が現実的な時間で暗号を復号することはできない。,,
C-2022-1_U12,今日紹介された暗号のそれぞれの特徴、リスクがわかりました。,公開暗号と秘密暗号の話が少しわかりませんでした。,暗号化、平文化するにはシーザー暗号や単一換字暗号などがあるがこれらは総当たりや頻度分析攻撃などで攻撃される恐れがある。そこでRSA暗号という公開鍵と秘密鍵が異なる暗号を使う。これを解読するのは現実的な時間で不可能である。,今日は計算があまりややこしくなかったということもあり比較的理解をするのが早かったです。,20ページの公開暗号のイメージがわかりませんでした。どうして受信者Bが２つのカギを持っているのですか？
C-2022-1_U13,"RSA暗号を使うことで情報の安全性が上がるということ。
またそのカギとなる暗号の桁数を多くすればするほど、桁数に伴い因数分解には指数的な時間がかかるようになるので解読することは現実的には不可能になること。",自分たちが何かサイトなどにログインする際に設定しているパスワードはどういうところで役に立っているのかということ。,,"情報の暗号化の仕組みを考えたこともなかったけど、コインロッカーのように身近にも非対称鍵暗号の仕組みが使用されていることに驚きました。そう考えると、無意識のうちにもこのような仕組みはほかの日常生活にも応用されているように感じたので気を配りながら生活してみたいと思います。
また、コンピューターの性能が上がっているこの社会でもたくさんの時間がかかったり、解読できなかったりするものもありいくらでも先はあるんだなと思いました。",
C-2022-1_U14,,,対象鍵暗号とは、ひとつの鍵で情報をやり取りするものでシーザー暗号や単一換字暗号などが含まれるが、鍵をどのように安全に受信者に渡すかという鍵配送問題が生じる。対して非対称鍵暗号は暗号化と復号化で異なる鍵を使用するロッカーのようなものである。受信者は自分の公開鍵を公開しておく。送信者は受信者の公開鍵で暗号化して受信者に送る。RSA暗号は、最初の公開鍵暗号であり、ふたつの大きな素数の余りの世界を考える。この暗号を解読するには秘密鍵を入手しなければならない。総当たり攻撃や、Nの因数分解を求める方法などがあるが、非常に時間がかかる。（公開鍵Nの指数的な時間）,"余りの世界を使うことである文字で違う文字列にできていてすごいなと思いました。今までmodは何のためにあるのかよくわからなかったけど鍵のように使っていてこんなふうに使えるんだと知ってmodの見方が変わった気がします。
",
C-2022-1_U15,一見解読不可かと思われた単一換字暗号であっても平文の文字の頻度の偏りや、意味の通った文であることを考慮して解読すると意外と単一換字暗号であっても攻撃が可能であることが分かった。,,情報を通信する際第三者から通信の内容を守るための技術を暗号といい、暗号化した文を元に戻す作業を復号と呼ぶ。暗号化と復号の関係によって対象鍵暗号と非対称鍵暗号の二つに分けられるが、前者は暗号化と復号の鍵が対称的であるのに対し、後者は暗号化と復号に異なる鍵を用いる点で異なっている。非対称鍵暗号では公開鍵と秘密鍵の二種類を使用し、受信者は自身の公開鍵を全ての人に公開し、送信者は受信者の公開鍵で平文を暗号化し受信者に送り、その後受信者が暗号文を自分の秘密鍵で復号するといった手順が必要である。公開鍵暗号の一つとしてRSA暗号があるが、これは暗号化したい情報を適当なサイズのブロックに分け、各ブロックを二進数とみなし負でない整数の列とし、その平文を累乗やmodを利用して暗号化することを指す。,水掛論的にも思える鍵配送問題を異なる鍵を使うという単純かつ抜本的な方法で解消したのが目から鱗だった。,
C-2022-1_U17,暗号とは内容を秘匿にするための技術である。素因数分解は機械でも時間がかかるという性質を活かしたPSA暗号というものがある。暗号に用いる文字の種類（ひらがな、記号、アルファベットなど）を増やすと何も知らない人間からの復号は莫大な時間がかかり困難になる。,,ネットワークの普及によって需要が高まっている、内容を秘匿にする技術である暗号の種類の紹介。,"暗号の種類をたくさん知ることができて興味深かった。何を用いた暗号があるのか知っておくだけでテレビなどでよく見る謎解きなどで考えの候補が増えて面白いと思った。
",
C-2022-1_U18,,特にありません。,,"かなり簡潔で分かりやすかった。ネットが重かったので、早めにページを開いて置きたい。
",特にありません。
C-2022-1_U19,公開鍵と秘密鍵の二つを使用する非対称鍵暗号による手法をとることで、鍵配送問題に対応することができる。,,第三者への情報の漏えいを防ぐために、平文を暗号化する必要があり、対象鍵暗号と非対称鍵暗号とに分類される。,,
C-2022-1_U20,,秘密鍵の漏洩があった時には素早く秘密鍵の返還をすることが可能であるのか。,,今回ははじめて聞く単語が多くあったのでしっかり復習やさらに調べていきたい。,
C-2022-1_U21,公開鍵を使う平文の暗号化の仕方がわかりました。mod の計算はひさしぶりだったけどできたのでよかったです。,,今日の授業では暗号についてしました。公開鍵とか秘密鍵とかややこしいなと思いました。RSA暗号はmodの計算を必要としており、それが結構面倒だなと思いましたが、情報をきちんと守るためには大切なことなんだなと思いました。,"普段はコンピューターに勝手にやられている暗号化を自分でできたのは面白いなと思いました。
ただ計算はめんどくさいのでコンピューターにやらせたいなと思いました。",
C-2022-1_U22,対称鍵暗号と非対称鍵暗号がどういう違いなのか理解できた。,今日の授業は理解できた,暗号とは特に悪意ある第三者から通信の内容を隠す技術である。最古の暗号は、紀元前５０年頃のシーザー暗号である。これと、単一換字暗号は対称鍵暗号であり、暗号化と復号の鍵が対照的である。これに対し、、暗号化と復号に異なる鍵を使う暗号を非対称鍵暗号という。,今日の授業は大体理解できたのでよかった。前回のわからなかったところの復習に時間を当てたい。,
C-2022-1_U23,,,情報の記号列の暗号化について学んだ。,,
C-2022-1_U25,"公開鍵（E,N)、秘密鍵D、素数ｐ,ｑとすると、N＝ｐ×ｑ、E×D＝ｋ×LCM（ｐ-1,ｑ-1）+1
（平文のE乗）modN＝（暗号文）、（暗号文のD乗）modN＝（平文）
公開鍵（E,N)は公開する。秘密鍵Dと素数p,qは公開しない。
",特になかった。,"暗号とは、第三者から通信の内容を秘匿するための技術。
シーザー暗号とは、メッセージの文字をK文字分右にずらして暗号化したもの。総当たり攻撃ですぐ見つかる。
単一換字暗号とは、単純にK文字ずらすだけでなく、文字に一対一対応をとったもの。総当たり攻撃では不可能。平文の文字の頻度には偏りがあるので、頻度分析攻撃をすると効果的。
シーザー暗号や単一換字暗号は、暗号化と復号の鍵は対照的であったが、平文を暗号化して送る前に、受信者に鍵を伝える必要がある。復号鍵を攻撃者に知られたくないけど、そのためにはまた別の暗号が必要である。これを鍵配送問題という。暗号化と復号に異なる鍵を使うのを非対称鍵暗号という。非対称鍵暗号では、公開鍵と秘密鍵の二種類の鍵を使用し、受信者は、自分の公開鍵を誰にでもわかるように公開しておく。送信者は、受信者の公開鍵で平文を暗号化し、受信者に送る。受信者は、暗号文を自分の秘密鍵で復号する。
RSA暗号では、二つの大きな素数の積の余りの世界を利用する。RSA暗号への攻撃は難しい。
",RSA暗号は一見簡単そうだけど実は攻撃が難しいのがすごいと思った。,
C-2022-1_U26,"いろんな暗号のかけ方でも攻撃を避けるために複雑にすると復号が難しくなったりする
総攻撃するには指数的に通りが増えていくので少し複雑にするだけで一気に難しくなる",RSA暗号の公開鍵と暗号鍵の概念がロッカーの話では理解できたが、情報上ではまだぼんやりとしか理解できなかった。,"第三者から通信の内容を知られないために暗号化する。シザー暗号では総当たり攻撃されるので単一換字暗号にしようとすると総当たりは厳しくなる
復号するためのカギを受信者に伝えるために暗号化と復号に異なるカギを使用して一方を公開鍵にすることで鍵配送問題を解決する
RSA暗号は余りの概念でやり取りする","今は何も考えずに暗号化された情報を送ったり受け取ったりしているがその裏でいろんな試行錯誤があったことを知れて面白かった。
今後コンピューターの計算精度が上がり総当たり攻撃で暗号が解かれることが容易になることも考えられると思ったし、そのたびに複雑な暗号化が考えられていくのか気になった。",
C-2022-1_U27,,スライドの３１ページ目がピンとこなかった。,"暗号とは、外部の人から通信内容を守るための技術であり、その中で例えば単一換字暗号だと、総当たり攻撃は現実的に不可能だが、頻度分析攻撃を使うと可能となることがある。また、単一換字暗号のように暗号化と復号の鍵が本質的に同じであるものを対称鍵暗号といい、暗号化と復号に異なる鍵を使うものを非対称鍵暗号という。最初の公開鍵暗号であり、単一換字暗号であるRSA暗号では、公開鍵E,Nはわかるが、秘密鍵DとNを構成する素数の組がわからないため、現実的に秘密鍵Dを求めることは難しいという仕組みになっている。",日常でも様々なものが暗号化されているが、簡単そうなものでも現実では復号不可能なほど強固なものもあることに驚いた。今日でAの授業が終わったので、今までの復習をしっかりして内容をもう一度理解しなおしながら宿題を進めていきたい。,
C-2022-1_U28,,,,最後のほうで集中力が途切れてしまった。,
C-2022-1_U29,,,　私たちは悪意ある第三者から情報を秘匿するために暗号を使う。大昔に使われていた暗号は、受信者に安全に復号鍵を渡すためにはどうすればよいのかという「鍵配送問題」が生じていた。これを解決するために非対称鍵暗号が発案された。受信者側の公開鍵で送信者が平文を暗号化し、それを受信者が自身の秘密鍵で復号する仕組みであるため、そもそも鍵を配送せずに済む方法である。,　非対称鍵暗号を発案した方々の凄さに感動しました。紀元前から暗号が存在していたこと自体知らなかったので、暗号の進化の過程に大変興味を抱きました。今後、どんな新しい暗号化の仕組みが生み出されるのか楽しみです。modの計算頑張ります。,
C-2022-1_U3,"単一換字暗号では総当たり攻撃では莫大な時間がかかてしまうが、頻度分析攻撃を仕掛けることができるということがわかった。また、非対称暗号のRSA暗号の成り立ちと具体的な計算方法がわかった。
演習問題１　pankeekitabetai
演習問題２　7^16mod12=1
演習問題３　8^3mod33=8mod33*64mod33=17
　　　　　　17^7mod33=17*25^3mod33=8
",単一換字暗号に対して総当たり攻撃を仕掛ける際、文字の種類がMの時、復号化鍵F -１の候補となる写像の種類数はM！になる理由がわからなかった。,"暗号化とは第三者から情報を見られることを防ぐ技術であり、対称暗号と非対称暗号がある。対称暗号とはシーザー暗号や単一換字暗号といった、暗号化と復号の鍵が本質的に同じ暗号のことである。これらは受信者に鍵を伝える必要があるため鍵配送問題が起こる。これを解消するために、非対称暗号が生み出された。非対称暗号では、送信者が公開鍵を使って平文を暗号化し、受信者が秘密鍵を使ってそれを復号する。例えばRSA暗号では、暗号化にy=x^EmodN、復号にx=y^DmodNの式を用い、公開鍵を（E,N）、秘密鍵をDとする。桁数の多い数の因数分解には膨大な時間がかかるため、RSA暗号は比較的安全である。",RSA暗号は、暗号化にy=x^EmodN、復号にx=y^DmodNという一見単純な式に見えるが、N＝p*qのNをとても大きな数にすると因数分解に時間がかかり、解読するのが難しいという仕組みに感心した。送信者側が暗号化する時の鍵は公開しても、受信者側が復号する時の鍵がわからなければ良いというのは不思議な感覚だが、コインロッカーのイメージで納得することができた。,単一換字暗号に対する攻撃で、なぜ文字の種類がMの時、復号化鍵F -１の候補となる写像の種類数はM！になるのですか。
C-2022-1_U31,,,,計算が多めだったため少し大変だった。様々な暗号がありそれぞれに弱点があることが興味深かった。,
C-2022-1_U32,RSA暗号のような非対称鍵の暗号はとても使い勝手が良く、RSA暗号は安全だということがわかった。,,暗号について。ノイズなどの被人為的な攻撃でなく、人為的な攻撃に対処するための通信手段について。RSA暗号。,,
C-2022-1_U33,暗号の種類や、暗号を解除する鍵の作られ方について理解できた。,特にありません,暗号について、種類、「鍵」の説明,,
C-2022-1_U34,,,平文の暗号化そして暗号文の復号化についての授業だった。シーザー暗号からRSA暗号まで徐々に進化していく暗号の複雑さとそれに伴って高度化する攻撃について学ぶことができた。改めて数字と言葉の強力さを実感した。,,
C-2022-1_U35,RSA暗号は解読するのにコンピューターをつかってもすごく時間がかかるということが分かった。因数分解など総当たりでしか解の得られないものはコンピュータでも時間がかかる。,,暗号化の方法とその安全性の高さの違い。,RSA暗号の安全性はコンピュータの性能に反比例してこれから低くなっていくと思った,
C-2022-1_U37,,１３ページの写像についての話がよくわからなかったのでよく復習しておこうと思った。,,,
C-2022-1_U38,"シーザー暗号
単一換字暗号
対象鍵暗号と非対称鍵暗号の違い
RSA暗号
公開鍵と秘密鍵について
暗号に対する攻撃",,情報を伝える人以外に知られたくない場合は、暗号化する必要がある。受信者は暗号化された情報を復号することによって情報を見ることができる。対象鍵暗号であれば暗号化と復号が同じ鍵であるが、非対称鍵暗号は違う鍵である。非対称鍵暗号では送信者が公開鍵を使って暗号化、受信者が秘密鍵を使って復号する。,,
C-2022-1_U39,"暗号がどのようなものなのかわかった。
どのようにしてメールなどが暗号化されて送られているのか分かった。
公開鍵暗号がわかった。
RSA暗号の計算ができるようになった。",,,RSA暗号感動した。,
C-2022-1_U4,RSA暗号の詳しい仕組みを理解することができた。,,,,
C-2022-1_U41,暗号の種類やmodについて,,,,
C-2022-1_U42,"・暗号とは第三者から通信の内容を見れないようにするための技術である
・実際にある例として、文字をK文字（Kは任意の数）ずらして暗号化するシーザー暗号がある。しかしこれは総当たり攻撃でいつか解かれてしまう可能性がある。しかし単一換字暗号という文字の
一対一の対応をとった暗号だと、文字がM種類のとき、対応する文字もM種類あり、よってM！通りの候補があるので総当たり攻撃されても解かれてしまう可能性は低い。また、これらのような暗号を対象鍵暗号という。この種類の暗号は複合鍵を相手に知らせないといけない。（これを鍵配送問題という）
・別の例としてRSA暗号というものがある。これは情報を適当なサイズのブロックに分け、各ブロックを二進法と見做し、負でない整数で暗号化するものである。このような暗号を非対称鍵暗号といい、鍵配送問題がなくなるというメリットがある。またRSA暗号に関しては桁数を大きくすると攻撃されても解かれにくくなる。",,"・暗号とは
・実際にある暗号の一例
・対象鍵暗号と非対称鍵暗号",ネット上での暗号は目の前で行われているのを見ることができないので今まで意識したことは全くなかった。また暗号はドラマや漫画だったり、実際に子供の頃に遊びで使っていたが、どれも対象鍵暗号であった。そして今回の授業でRSA暗号のような非対称鍵暗号の存在を知った。暗号化する鍵と復号化する鍵を違うものにするという発想にとても驚いた。1回目の授業から今回の授業まで符号のことや伝達のことなどネット上のことについて色々学んだが、どれも発想が面白く、興味を持つことができた。,
C-2022-1_U44,素数の組み合わせ、log関数などを使うことで、暗号を複雑化する事ができる。,"E ,D,Nの関係、求め方をまだ自分の中で咀嚼しきれていないので、意識的に復習していきたい。",文字にそれぞれ対応する文字を規則的に与えることで、平文を暗号化できる。しかし、悪意ある第三者にそれを解読されないように、暗号の解読には、指数的な時間がかかるように工夫されている。,,
C-2022-1_U45,,,,,とくにありません。
C-2022-1_U46,公開鍵と秘密鍵のことが、コインロッカーの例えのおかげで分かりました。,mod式を解くのに時間がかかってしまったので、頑張りたいです。,"コインロッカーで例えると、公開鍵はお金、秘密鍵は鍵である。
公開鍵=E,N、秘密鍵=Dとすると、暗号化のときy=x^E modN
                                                           復号するときx=y^D modN",今日の授業だけでなく以前の授業の復習もきちんとして、課題をスムーズにやっていきたいです。,特にありません。
C-2022-1_U47,,,暗号とは、第三者から通信の内容を守るための技術。,様々な暗号について学ぶことができて面白かった。,
C-2022-1_U48,,前から思っていたが｢高々〜｣ってなぜ付けているのだろうかと思った。,,情報の暗号化は何となく自分の生活に直接関係しているように思えるのに今までいかに自分がそういうことに興味を持たずに生活してきたのかが分かった。これからはその分野にも興味を持って調べて見たりしようと思った。,
C-2022-1_U49,暗号化は時代が進むにつれ進歩している。初期のシーザー暗号などに比べるとRSA暗号はmodが利用されかなり複雑で攻撃は難しい。,RSA暗号の計算,暗号化には様々なやり方があり、時代が進むにつれほかの人からの攻撃を逃れることができ、解読されにくいようなものが考えられ利用されている。また1977年に開発された最初の公開鍵暗号であるRSA暗号では攻撃をするのに因数分解を必要とし、現在知られている因数分解法では指数的に膨大な時間がかかるため、攻撃が難しくなっている。,自分が普段何気なく使っているパスワードなどがこのように暗号化されていたと知り驚きました。,
C-2022-1_U5,,,,4兆の1000兆倍という数字を見て驚いた。暗号が自分が思っているよりも安全なんだなと思った。過去の暗号（シーザー暗号）なども知れて面白かった。,
C-2022-1_U50,"情報通信技術の発達に伴って安全性を守るために暗号が複雑化しているが、逆に言えば暗号解読の技術も高くなっていると言えそう。暗号化されているから大丈夫だろうと油断せず、自分である程度ネットの使い方に気をつけることが重要である。
演習問題",,"・暗号は第三者に通信の内容がバレないようにするために用いられる
・シーザー暗号はアルファベットをそれぞれ同じ数だけずらす暗号の種類で、総当たりなどで全体の解読が可能になる。
・単一換字暗号はそれぞれの文字を一つずつの文字に対応させる暗号の種類であり、文字の出現頻度などから解読が可能になる。
・非対称鍵暗号は作成と解読で異なる鍵を使う暗号の種類である
・RSA暗号は複雑な素因数分解を用いた暗号であり、未だに効率の良い解読のアルゴリズムは発見されていない。","RSA暗号など有名なものは名前だけ知っていたが、ここまで複雑なものとは知らず、先人たちの頭の良さに驚かせられた。
映画サマーウォーズにてRSA暗号を解読した人の恐ろしさを改めて感じた",
C-2022-1_U51,文字列を数個ずらすのみの暗号の場合はすぐに解読されてしまうが、文字の入れ替え方を少しバラバラにするだけで一気に解読が難しくなる。,コンピュータはどうやって暗号の解読のための計算を行っているのか。,暗号は複数個組み合わせるとほぼ解読不可能になる。,公開鍵と秘密鍵のところらへんがあまり理解できなかったからしっかりと復習をしようと思う。,
C-2022-1_U52,上記の内容を理解しました,RSA暗号が難しいです,"暗号とは
悪意ある第三者からの通信の内容を秘匿するための技術
→計算機・ネットワークの発達と普及を背景に、暗号の重要性は急速に高まっている。

シーザー暗号
・最古の暗号(紀元前50年前頃)
・古代人ローマの軍人ジュリウス・シーザーが使用したと言われる。
・メッセージ(平文)の文字をK文字分右にずらして、暗号化する。

シーザー暗号に対する攻撃
・暗号化された文書から平文を得るにはどうすれば良いか？

　『総当たり攻撃』
・文字の種類集をMとする 
・鍵の候補K＝0〜M-1を全て試せば、いつか必ず平文が得られる。

単一換字暗号
・単純にK文字ずらすだけでなく、文字の一対一対応が取れていればどんな対応関係でも、暗号化の鍵として使える

暗号文＝平文の文字を写像Fによって変換(暗号化)
平文＝暗号文の文字を写像F＾-1によって変換(復合)
→総当たり攻撃は写像の種類を増やすごとにしにくくなる

『頻度分析攻撃』
通常平文の文字の頻度には偏りがあることを利用する

大正鍵暗号(シーザー暗号、単一換字暗号)は暗号化と複合の鍵が対照的であるため、鍵を送る方法を考えなければならない。→鍵配送問題

非対称鍵暗号「暗号化と複合に異なる鍵を使う」
公開鍵と秘密鍵の二種類の鍵を使用する(公開鍵暗号)

・受信者は、自分の公開鍵を誰にでもわかるように公開しておく。
・送信者は、受信者の公開鍵で平文を暗号化し、受信者に送る。
・送信者は、暗号文を自分の秘密鍵で複合する。

RSA暗号
1977年MITの学者が開発した、最初の公開鍵暗号、単一換字暗号

暗号化したい情報(ビット列)を適当なサイズのブロックに分ける。
各ブロックを2進数とみなし、負ではない整数の列の暗号化を考える。
RSA暗号では、二つの大きな素数の席の余りの世界を利用する。",,
C-2022-1_U53,,,暗号化した情報を相手だけに伝えるために、公開鍵と秘密鍵を使い分ける。,modが実用的に使われているのを初めて見て、このようなところで高校数学の知識が役に立つのかと感心した。,
C-2022-1_U54,昔は非常に単純な暗号を使っていたが、時代が進み、インターネット社会になって、現在は攻撃者から暗号を見破られないように、受け手に暗号と鍵を渡す方法を試行錯誤している段階であるということがわかった。,,,RSA暗号は高校生の時に授業で取り扱われ、難しかったため苦手意識があったが、今回の授業を聞いて復習を終えて、わかるようになった。これから時々思い出して振り返ることによって、きちんと使える知識として蓄積したい。,
C-2022-1_U56,暗号の種類を知り、特徴を抑えることができた。,modの計算がたまに合わなくなってしまいました。,暗号とは第三者から通信の内容を秘匿するための技術である。暗号の種類には、シーザー暗号・単一換字暗号・対称鍵暗号等があり、強度は様々である。単一換字暗号であるRSA暗号では２つの大きな素数の積の余りの世界を利用して、平文と暗号文の変換が行われる。,演習問題で実際にRSA暗号を使ってみて、複雑な式でわかっている数字もあまり関係がなさそうなのに本当に暗号複合の操作ができて驚いた。,
C-2022-1_U58,対象鍵暗号の特徴を理解することができた。,,,,
C-2022-1_U6,"今まで暗号化と復号が新しいものが生み出されては、攻撃手段ができてまた改善されてきたと知って、自分が当たり前のように使っているが改めて通信のすごさがわかった。
RSA暗号のmodの計算方法と意味を知り、計算できるようになった。","秘密鍵が第三者に伝わってしまう場合はあるのか少し気になった。
総当たり攻撃でたまたまはじめの段階で見つかるということもあるような気がするが、それがあってるかの確かめも含めるから時間がかかるのかよくわからなかった。",,,
C-2022-1_U61,初めは総当たりで解ける程度のものだったものが、試行錯誤を経て、より強固になっていくのはわかったが、解こうとする側もより一層パワーUPして狙ってくるわけだから、毎秒のようにセキュリティーはより強固なものにしていくべき,,暗号の歴史を辿る,４階の授業の中で暗号の話は一番とっつきやすい話題だった,
C-2022-1_U63,シーザー暗号は何文字ずれているかわかれば解読できてしまうので、強固な暗号とは言い難いが、単一換字暗号を使えば文字数に対してパターンが階乗で増えていくので、安全性がかなり増す。RSA暗号もパターンが指数関数的に増えるので安全な方。,,,シーザー暗号と単一換字暗号は似てるのに、文字のずらし方を変えるだけで安全性が格段に上がるのが面白いと思った。,
C-2022-1_U64,"シーザー暗号や単一換字暗号は対象鍵暗号で鍵配送問題がおきる
",RAS暗号で余りを使うところ,,,
C-2022-1_U65,,,,"暗号化について絶対に復号することができないことだと思っていたが、「現実的に」復号ができないという、そのような暗号化の仕方もできるのかととても勉強になった。
計算問題は毎回すぐには解けないので、自分で手を動かして何度か練習しようと思う。",
C-2022-1_U66,,,,紀元前から暗号が使われていることに驚いた。暗号を攻撃するには莫大な時間が必要で、想像以上に暗号を解読するのは不可能だと感じた。,
C-2022-1_U67,素数が偉大だということがわかりました。また、RSA暗号が今のところは一番復号しにくくて安全だということもわかりました。,RSA暗号の計算式の成り立ちがわかりませんでした。,暗号の方法について。悪意のある第三者から情報を盗まれないようにカギを用いて情報を守っている。,私の周りでは、数学が好きな人は素数を好きと言っていることが多かったのですが、まだまだ分かっていないことがたくさんあるからなのだと今日気がつきました。このことをセキュリティに活用しようと考え始めた人は頭がいいなと思いました。暗号を破られる頃にはさらに難しい暗号が発明されていてほしいです。矛盾ホコタテの盾がずっと勝っていてほしいです。,テストをうけるのにおいて、どこまで深く理解しておかなくてはいけないのかしりたいです。
C-2022-1_U68,,公開鍵と秘密鍵の計算手順は理解はできたが、少し複雑な計算式のように感じたので本当にわかっているか不安に感じる。,,,
C-2022-1_U69,RSA暗号の2進数とmodを使った暗号化の仕方がわかった。,,第３者から通信の内容を見られないようにするために情報を暗号化する必要がある。シーザー暗号や単一換字暗号などが存在するがこれらでは鍵配送問題が生じてしまうため非対称鍵暗号が作られた。その際に使う公開鍵暗号にはRSA暗号があり、余り(mod)を利用することで受信者は自身だけがわかる秘密鍵を得られる。この秘密鍵は解読が極めて難関であることが知られている。,,
C-2022-1_U7,情報を暗号化して送るときの様々な変換の仕方を学ぶことができました。,,悪意を持つ第三者からの通信の内容を秘匿するために「暗号」が使われる。シーザー暗号や単一換字暗号は文字の一対一の対応を使って暗号化を行う。RSA暗号はmodを使って逆関数の性質を用いる。,,
C-2022-1_U71,シーザー暗号は、最も簡単（？）な暗号化で、簡単に破られる。単一換字暗号は少し複雑だが、使われる文字の頻度などによって推測可能。これら二つは対称鍵暗号であり、本質的には平文と同じ。RSA暗号は３つの特定の数字を用いて復号するが、一つは公開されず、他も因数分解をしないと求める事ができない。因数分解は、コンピュータに効率よく解かせるアルゴリズムがまだないので、現実的な時間では解けない。,modの計算,,,
C-2022-1_U73,,,"シーザー暗号とは平文の文字をK 文字分ずらして暗号化するもので、鍵の候補を全て試せばいつか必ず平文が得られてしまう。単一換字暗号とは、、文字を一対一対応させた暗号のことで、総当たり攻撃はできないが、頻度分析攻撃で暗号が解かれる可能性がある。鍵配送問題とは、復号鍵を攻撃者に知られずにどうやったら受信者に送れるかと言う問題で、その解決策として非対称鍵暗号がある。RSA暗号の前準備として、負でない整数の列の暗号化を考え、二つの大きな素数（２進数で５１２ビット以上）の積の余りの世界を利用する必要がある。秘密鍵を知る人だけが暗号を解くことができる。総当たり攻撃は現実的に無理。
","シーザー暗号はアルファベットの順番を覚えている人ならすぐ暗号がとけてしまいそうだと思った。
単一換字暗号に対して頻度分析攻撃を使うのも現代のコンピュータ技術を使えばすぐ解かれてしまうそうだ。今日の内容は前回のより理解できた。",
C-2022-1_U74,暗号によって攻撃に対する耐性が異なり、複雑なものや文字数の多いもの、時間のかかるものなど、さまざまな種類があること。決まった計算方法があるにもかかわらず相手にばれないのはよく考えられているなと思った。,公開鍵暗号の考え方が少しわかりにくかった。,,,
C-2022-1_U75,"暗号にどんなものがあるのか分かった。また、それらには鍵配送問題といった問題が発生することが分かった。
",RSA暗号の詳しいことについては難しかった。,悪意からの攻撃を防ぐ暗号には、メッセージをK文字分ずらすシーザー暗号、単純にK文字ずらすだけでない単一換字暗号などがある。またここには、鍵配送問題が発生する。これを解決するために非対称鍵暗号がある。また、RSA暗号なども開発されている。因数分解は難しい。,暗号がたくさん出てきてややこしかったですが、少し面白かったです。宿題が出たのでしっかりこなしたいです。,
C-2022-1_U76,"暗号において、一部の情報を公開して一部の情報を明かさないということがわかった。
結論、暗号を解くのはほぼ不可能であることがわかった。",,暗号の仕組みについて,,
C-2022-1_U77,,,,非対称鍵暗号を予習の段階で勘違いして読んでいて、理解するのに授業では遅れてしまった。予習をもっと丁寧に取り組むようにしようと思った。また、理解していたつもりでも誤って理解していたので、復習にももっと時間をかけるようにしたい。,28ページについてです。17を29に暗号化し、これを伝達する場合にはあらかじめ決まっている29を表すビット列を使って伝達するということでしょうか。
C-2022-1_U78,暗号の作られ方、解読方法がわかった。,,RSA暗号は解読が難しい暗号の一つであり、よく使われている。modが使われる。,RSA暗号は、映画サマーウォーズで主人公によって手計算、暗算によって解かれていたが、現実では不可能だということがわかり、安心した。,
C-2022-1_U79,,数学的な部分はやはり難しく、わからなかったが、暗号化の大まかな仕組みはわかった。,通信の際に内容を第三者から守るために暗号化が行われる。シーザ暗号は内容の文字を一定の数だけずらして暗号化するもの。単一換字暗号はそれぞれの文字に対応する文字に変換して暗号化するもの。この二つは、暗号化と復号がそれぞれの逆の手順を踏むものなので受信者の鍵を送らなくてはいけない。これを解決するため、復号化と暗号化で別の鍵を使う非対称鍵暗号というものがある。RSA暗号は合同式を使って元の内容を暗号化する。,,
C-2022-1_U80,,,情報漏洩を防ぐために暗号化は大事,,
C-2022-1_U81,非対称鍵暗号の仕組み,類の様々種類の対称鍵暗号をすぐに把握できなかった。,暗号について,コインロッカーのたとえがすごくわかりやすかった。,
C-2022-1_U84,,,今日はいろんな暗号の仕方と暗号の解除方法の授業であった。暗号化には文字をずらしたり、mod計算をしたりする(割と簡単な計算)が、暗号をとくのは、素因数分解をしたり、時間がものすごくかかったりと、かなり大変な作業である。,"普段知らず知らずに使ってる暗号化がこんなにも大変なことをしていることをしり、驚いた。
演習問題
①7
②1
③17、なりそうな気がします、、、、",
C-2022-1_U85,"シーザー暗号では特定される恐れがあるが、単一換字暗号では120億年かかりほぼ不可能
対称鍵暗号は受信者にも鍵が必要だが、その鍵の配送の仕方に問題がある。
非対称鍵暗号は暗号化と復号に異なる鍵を用いる。
",modの計算,"第３者から通信内容を守るための暗号について
暗号にはシーザー暗号や単一換字暗号、対称鍵暗号や非対称鍵暗号、RSA暗号などがある",身近なことに結びつけながら考えることができてよっかた。今回は初めて宿題が出されたので、LGCやBR-MAPの使い方に慣れつつしっかりと行って、「A」の復習をしていきたい。,
C-2022-1_U86,あんごうにはmodがつかわれている,,暗号化の詳細,まだ分かっただけなのでちゃんと問題を解いて理解を深める,
C-2022-1_U87,RSA暗号という言葉はサマーウォーズという映画での暗号を解読する際に使うものであることは知っていたが、あんなに桁数が多いものを主人公が素因数分解していることを知り、とっても驚いた。,暗号化の際に逆関数というワードが出たのですが、あの所のページの意味があまりできませんでした。,世界には様々な暗号があり、シーザー暗号のように簡単なものから、単一換字暗号のように仕組みがわからなければ攻撃が不可能なものまである。またRSA暗号のように素因数分解をすることによって出せるものもある。,今日は先週と比べて講義内容があまり難しくはなかったが復習して授業内容を定着させたい。,コンピューターであれば最後から三番目のページの１２９桁の数の素因数分解ができるのであるかを知りたいです。
C-2022-1_U88,シーザー暗号、単一換字暗号、RSA暗号の暗号化の方法、解析の方法を大まかに理解した。,,,中田敦彦のYouTube大学で暗号の歴史についての動画を観ていたので、今回の授業では既に知っている所もあり気持ちに余裕をもって授業に臨むことができました。RSA暗号についてが難しかったです。,
C-2022-1_U89,,いろいろな暗号の仕方があって、実際に使われている暗号がどれなのかあまり分かりませんでした。どれにどの暗号が良いとかがあまり分からなくて、もっと知りたいと思いました。また、modの計算を高校のときにあまりしっかりしていなかったので計算方法についても理解できなかったところがありました。,,現代の情報社会で、情報の保護に必要不可欠な暗号について学べて良かったです。今回の授業では高校数学が情報に使われていると今までの中でも特に実感できました。主に受験のために勉強していた数学でしたが、暗号を復号するときに特にしっかり使われていたので、数学は意外と現代技術に必要なのだと驚きました。,
C-2022-1_U9,"RSA暗号を解読するには、現実的でない時間がかかる。
modを用いるとあっという間にややこしくなる。",129桁の素因数分解,情報の暗号化,非対称鍵暗号の例えの、コインロッカーがわかりやすかった,
C-2022-1_U91,modを使って鍵を作る,後半の計算の理解が遅れた,割りにくい素数を多く使うことで復号化を難しくしている,総当たりの復号はとてつもなく時間がかかると思った,
C-2022-1_U92,対称鍵暗号と非対称鍵暗号の違い,,パスワードなどを暗号化する際に英数字の使用頻度からアプローチをかけ解読する方法があり予測しずらいパスワードを作ることが大切,前回と同様です,
C-2022-1_U93,,,情報を守るために昔からいろんな方法を使ってきた。,自分の思っていたより暗号を解くのは難しいなと思った,
C-2022-1_U94,因数分解や秘密鍵を見つけることは、効率のいいアルゴリズムがなく、解読には指数的な時間がかかることを知った。,,暗号というのは最古のシーザー関数からはじまって、rsa関数へと変わっていった。RSA関数の平文から秘密鍵を見つけることは難しい。,暗号をつくるには、相当な時間と知恵がつまっていた。,
C-2022-1_U96,"演習問題１
pankeekitabetai
演習問題２
７の１６累乗のモッド１２が１であるから、、、１
演習問題３
1,、、、１７
2,、、、１７の２たす２足す３乗と考えて、１８１２５ー３３かけ５４９＝８//
",Nからpとqを求めるのは結局現実的に無理なのか。,暗号とは第３者に通信の内容を解らせないようにするためのものである。計算機やネットワークの発達と普及を背景に重要性が高まっている。最古の暗号はシーザー暗号であるよされており、メッセージの文字を決まった数だけ右にズラして暗号化するものである。総当たり攻撃というしらみつぶしの攻撃で突破されてしまう。単一換字記号と言い、文字の対応をあらかじめ決めておくという暗号化の方が強そうである。実際クソ強い。しかしその対応を知らせるための鍵配送問題がある。そこで非対称鍵暗号が活躍するのである。公開鍵というコインと秘密鍵という鍵を使うのである。,情報科学っぽくて楽しかったです。,映画とかでよく見る何かのセキュリティにハッキングするのは何をどうしているのか気になる。
D-2020_U12,,,非周期信号も、周期を無限大に近づけたとみなすことでフーリエを用いて表すことができる。,,
D-2020_U13,フーリエ変換で線形性が成り立つことが分かった,,フーリエ変換について学んだ,,
D-2020_U14,,まだ理解はしていない,,,
D-2020_U15,連続時間信号を離散時間信号に変換する方法,,連続時間信号を離散時間信号に変換,,
D-2020_U18,,たたみ込み積分について、いまいちよく分からなかった。,,,
D-2020_U19,フーリエ級数について一通り復習できたと思います。,まだ何も見ずに計算や証明をすることが難しいです。,前回の周期信号とフーリエ級数から拡張して非周期信号とフーリエ級数の関係について学んだ。２年生の時の電気情報数学で学んだ内容の復習といった感じだった。単位インパルス関数や単位ステップ関数は制御工学でも出てきたので理解が進みやすかった。,,
D-2020_U2,,,フーリエ変換で非周期信号に含まれる複素正弦波の大きさを複素関数で表すことができる。フーリエ逆変換で非周期信号を複素正弦波信号の連続な足し合わせで表現できる。,,
D-2020_U21,フーリエ変換の概念,インパルス応答についての理解,フーリエ変換の方法,,
D-2020_U23,上記に同じ,,,調べ学習という形態は良いがその量が多すぎて厄介だと感じた。,
D-2020_U25,,,非周期関数をフーリエ級数を用いて表す方法,,
D-2020_U28,フーリエ変換の性質について確認できたので、この後しっかり自分んで確かめてみたいです。,前回の演習においてもう少し簡潔に答えを求めることができるとわかったので解きなおしたいです。,非周期信号とフーリエ変換について,,
D-2020_U29,,,,性質とか代表例とか全て証明させるのは、さすがに他の科目との負担を考えてないのではと感じてしまった。,
D-2020_U3,,デルタ関数の具体的な使い方,,フーリエ変換の活用方法を知りたいと思った,
D-2020_U30,周期信号の周期を無限にすることで非周期信号を表現すること、フーリエ変換、逆変換の基本,,周期信号の周期を無限にすることで非周期信号を表現すること、フーリエ変換、逆変換の基本,演習の回答があるのはとてもありがたいです。,
D-2020_U31,,,,フーリエ変換、逆変換は非常に重要な計算だと思うので、性質の証明方法も含めて覚えたいと思う。,
D-2020_U32,フーリエ変換・フーリエ逆変換の定義が分かった。,フーリエ変換の性質や特殊な関数のフーリエ変換の証明ができるかどうか分からない。,,,
D-2020_U34,,デルタ関数がいまいちよく分からなかった。,,フーリエ変換むずかしいと思った。,
D-2020_U35,フーリエ変換の性質が分かった,フーリエ変換が、実際にどのようなことに用いられるのか,フーリエ変換することで、非周期信号についても考えることができる,,
D-2020_U36,,,,少々内容が難解になってきたので、予習・復習をしっかり心がけようと思った。,
D-2020_U37,,,,オンライン授業だからこそできる調べ学習のおかげで理解が深まった気がします,
D-2020_U38,非周期関数のフーリエ変換と逆フーリエ変換の式の導き方,,,,
D-2020_U39,非周期信号も積分でフーリエ変換であらわせることが分かった。,,非周期信号のフーリエ変換とフーリエ変換の特徴について,,
D-2020_U40,"・周期を無限にして非周期信号を扱うと考えること
・フーリエ変換の様々な性質",,非周期信号と様々なフーリエ変換について,,
D-2020_U41,フーリエ変換の性質,,,オイラーの公式すごい。。。。,
D-2020_U42,フーリエ変換の性質と、その計算方法,一部の変換対がなぜそうなるのか,,,
D-2020_U43,"周期T0の信号で、T0 を∞に近づけると非周期信号になる。T0が増加すると、振幅が減少してスペクトルの間隔が密になっていき、連続なスペクトルとなる。
単位インパルス関数：φ()をかけて積分すると、t=0の値φ(0）、t=t0の値φ(t0)を抜き出すことができる。フーリエ変換すると、t=0のとき１、t=t0の時exp(-jωt0)となる。",,非周期信号の性質、フーリエ変換とその性質,授業内容がだんだん難しくなってきたなと思いました。教科書の中にある数式などを自分で調べて理解を深めたいと思います。,
D-2020_U44,フーリエ変換と逆変換,フーリエ変換の具体的な導出,,,
D-2020_U45,フーリエ変換の性質,,,,
D-2020_U47,性質について大まかに知ることはできた,性質の証明は数が多く大変だと感じた,全ての波に対応できるフーリエ変換とその性質について学習した,,
D-2020_U48,非周期信号をフーリエ級数に当てはめる考え方について理解することができた。,T0を無限大に飛ばした時にωの総和が積分になるところまでは理解できたが、そこからどうフーリエ変換と逆フーリエ変換が導かれているのかが良く分からなかった。,"非周期信号を周期無限大の周期信号だと考えてフーリエ級数に適用させる方法→フーリエ変換、フーリエ逆変換
また、フーリエ変換の性質や代表的なフーリエ変換対の紹介",難しかった。計算の仕方などは分かるが、それがどういう意味をもつのかいまいち掴めなかった。,
D-2020_U49,フーリエ変換の性質を導くことができた。,,,もともと知っていたものもありましたが、それらは思い出せたと思います。,
D-2020_U50,まだ、自分の手ですべての証明を確かめたわけではないが、非周期関数の考え方やフーリエ変換の性質、単位関数がどのようなものか分かった。,,,,
D-2020_U52,周期関数に関するフーリエ級数について、周期を無限大にすることで非周期関数に関する式に変形できる。この式こそがフーリ変換公式である。,,非周期関数に対するフーリエ変換について学んだ。,学習済みの内容であったが、細かい式変形などは資料を見ただけでは思い出せないところも多々あったので、ノート作成時に自分で式変形を解いてみて随時確認していきたいと思った。,
D-2020_U55,"フーリエ変換の方法
フーリエ変換の各性質
フーリエ変換対",,"非周期信号の複素正弦波表現
フーリエ変換について",,
D-2020_U56,,畳み込み積分のやり方は少し難しいと感じました．,,,
D-2020_U57,フーリエ変換、逆変換の概要,,非周期信号も周期を無限大と考えることでフーリエ変換、フーリエ逆変換を利用できる,,
D-2020_U6,フーリエ変換、フーリエ逆変換の具体的な計算手順、またフーリエ変換表の使い方、フーリエ変換の性質を用いたフーリエ変換の手順,,,,
D-2020_U62,連続時間信号を離散時間信号に変換することで、離散時刻において連続信号を抜き出せること。連続時間信号の最大周波数の２倍以上の周波数で標本化すれば元の信号を復元できること。,,フーリエ級数のフーリエ変換の、定理と式などについて。,,
D-2020_U63,単位インパルス関数と畳み込み積分がフーリエ変換において重要な役割を果たしていること,フーリエ級数からフーリエ変換を求めるところ,,,
D-2020_U64,,,連続時間信号はサンプリングを行うことで離散時間信号に変換できる。,"サンプリング定理については知っていたが、その理由は知らなかったので今回理解できてよかった。
",
D-2020_U68,フーリエ級数からフーリエ変換、フーリエ変換からフーリエ逆変換の導出方法を再確認することができた。,,,,
D-2020_U7,・サンプリングや標本化定理の概要について学ぶことができた。,,"・サンプリングは，連続時間信号を離散時間信号として抽出することであり，連続時間信号と単位インパルス列の積でサンプル値信号を表現できる。
・標本化定理は，もとのアナログ信号のうち最大の周波数成分をfとすると，2f以上の周波数でサンプリングするとその標本化系列は完全に復元できる，というものである。",,
D-2020_U9,フーリエ変換対が持つ性質についていくつか分かった。,,,自分で性質の証明をやって理解を深めていきたい。,
D-2021_U1,,,"連続信号から離散信号へ
サンプル値信号は元の連続信号とインパルス数列の積であらわされる。
元信号の最大周波数の2倍以上の周波数でサンプリングすることで完全復元可能という標本化定理や、エイリアシングの説明。","前回までの内容から、式を追って理解することが重要だとおもった。
",
D-2021_U100,フーリエ変換の性質について基本的なことは理解できた。その証明もほとんど分かった。,,非周期信号は周期信号の周期を無限大まで大きくしたものである。周期が大きくなると振幅が減少しスペクトルが密になる。周期信号を複素フーリエ級数で表したように非周期信号は「フーリエ変換」することができる。フーリエ変換の性質として線形性、対称性、時間軸の伸縮、時間軸の推移委、周波数の推移、時間微分、周波数微分などがある。また、畳み込み積分やインパルス関数、ステップ関数、指数関数、といった信号のフーリエ変換もある。,スペクトルへの理解がまだ足りていないと感じた。非周期関数についてやフーリエ変換の性質は大体理解することができたのでよぁった。,
D-2021_U101,,,フーリエ変換，性質，デルタ関数の導入,デルタ関数の性質を思い出せてよかった,
D-2021_U102,,,フーリエ変換、逆フーリエ変換、単位インパルス関数、代表的なフーリエ変換対について学んだ,単位インパルス関数のフーリエ変換が少し難しかったのでしっかり復習しておきたい,
D-2021_U103,フーリエ変換の導出の考え方について理解できた。,"フーリエ変換対がもつ様々な性質について、直感的にわからないものがいくつかあった。
演習等を通し、理解が必要だと感じた。","非周期関数のフーリエ級数からフーリエ変換を学んだ。
",フーリエ変換、逆変換の定義が以前学習した時と違ったため、改めて理解することが必要だと感じた。,
D-2021_U104,連続非周期信号は連続非周期スペクトルを持ち、この関係はフーリエ変換で記述されるということ。,,非周期信号の処理の仕方について、フーリエ変換や逆フーリエ変換などを用いてその性質などを含めて学んだ。,いつも通り、わからないところは授業前に補足説明を入れてくれて非常に分かりやすかったです。,
D-2021_U13,,,,周期関数と非周期関数の違いが連続スペクトルとみなせるフーリエ変換ができるかどうかという違いを見つけることができたので良かった。,
D-2021_U14,フーリエ変換、逆フーリエ変換,"畳み込み積分
性質を忘れてしまう
単位インパルス関数","T0を大きくし周期信号を非周期信号とみなす。
フーリエ変換、逆フーリエ変換
畳み込み積分、単位インパルス関数、単位ステップ関数",,
D-2021_U15,非周期信号のフーリエ変換の習得、インパルス関数の性質の理解,,非周期信号のフーリエ変換,,
D-2021_U16,,"F[1]=2πδ(w)になる過程があまりよく分からなかった。
",,フーリエ変換の演習問題をたくさん解いて慣れていきたい。,
D-2021_U17,,,非周期信号、フーリエ変換,,
D-2021_U18,,,非周期信号のフーリエ変換,だんだん理解が深まってきたが、前回の演習がまだわからないところがあるのでしっかり復習する。,
D-2021_U19,,,フーリエ変換の性質,,
D-2021_U20,フーリエ変換の導入など,,,,
D-2021_U21,,,連続時間信号の標本化,フーリエ変換が難しかった。,
D-2021_U22,,畳み込み積分をどのような場面で使うのかと、なぜそうなるのかがわからなかった。,,内容は少し難しかったが、手書きノートの作成や課題を通して、理解を深めることができた。図書館でフーリエ解析に関する本を探して合わせて読んでみることで、授業中の疑問も解消することができた。,
D-2021_U27,,,,しっかりと復習して学習した内容を次回につなげようと思った。,
D-2021_U28,,,非周期信号とフーリエ変換の各種計算,フーリエ変換は既に何度か学んだが、まだわからないところが多いと実感した,
D-2021_U29,フーリエ変換とその性質について学べた,畳み込み積分,非周期信号のフーリエ変換,,
D-2021_U3,インパルス関数がわかった,,非周期信号の考え方とフーリエ変換の性質,,
D-2021_U31,フーリエ変換の概要をつかめた,,,,
D-2021_U32,,,,フーリエ変換も忘れているところがあるので、しっかり復習したい。,
D-2021_U37,フーリエ変換の様々な性質について言葉の上では理解出来た,,,,
D-2021_U41,,,非周期信号の扱い方、フーリエ変換の性質とスペクトル,少しずつ内容が難しくなってきて勉強が大変になってきました。,
D-2021_U46,"周期信号の周期を無限にすると非周期信号になる
フーリエ変換は非周期信号に含まれる複素正弦波の大きさが複素関数で表現される
フーリエ逆変換は非周期信号は複素正弦波信号の連続的な足し合わせで表現できる",,フーリエ変換、逆フーリエ変換の計算等,,
D-2021_U49,フーリエ級数からフーリエ変換、フーリエ変換、逆変換のやりかた,,非周期信号について、フーリエ変換、逆変換やそれらについての特性を学んだ。,,
D-2021_U50,,,,計算が若干面倒だが内容自体は理解できたと思う,
D-2021_U54,フーリエ変換の性質がわかった。,,フーリエ変換について理解を深める。,フーリエ変換もほかの授業でも出てくるので、応用できるようにする。,
D-2021_U57,,,標本化の内容,,
D-2021_U61,フーリエ変換の性質の証明、単位ステップ関数や単位インパルス関数の理解ができた。,,"非周期信号に対して周期を無限大にみなすことで、複素正弦波表現であらわすことができ、フーリエ変換を行うことができ、それがフーリエ逆変換と対をなしていること。
また、線形性や対称性など様々な性質を持ち、単位インパルス関数や単位ステップ関数など信号処理の上で非常に重要な関数を学んだ。",今回の演習で複素数表現でのフーリエ変換の計算を行ったが、三角関数の計算よりとても楽でミスが少なくなると感じた。自分なりに定義の理解をより深めていきたい。,
D-2021_U62,今までフーリエ変換とフーリエ級数について漠然とした理解であったが、ちゃんと理解することができたと思う。また様々なフーリエ変換の性質は実際フーリエ変換を行うときに便利であるなと思った。,,非周期信号についてはT0を無限大に近づけるとみなして扱い、周期と周期信号のフーリエ係数の関係について学んだ。またフーリエ展開の数学的な式を導出した。またフーリエ変換には様々な性質があることや単位インパルス関数、単位ステップ関数などの特殊な関数のフーリエ展開について学んだ。,,
D-2021_U63,フーリエ変換の公式や一部の性質の原理が分かった。,,フーリエ変換について、またフーリエ変換の性質について学んだ授業だった。,,
D-2021_U64,非周期信号のフーリエ変換,,フーリエ変換,フーリエ変換の計算に慣れていきたい,
D-2021_U67,,,,フーリエ変換について去年習ったことを再確認できた。,
D-2021_U69,,特殊なフーリエ変換の周期的な単位インパルス列の式について理解しづらかったです。,非周期信号やフーリエ変換、逆フーリエ変換、フーリエ変換の性質、特殊な関数のフーリエ変換,フーリエ変換・逆フーリエ変換については、これまで他の授業で学習したことがありましたが、フーリエ変換の性質や特殊な関数のフーリエ変換についてこんなに深く学んだことがありませんでした。今回の授業で自分の中のフーリエ変換に対する知識がより深まりました。,
D-2021_U72,,フーリエ変換する前とフーリエ変換した後で利用するtとωが所々入れ替わって使っているのが分からなかった,非周期関数にもフーリエ変換を用いることができることを学び、代表的なフーリエ変換の例を覚えた。,,フーリエ変換対のtとωは入れ替えても何も支障ないのかどうか？
D-2021_U73,"フーリエ変換の復習を行うことができた。
また、フーリエ変換に関する具体的な性質などには初めて触れることができた。",フーリエ変換そのものが何を表しているのかをいまいちイメージすることができなかった。,フーリエ変換の導入,,
D-2021_U74,,,"フーリエ変換は非周期信号を扱う際に用いる。
フーリエ変換の性質は計算をする上で重要である。","2年次よりもフーリエ変換を理解することができた。
導出方法や性質の証明を忘れないようにノートにまとめることができたので、定期的に見直したい。",
D-2021_U75,フーリエ変換の性質について思い出した。,特殊な関数のフーリエ変換。,フーリエ変換の復習。,わかった、わからないボタンの送信をし忘れることが多かった。,特にありません。
D-2021_U76,,フーリエ変換の性質を全部頭に入れられなかった。,,,ありません。
D-2021_U77,非周期信号の表現方式とフーリエ変換の性質が分かった。,,非周期信号とは同じ信号のパターン繰り返しが存在しない信号をいい、周期信号での周期を無限大に近づけたとみなして扱う。,周期信号の周期を無限大に近づくというアイディアが良いと思った。,
D-2021_U79,,,,フーリエ変換表があれば、その性質を用いてできるだけ簡単に計算できることがわかった。,
D-2021_U81,,フーリエ変換の性質の証明は、インターネットなどで調べなければ思いつけなかった。,,"性質については理解するだけでなく応用できるようにする必要があると感じた。
GWを挟んだので授業を受けた後のノート作成をするのが遅くなってしまった。",
D-2021_U83,フーリエ変換、フーリエ逆変換,,,だんだん複雑になってきて理解に少し苦労した。,
D-2021_U84,,,,"大学で習ったことがある内容だったので理解しやすかった
ただ式の利用方法を若干忘れておりなかなか難しかった",
D-2021_U86,フーリエ変換の復習,,,周期を無限大にして考えるという考え方が面白かったです,
D-2021_U88,,,,フーリエ変換の性質が多く理解できるか不安である。,
D-2021_U89,フーリエ変換の性質,,フーリエ級数からフーリエ変換への拡張,,
D-2021_U90,,,本日は非周期信号の場合のフーリエ級数（フーリエ変換）の扱い方を学んだ。,,単位インパルス列のグラフがわかりませんでした。
D-2021_U91,,フーリエ変換対,,フーリエ変換対の記述方法がよくわからなかった,
D-2021_U93,非周期信号の定義やフーリエ級数からフーリエ変換に拡張される際の式変形について理解することができた。,,"非周期信号は、周期信号の定義より、T0->∞にしたものとみなす。
これにより、スペクトルは無限小、不連続スペクトルが連続スペクトルになり、フーリエ級数からフーリエ変換へと拡張される。
また、フーリエ変換の性質や代表的なフーリエ変換を学習した","フーリエ変換の性質など、復習できてよかった。
新しく学習した内容については他人に説明できるくらいまで理解しておく。",
D-2021_U96,,,"非周期信号は周期Toが存在しない信号のことである
複素フーリエ級数においての係数を求める過程においての基本周波数を無限に小さくした結果がフーリエ変換である
フーリエ変換から信号を求める変換を逆フーリエ変換という
フーリエ変換と逆フーリエ変換はフーリエ変換対としてペアとなる
フーリエ変換は複素数の値をもち、絶対値と偏角はそれぞれ、振幅スペクトル、位相スペクトルと呼ばれる
フーリエ変換は広義積分で定義されるので、積分の線形性から様々な定理が成り立つ
単位インパルス関数は入力が0のところで無限大になりそれ以外は0となる関数である
単位インパルス関数とある関数Aの積の積分によって、単位インパルス関数の入力が0になる地点においての関数Aの値が取り出せる
フーリエ変換を行うと信号の周波数成分情報が分かる
周期関数と非周期関数のフーリエ変換の差異は、スペクトルが離散的か、連続的かである","フーリエ変換の性質は積分の性質を用いれば導出できるものなので、ついていくことができた。
まだ信号処理の準備段階なので、よく復習していきたい。",
D-2021_U97,"単位インパルス関数と、ある関数φ(t)の積を全区間にわたって積分すると
単位インパルス関数が∞の値をとる時間のφ(t)の値を抜き出す。",,,,
D-2021_U99,連続非周期信号を連続非周期スペクトルに変換する方法がフーリエ変換です。,,,手書きノートを書きながら授業を聞くと追いつけないので、講義中は大事なところをメモして、講義が終わってからまとめようと思った。,
D-2022_U1,フーリエ変換の主な性質,パーセバルの等式、畳み込み積分,,,
D-2022_U10,,"単位インパルス列
フーリエ変換の意味",,,
D-2022_U14,,"フーリエ変換の性質の一部の意味
単位インパルスと単位ステップ関数を使用することの意味",,,
D-2022_U20,フーリエ変換の導出、畳み込み積分、単位インパルス関数のフーリエ変換,単位インパルス列のフーリエ変換,,,
D-2022_U21,,,フーリエ変換と逆変換について、またフーリエ変換の性質,フーリエ変換と逆変換は何回もしてきたので分かるが、時間推移や周波数推移、微分に関しては慣れておらず理解するのに時間がかかった,
D-2022_U24,,,,非周期信号を計算で扱えるということが分かり、楽しかった。,
D-2022_U25,フーリエ変換の性質の線形性、対称性についてはある程度理解できた。,軸の伸縮や推移や微分、積分がわからなかった。入念な復習が必要だと思った。,フーリエ変換のあらゆる性質がある。線形性、対称性、伸縮、推移、微分、パーセバルの等式、畳み込み積分などさまざま。特殊な関数においてもフーリエ変換が可能である。,,
D-2022_U26,,,　周期的でない信号のフーリエ変換の仕方やそのもとになる考え方,,
D-2022_U27,,,,フーリエ変換の意味がなんとなく分かった気がします。性質が多くて覚えるのが大変だと思いました。,
D-2022_U30,,,フーリエ変換について学習した。,,
D-2022_U32,,,,フーリエ変換の性質は数式ではある程度理解できたがその意味は理解に苦しんだ。またフーリエ級数やフーリエ変換など複雑になってきたので知識の整理を行いたいと思った。,
D-2022_U34,,,周期信号でないフーリエ変換、逆フーリエ変換と性質,,
D-2022_U35,具体的なフーリエ変換の計算ができた。,,非周期信号x(t)も周期を無限大とすることで周期信号とみなすことができる。その時間の関数x(t)を角周波数の関数X(ω)に変換するのがフーリエ変換、その逆の操作がフーリエ逆変換。,,
D-2022_U36,フーリエ,,フーリエ変換（非周期関数に適用）,,
D-2022_U37,,課題の3-2と3-4がわからなかった。,,数学と信号システムでフーリエ変換のくだりは学習したが、フーリエ級数からフーリエ変換への流れは忘れてしまっていた。パーセバルの等式は初耳であった。なんとなくフーリエ変換とフーリエ級数を同一視していたが、よく考えると変換と三角関数の組み合わせで表すことは違うし、そもそも変数の単位も異なるので、名前くらいしか似ていなかった。それくらい曖昧に理解していたのに気づかされた。,
D-2022_U38,,,,,特にありません。
D-2022_U40,,畳み込み積分の考え方,,授業の内容が本格的になり、内容も難しくなってきたので復習に力を入れたい,
D-2022_U42,,フーリエ変換についてはもう少し復習したい,,フーリエ変換についても他の講義で少し学んでいたが、より詳細が理解できた。また、非周期信号があまりピンと来てなかったので知れてよかった,
D-2022_U43,フーリエ変換をさまざまなx(t)に対して施せるようになった．,,フーリエ級数からフーリエ変換への拡張．,単位インパルス系の問題が苦手なので，強化していきたい．,
D-2022_U44,,パーセバルの等式が難しいように思う,フーリエ変換をいったん覚えれば後に非常に楽になる,,
D-2022_U45,,,"非周期信号の数式化
フーリエ変換について","30分前に終わってもらえるのは助かった．
前回の課題のボリュームがとても多かったので，今回の課題は計画的に解いていきたい．",
D-2022_U47,,,,畳み込み積分の計算が難しいが，できないほどではなかった．フーリエ変換をしっかり身につけられた．,
D-2022_U51,,指数関数のフーリエ変換の公式を利用して逆フーリエ変換をすると、指数関数になるということを確かめることはできたが、公式の証明はできなかった。,,何をするときにフーリエ変換がでてくるのかが理解できた。授業中にフーリエ変換の性質を証明しながら聞こうとしたが、間に合わなかったので、もっとフーリエ変換に慣れておきたい。,
D-2022_U52,,,フーリエ変換することで変数をtime → frequency　にすることができてその音の性質を見ることができる。,,
D-2022_U55,正弦波のフーリエ変換や指数関数のフーリエ変換などを理解し、解くことができた。,,フーリエ級数を変形することによって周波数成分を表すフーリエ変換を導出することができる。フーリエ変換には線形性や伸縮性がある。,これから発展していきそうな内容なのでしっかり復習していきたいと思った。,
D-2022_U56,,,,,畳み込み積分の必要性。
D-2022_U57,,パーセバルの等式の導出，フーリエ変換の計算．,フーリエ変換，フーリエ逆変換，パーセバルの等式を学んだ．,少し計算が複雑だったので詰まるところもあった．次回講義で演習の解答を見て復習しておきたい．,
D-2022_U58,,,,フーリエ変換は以前別の講義で学習していたので、今日の授業は復習と思って聞いていた。,
D-2022_U59,,,,内容をよく理解することができた．,
D-2022_U60,,,フーリエ変換の説明,,
D-2022_U61,フーリエ変換の基本的な定理は理解できた。,,複素フーリエ級数の考え方を用いてフーリエ変換する,課題にも式の証明があるため、式の理解を深めたい。,
D-2022_U62,フーリエ変換・逆変換の手順、その性質を理解できました。,計算に不安があります。,,,
D-2022_U65,パーセバルの等式,,,,
D-2022_U67,ナイキストレートなどの新しい話題も理解できた,フーリエ変換が難しい,,,
D-2022_U68,,δ関数のフーリエ変換については覚えてないと厳しい。,,,
D-2022_U69,フーリエ変換,,,,
D-2022_U7,Toが無限大になった時、すなわち非周期信号のときどのようになるかわかった。,フーリエ変換が全くわからなかった、、。,フーリエ変換,フーリエ変換が難しくて全然わからないが、フーリエ級数などをちゃんと理解できていないことも大きいと思うので、前回の授業からちゃんと復習したい。,
D-2022_U70,,インパルス列の捉え方がよくわからなかった,,これからもよく使うことになると思うので使って慣れていきたい,
D-2022_U72,,,周期信号の周期を無限として考えることで非周期信号を考えること、また、フーリエ変換及び逆変換。,,
D-2022_U74,,忘れているフーリエ変換は出来なかった,非周期信号とフーリエ変換,,
D-2022_U76,,,,フーリエ変換の性質やインパルス応答がかなり難しい定義をしているので、これから頑張ろうと思った,
D-2022_U77,,,,フーリエ変換自体は理解してるけどそれがどのように使われるのか全く想像できないので次回以降の授業に期待です。,
D-2022_U80,,,周期信号の周期を無限にすると非周期信号になる、フーリエ変換とフーリエ逆変換の講義,,
D-2022_U83,なんとなくフーリエ変換が何をしているのか,"フーリエ変換
スペクトル
特殊なフーリエ変換",,,
D-2022_U84,,,フーリエ変換について,フーリエ変換は超重要な分野だと思うのでしっかりと復習したい,
D-2022_U85,フーリエ変換の復習。,パーセバルの等式がうまく理解できなかった。,フーリエ級数から非周期信号に対応するフーリエ変換と、代表的なフーリエ変換対例。,徐々にわからない内容が増えてきて若干の焦りを感じている。,
D-2022_U87,"非周期信号は周期信号の間隔を無限として時を考えれば良い．
フーリエ変換の性質．
単位インパルス関数の性質．","フーリエ変換の本質的な意味がよくわかっていないので，
応用例を確認して理解したいと思う．",,,
D-2022_U89,フーリエ変換とは、非周期信号に含まれる複素正弦波の大きさが、複素関数で表現されることが分かりました。またフーリエ逆変換とは、非周期信号は複素正弦波信号の連続的な足し合わせで表現できることを学習しました。,,フーリエ変換について学習した。具体的には、フーリエ変換の公式、逆フーリエ変換の公式、フーリエ変換の性質について学習した。,,
D-2022_U9,フーリエ級数からフーリエ変換への理解ができた。,逆フーリエ変換,,,
D-2022_U90,フーリエ級数からフーリエ変換になるまでの一連の流れが分かった．,,,,
D-2022_U91,,,今回の授業では、周期信号の周期を無限にすると非周期信号になることからフーリエ変換やフーリエ逆変換、その性質を実際に証明などで確認し学習した。,今回の授業よりフーリエ変換についての理解を深めることができた。授業で取り上げられていた性質以外の証明も自分で実際に導出してみて授業ノートにまとめたいと思った。また、演習を通してさらにフーリエ変換の理解を深めていきたいと感じた。,
D-2022_U92,フーリエ級数とフーリエ変換の関係。,スペクトル系のことがよくわからなかった,フーリエ変換の性質について。フーリエ変換には実関数との相関など様々な性質が存在する。,全体的に内容が難しかった。さらに演習を重ねて能力をつけたい。,
